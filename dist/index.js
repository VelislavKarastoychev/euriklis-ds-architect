var D1=Object.create;var{getPrototypeOf:I1,defineProperty:fD,getOwnPropertyNames:B1}=Object;var L1=Object.prototype.hasOwnProperty;var zD=(D,I,L)=>{L=D!=null?D1(I1(D)):{};let B=I||!D||!D.__esModule?fD(L,"default",{value:D,enumerable:!0}):L;for(let S of B1(D))if(!L1.call(B,S))fD(B,S,{get:()=>D[S],enumerable:!0});return B};var A=(D,I)=>()=>(I||D((I={exports:{}}).exports,I),I.exports);var UD=function(D,I,L,B){var S=arguments.length,x=S<3?I:B===null?B=Object.getOwnPropertyDescriptor(I,L):B,M;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")x=Reflect.decorate(D,I,L,B);else for(var R=D.length-1;R>=0;R--)if(M=D[R])x=(S<3?M(x):S>3?M(I,L,x):M(I,L))||x;return S>3&&x&&Object.defineProperty(I,L,x),x};var _T=(D,I)=>{if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(D,I)};var qD=A((wD)=>{Object.defineProperty(wD,"__esModule",{value:!0});var S1="Velislav S. Karastoychev",x1="1.0.0",hD=/^rgb\((25[0-5]|2[0-4]\d|1\d{2}|\d{1,2}),\s*(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2}),\s*(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2})\)$/,_D=["black","red","green","yellow","blue","violet","cyan","grey","none"];class pD{text;styles;constructor(D=""){this.text=D,this.styles=""}get reset(){return this.styles="\x1B[0m",this}get bold(){return this.styles+="\x1B[1m",this}get italic(){return this.styles+="\x1B[3m",this}get blink(){return this.styles+="\x1B[5m",this}get machine(){return this.styles+="\x1B[2m",this}get underline(){return this.styles+="\x1B[4m",this}setColor(D="none"){let I=new Error,L;if(I.name="@euriklis/message package color error",I.message=`Incorrect color type or value. The color which may be used are ${_D.join(" ")} or some arbitrary rgb value`,D==="black")L="\x1B[30m";else if(D==="red")L="\x1B[31m";else if(D==="green")L="\x1B[32m";else if(D==="yellow")L="\x1B[33m";else if(D==="blue")L="\x1B[34m";else if(D==="violet")L="\x1B[35m";else if(D==="cyan")L="\x1B[36m";else if(D==="grey")L="\x1B[37m";else if(D==="none")L="\x1B[0m";else if(typeof D==="string")if(hD.test(D)){let[B,S,x]=D.match(/\d{1,3}/g)||["","",""];L=`\x1B[38;2;${B};${S};${x}m`}else throw I;else throw I;return this.styles+=L,this}get setColorCyan(){return this.setColor("cyan")}get setColorViolet(){return this.setColor("violet")}get setColorYellow(){return this.setColor("yellow")}get setColorGreen(){return this.setColor("green")}get setColorBlue(){return this.setColor("blue")}get setColorRed(){return this.setColor("red")}get setColorBlack(){return this.setColor("black")}get setColorGrey(){return this.setColor("grey")}setBgColor(D="\x1B[0m"){let I=new Error;if(I.name="@euriklis/message library background color error message",I.message=`Incorrect color type in the setBgColor method. The parameter has to be equal to some of the values ${_D.join(" ")}`,D==="black")D="\x1B[40m";else if(D==="red")D="\x1B[41m";else if(D==="green")D="\x1B[42m";else if(D==="yellow")D="\x1B[43m";else if(D==="blue")D="\x1B[44m";else if(D==="violet")D="\x1B[45m";else if(D==="cyan")D="\x1B[46m";else if(D==="grey")D="\x1B[47m";else if(typeof D==="string"){if(hD.test(D)){let[L,B,S]=D.match(/\d{1,3}/g)||["","",""];D=`\x1B[48;2;${L};${B};${S}m`}}else throw I;return this.styles+=D,this}get setBgColorGrey(){return this.setBgColor("grey")}get setBgColorCyan(){return this.setBgColor("cyan")}get setBgColorViolet(){return this.setBgColor("violet")}get setBgColorBlue(){return this.setBgColor("blue")}get setBgColorYellow(){return this.setBgColor("yellow")}get setBgColorGreen(){return this.setBgColor("green")}get setBgColorRed(){return this.setBgColor("red")}get setBgColorBlack(){return this.setBgColor("black")}append(D=""){return this.text+=`${this.styles}${D}\x1B[0m`,this}prepend(D=""){return this.text=`${this.styles}${D}${this.text}\x1B[0m`,this}get appendCopyrightSymbol(){return this.text+="©",this}get prependCopyrightSymbol(){return this.text="©"+this.text,this}get prependRegisteredSymbol(){return this.prepend("®")}get appendRegisteredSymbol(){return this.append("®")}get appendLogicalNotSymbol(){return this.append("¬")}get prependLogicalNotSymbol(){return this.prepend("¬")}get appendLogicalForAllSymbol(){return this.append("∀")}get prependLogicalForAllSymbol(){return this.prepend("∀")}get appendLogicalExistsSymbol(){return this.append("∃")}get prependLogicalExistsSymbol(){return this.prepend("∃")}get appendLogicalConjunctionSymbol(){return this.append("⋀")}get prependLogicalConjunctionSymbol(){return this.prepend("⋀")}get appendLogicalDisjunctionSymbol(){return this.append("⋁")}get prependLogicalDisjunctionSymbol(){return this.prepend("⋁")}get appendLogicalElementOfSymbol(){return this.append("∈")}get prependLogicalElementOfSymbol(){return this.prepend("∈")}get appendLogicalFollowsSymbol(){return this.append("⇒")}get prependLogicalFollowsSymbol(){return this.prepend("⇒")}get appendLogicalInverseFollowsSymbol(){return this.append("⇐")}get prependLogicalInverseFollowsSymbol(){return this.prepend("⇐")}get appendLogicalEquivalenceSymbol(){return this.append("⇔")}get prependLogicalEquivalenceSymbol(){return this.prepend("⇔")}get appendLogicalIdentical(){return this.append("≡")}get prependLogicalIdentical(){return this.prepend("≡")}get appendLogicalNotIdentical(){return this.append("≢")}get prependLogicalNotIdentical(){return this.prepend("≢")}get appendMathNaturalNumbersSymbol(){return this.append("ℕ")}get prependMathNaturalNumbersSymbol(){return this.prepend("ℕ")}get appendMathPartialDifferential(){return this.append("∂")}get prependMathPartialDifferential(){return this.prepend("∂")}get appendMathEmptySet(){return this.append("∅")}get prependMathEmptySet(){return this.prepend("∅")}get appendMathDeterminant(){return this.append("∆")}get prependMathDeterminant(){return this.prepend("∆")}get appendMathNabla(){return this.append("∇")}get prependMathNabla(){return this.prepend("∇")}get appendMathProductSymbol(){return this.append("∏")}get prependMathProductSymbol(){return this.prepend("∏")}get appendMathSummationSymbol(){return this.append("∑")}get prependMathSummationSymbol(){return this.prepend("∑")}get appendMathIntersectionSymbol(){return this.append("∩")}get prependMathIntersectionSymbol(){return this.prepend("∩")}get appendMathUnionSymbol(){return this.append("∪")}get prependMathUnionSymbol(){return this.prepend("∪")}get appendMathIntegralSymbol(){return this.append("∫")}get prependMathIntegralSymbol(){return this.prepend("∫")}get appendMathDoubleIntegralSymbol(){return this.append("∬")}get prependMathDoubleIntegralSymbol(){return this.prepend("∬")}get appendMathTripleIntegralSymbol(){return this.append("∭")}get prependMathTripleIntegralSymbol(){return this.prepend("∭")}get appendMathProportionalSymbol(){return this.append("∝")}get prependMathProportionalSymbol(){return this.prepend("∝")}get appendMathInfinitySymbol(){return this.append("∞")}get prependMathInfinitySymbol(){return this.prepend("∞")}get appendMathContourIntegral(){return this.append("∮")}get prependMathContourIntegral(){return this.prepend("∮")}get appendMathVolumeIntegral(){return this.append("∰")}get prependMathVolumeIntegral(){return this.prepend("∰")}get appendMathAlmostEqual(){return this.append("≈")}get prependMathAlmostEqual(){return this.prepend("≈")}get appendMathAlmostEqualOrEqual(){return this.append("≊")}get prependMathAlmostEqualOrEqual(){return this.prepend("≊")}get appendMathEstimates(){return this.append("≙")}get prependMathEstimates(){return this.prepend("≙")}get appendMathEqualByDefinition(){return this.append("≝")}get prependMathEqualByDefinition(){return this.prepend("≝")}get appendMathSqrtSymbol(){return this.append("√")}get prependMathSqrtSymbol(){return this.prepend("√")}get appendMathCubeRootSymbol(){return this.append("∛")}get prependMathCubeRootSymbol(){return this.prepend("∛")}get appendMathForthRootSymbol(){return this.append("∜")}get prependMathForthRootSymbol(){return this.prepend("∜")}get appendMathSubsetOfSymbol(){return this.append("⊂")}get prependMathSubsetOfSymbol(){return this.prepend("⊂")}get appendMathSupersetOfSymbol(){return this.append("⊃")}get prependMathSupersetOfSymbol(){return this.prepend("⊃")}get appendHourglassSymbol(){return this.append("⌛")}get prependHourglassSymbol(){return this.prepend("⌛")}get appendKeyboardSymbol(){return this.append("⌨")}get prependKeyboardSymbol(){return this.prepend("⌨")}get appendQuestionMarkOrnament(){return this.append("❓")}get prependQuestionMarkOrnament(){return this.prepend("❓")}get appendBitcoinSymbol(){return this.append("₿")}get prependBitcoinSymbol(){return this.prepend("₿")}get appendEuroSymbol(){return this.append("€")}get prependEuroSymbol(){return this.prepend("€")}get appendFaceWithTearsOfJoy(){return this.append("\uD83D\uDE02")}get prependFaceWithTearsOfJoy(){return this.prepend("\uD83D\uDE02")}get appendHeartSymbol(){return this.append("❤")}get prependHeartSymbol(){return this.prepend("❤")}get appendCoronaVirusSymbol(){return this.append("\uD83E\uDDA0")}get prependCoronaVirusSymbol(){return this.prepend("\uD83E\uDDA0")}get appendAmbulanceSymbol(){return this.append("\uD83D\uDE91")}get prependAmbulanceSymbol(){return this.prepend("\uD83D\uDE91")}get appendPotableWaterSymbol(){return this.append("\uD83D\uDEB0")}get prependPotableWaterSymbol(){return this.prepend("\uD83D\uDEB0")}get appendFaceWithMedicalMaskSymbol(){return this.append("\uD83D\uDE37")}get prependFaceWithMedicalMaskSymbol(){return this.prepend("\uD83D\uDE37")}get appendRoseSymbol(){return this.append("\uD83C\uDF39")}get prependRoseSymbol(){return this.prepend("\uD83C\uDF39")}get appendNotCheckMark(){return this.append("⍻")}get prependNotCheckMark(){return this.prepend("⍻")}get appendCheckMark(){return this.append("✓")}get prependCheckMark(){return this.prepend("✓")}get appendBallotBoxWithCheckMark(){return this.append("☑")}get prependBallotBoxWithCheckMark(){return this.prepend("☑")}get appendWhiteHeavyCheckMark(){return this.append("✅")}get prependWhiteHeavyCheckMark(){return this.prepend("✅")}get appendHeavyCheckMark(){return this.append("✔")}get prependHeavyCheckMark(){return this.prepend("✔")}get appendWarningSign(){return this.append("⚠")}get prependWarningSign(){return this.prepend("⚠")}appendWhiteSpace(D=1){let I="";if(!Number.isInteger(D))D=1;for(let L=0;L<D;L++)I+=" ";return this.append(I)}prependWhiteSpace(D=1){let I="";if(!Number.isInteger(D))D=1;for(let L=0;L<D;L++)I+=" ";return this.prepend(I)}log(){return console.log(this.text),this}info(){return console.info(this.text),this}warn(){return console.warn(this.text),this}error(){return console.error(this.text),this}static author=S1;static version=x1}wD.default=pD});var yD=A((mD)=>{Object.defineProperty(mD,"__esModule",{value:!0});mD.IncorrectParameterInDescribeTxt=mD.IncorrectIterationsParameterInBenchmarkTxt=mD.IncorrectFunctionArgumentInForAnyTxt=mD.IncorrectFunctionArgumentInForAllTxt=mD.IncorrectArgumentInIsInstanceofTxt=mD.IncorrectDescriptionPropertyTxt=mD.IncorrectArgumentsInIsInRangeTxt=mD.IncorrectArgumentsInIsInClosedRangeTxt=mD.IncorrectArgumentsInHasLengthInRangeTxt=mD.IncorrectArgumentsInHasLengthInClosedRangeTxt=mD.IncorrectArgumentInInterfaceTxt=mD.IncorrectArgumentInStringContainsExpressionTxt=mD.IncorrectArgumentInIsLesserThanTxt=mD.IncorrectArgumentInIsBiggerThanTxt=mD.IncorrectArgumentInHasLengthLesserThanTxt=mD.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt=mD.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt=mD.IncorrectArgumentInHasLengthBiggerThanTxt=mD.IncorrectArgumentInHasLengthTxt=mD.IncorrectArgumentInIsNotEqual=mD.IncorrectArgumentInIsEqualOrLesserThanTxt=mD.IncorrectArgumentInIsEqualOrBiggerThanTxt=mD.IncorrectArgumentInIsEqual=mD.IncorrectArgumentInIsEmptyTxt=mD.IncorrectArgumentInBindMethodTxt=mD.IncorrectArgumentInIsArrayAndForAnyTxt=mD.InappropriateValueInIsSameTxt=mD.IllegalUsageOfArgumentInIsArrayAndForEveryTxt=mD.IllegalTypeInForAnyTxt=mD.IllegalParametersInIsArrayOfNumbersInRangeTxt=mD.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt=mD.IllegalParametersInIsArrayOfIntegersInRangeTxt=mD.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt=mD.ErrorMessage=void 0;mD.ErrorMessage="Euriklis validator error message:";mD.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt="Illegal parameters in the isArrayOfIntegersInClosedRange method. Note that the parameters of this method have to be numbers with the first parameter to be less than the second.";mD.IllegalParametersInIsArrayOfIntegersInRangeTxt="Illegal parameters in the isArrayOfIntegersInRange method. The parameters have to be integers and the first to be smaller than the second.";mD.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt="Illegal parameters in isArrayOfNumbersInClosedRange(a, b) method. Note that the parameters of the method have to be numbers and in addition the first has to be smaller than the second.";mD.IllegalParametersInIsArrayOfNumbersInRangeTxt="Illegal parameters in the isArrayOfNumbersInRange() method. Note that these parameters have to be numbers and in addition the first parameter has to be less than the second.";var R1=(D)=>`Illegal type of the this.value in the "forAny" method of euriklis validator module. The value has to be array or object type. The value of the current validator is ${typeof D} type.`;mD.IllegalTypeInForAnyTxt=R1;mD.IllegalUsageOfArgumentInIsArrayAndForEveryTxt="Illegal usage of the argument function of the method. The function has to return validator type.";mD.InappropriateValueInIsSameTxt="Inappropriate value property of the validator instance in the isSame method. You may use this method only if the value is a primitive type, function (async, generator, arrow or conventional function), array, typed array, object or array buffer type.";mD.IncorrectArgumentInIsArrayAndForAnyTxt="Error in the isArrayAndForAny(). Illegal argument in the parameter of the method.";mD.IncorrectArgumentInBindMethodTxt="The argument has to be validator type.";mD.IncorrectArgumentInIsEmptyTxt="This method can be used only for string, array and object types.";mD.IncorrectArgumentInIsEqual="The argument of the method isEqual is not a valid real number";mD.IncorrectArgumentInIsEqualOrBiggerThanTxt="Incorrect argument in the isGreaterOrEqualsTo() method. Note that this argument has to be an arbitrary number.";mD.IncorrectArgumentInIsEqualOrLesserThanTxt="Incorrect argument in isLessOrEqualsTo() method. Note that the parameter has to be an arbitrary number.";mD.IncorrectArgumentInIsNotEqual="The argument of the method has to be a valid real number.";mD.IncorrectArgumentInHasLengthTxt="The argument of the has length method is not integer.";mD.IncorrectArgumentInHasLengthBiggerThanTxt="Incorrect argument parameter in the hasLengthGreaterThan() method. Note that the parameter has to be an Integer.";mD.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt="Incorrect argument in the hasLengthGreaterOrEqualsTo() method of the current validator instance. Note that this parameter has to be an integer.";mD.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt="Incorrect argument in the hasLengthLessThanOrEqualsTo() method. Note that the parameter has to be an integer.";mD.IncorrectArgumentInHasLengthLesserThanTxt="Incorrect argument in the hasLengthLessThan() method. Note that the parameter has to be an integer number.";mD.IncorrectArgumentInIsBiggerThanTxt="Incorrect argument parameter of the isGreaterThan() method. Note that this parameter has to be an arbitrary number.";mD.IncorrectArgumentInIsLesserThanTxt="Incorrect argument parameter of the isLessThan() method. Note that this parameter has to be an arbitrary number.";mD.IncorrectArgumentInStringContainsExpressionTxt='The argument of the "is_this_string_contains_expression_k_times" method has to be string or object type.';mD.IncorrectArgumentInInterfaceTxt="The argument function of the interface method has to return a validator instance.";mD.IncorrectArgumentsInHasLengthInClosedRangeTxt="Incorrect arguments in hasLengthInClosedRange() method. Note that the both parameters have to be integers and the first parameter has to be smaller than the second.";mD.IncorrectArgumentsInHasLengthInRangeTxt="Incorrect arguments in hasLengthInange() method. Note that the both parameters have to be integers with the first element to be smaller than the second.";mD.IncorrectArgumentsInIsInClosedRangeTxt="Incorrect arguments in isInClosedrange() method. Note that both of these arguments have to be numbers with the first argument to be smaller than the second.";mD.IncorrectArgumentsInIsInRangeTxt="Incorrect arguments in the isInRange() method of the validator instance. Note that these parameters have to be arbitrary numbers and in addition the first has to be smaller than the second.";mD.IncorrectDescriptionPropertyTxt="Incorrectly defined description property. The description has to be a string or a number.";mD.IncorrectArgumentInIsInstanceofTxt="Incorrect parameter instance. The instance has to be InstanceType.";mD.IncorrectFunctionArgumentInForAllTxt="The callback argument of the forEvery method of the euriklis validator module has to be function type.";mD.IncorrectFunctionArgumentInForAnyTxt="The callback argument of the forAny method of the euriklis validator module has to be a function with argument a validator instance.";mD.IncorrectIterationsParameterInBenchmarkTxt='Incorrect parameter iterations in the benchmark function. The "iterations" has to be a positive integer.';mD.IncorrectParameterInDescribeTxt="Incorrect parameter in the describe method. The message has to be a string type."});var bD=A((F)=>{var t1=F&&F.__createBinding||(Object.create?function(D,I,L,B){if(B===void 0)B=L;var S=Object.getOwnPropertyDescriptor(I,L);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[L]}};Object.defineProperty(D,B,S)}:function(D,I,L,B){if(B===void 0)B=L;D[B]=I[L]}),v1=F&&F.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),o1=F&&F.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var L in D)if(L!=="default"&&Object.prototype.hasOwnProperty.call(D,L))t1(I,D,L)}return v1(I,D),I};Object.defineProperty(F,"__esModule",{value:!0});F.IncorrectParameterInDescribe=F.IncorrectIterationsParameterInBenchmark=F.IncorrectFunctionArgumentInForAny=F.IncorrectFunctionArgumentInForAll=F.IncorrectDescriptionProperty=F.IncorrectArgumentInIsInstanceof=F.IncorrectArgumentsInIsInRange=F.IncorrectArgumentsInIsInClosedRange=F.IncorrectArgumentsInHasLengthInRange=F.IncorrectArgumentsInHasLengthInClosedRange=F.IncorrectArgumentInStringContainsExpression=F.IncorrectArgumentInIsNotEqual=F.IncorrectArgumentInIsLesserThan=F.IncorrectArgumentInIsEqualOrLesserThan=F.IncorrectArgumentInIsEqual=F.IncorrectArgumentInIsEqualOrBiggerThan=F.IncorrectArgumentInIsEmpty=F.IncorrectArgumentInIsBiggerThan=F.IncorrectArgumentInIsArrayAndForAny=F.IncorrectArgumentInInterface=F.IncorrectArgumentInHasLengthLesserThan=F.IncorrectArgumentInHasLengthEqualsOrLesserThan=F.IncorrectArgumentInHasLengthEqualsOrBiggerThan=F.IncorrectArgumentInBindMethod=F.IncorrectArgumentInHasLength=F.IncorrectArgumentInHasLengthBiggerThan=F.InappropriateValueInIsSame=F.IllegalUsageOfArgumentInIsArrayAndForEvery=F.IllegalTypeInForAny=F.IllegalParametersInIsArrayOfNumbersInRange=F.IllegalParametersInIsArrayOfNumbersInClosedRange=F.IllegalParametersInIsArrayOfIntegersInRange=F.IllegalParametersInIsArrayOfIntegersInClosedRange=void 0;var X=o1(yD()),E=(D)=>{let I=new Error;throw I.name=X.ErrorMessage,I.message=D,I},d1=()=>E(X.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt);F.IllegalParametersInIsArrayOfIntegersInClosedRange=d1;var i1=()=>E(X.IllegalParametersInIsArrayOfIntegersInRangeTxt);F.IllegalParametersInIsArrayOfIntegersInRange=i1;var r1=()=>E(X.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt);F.IllegalParametersInIsArrayOfNumbersInClosedRange=r1;var n1=()=>E(X.IllegalParametersInIsArrayOfNumbersInRangeTxt);F.IllegalParametersInIsArrayOfNumbersInRange=n1;var s1=()=>E(X.IllegalTypeInForAnyTxt(""));F.IllegalTypeInForAny=s1;var u1=()=>E(X.IllegalUsageOfArgumentInIsArrayAndForEveryTxt);F.IllegalUsageOfArgumentInIsArrayAndForEvery=u1;var l1=()=>E(X.InappropriateValueInIsSameTxt);F.InappropriateValueInIsSame=l1;var a1=()=>E(X.IncorrectArgumentInHasLengthBiggerThanTxt);F.IncorrectArgumentInHasLengthBiggerThan=a1;var e1=()=>E(X.IncorrectArgumentInHasLengthTxt);F.IncorrectArgumentInHasLength=e1;var TS=()=>E(X.IncorrectArgumentInBindMethodTxt);F.IncorrectArgumentInBindMethod=TS;var DS=()=>E(X.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt);F.IncorrectArgumentInHasLengthEqualsOrBiggerThan=DS;var IS=()=>E(X.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt);F.IncorrectArgumentInHasLengthEqualsOrLesserThan=IS;var BS=()=>E(X.IncorrectArgumentInHasLengthLesserThanTxt);F.IncorrectArgumentInHasLengthLesserThan=BS;var LS=()=>E(X.IncorrectArgumentInInterfaceTxt);F.IncorrectArgumentInInterface=LS;var SS=()=>E(X.IncorrectArgumentInIsArrayAndForAnyTxt);F.IncorrectArgumentInIsArrayAndForAny=SS;var xS=()=>E(X.IncorrectArgumentInIsBiggerThanTxt);F.IncorrectArgumentInIsBiggerThan=xS;var MS=()=>E(X.IncorrectArgumentInIsEmptyTxt);F.IncorrectArgumentInIsEmpty=MS;var RS=()=>E(X.IncorrectArgumentInIsEqualOrBiggerThanTxt);F.IncorrectArgumentInIsEqualOrBiggerThan=RS;var HS=()=>E(X.IncorrectArgumentInIsEqual);F.IncorrectArgumentInIsEqual=HS;var VS=()=>E(X.IncorrectArgumentInIsEqualOrLesserThanTxt);F.IncorrectArgumentInIsEqualOrLesserThan=VS;var FS=()=>E(X.IncorrectArgumentInIsLesserThanTxt);F.IncorrectArgumentInIsLesserThan=FS;var $S=()=>E(X.IncorrectArgumentInIsNotEqual);F.IncorrectArgumentInIsNotEqual=$S;var AS=()=>E(X.IncorrectArgumentInStringContainsExpressionTxt);F.IncorrectArgumentInStringContainsExpression=AS;var PS=()=>E(X.IncorrectArgumentsInHasLengthInClosedRangeTxt);F.IncorrectArgumentsInHasLengthInClosedRange=PS;var WS=()=>E(X.IncorrectArgumentsInHasLengthInRangeTxt);F.IncorrectArgumentsInHasLengthInRange=WS;var NS=()=>E(X.IncorrectArgumentsInIsInClosedRangeTxt);F.IncorrectArgumentsInIsInClosedRange=NS;var XS=()=>E(X.IncorrectArgumentsInIsInRangeTxt);F.IncorrectArgumentsInIsInRange=XS;var ES=()=>E(X.IncorrectArgumentInIsInstanceofTxt);F.IncorrectArgumentInIsInstanceof=ES;var JS=()=>E(X.IncorrectDescriptionPropertyTxt);F.IncorrectDescriptionProperty=JS;var KS=()=>E(X.IncorrectFunctionArgumentInForAllTxt);F.IncorrectFunctionArgumentInForAll=KS;var YS=()=>E(X.IncorrectFunctionArgumentInForAnyTxt);F.IncorrectFunctionArgumentInForAny=YS;var ZS=()=>E(X.IncorrectIterationsParameterInBenchmarkTxt);F.IncorrectIterationsParameterInBenchmark=ZS;var OS=()=>E(X.IncorrectParameterInDescribeTxt);F.IncorrectParameterInDescribe=OS});var cD=A((kD)=>{Object.defineProperty(kD,"__esModule",{value:!0});kD.WarningMessage=kD.IncorrectTypeInExecuteWith=kD.IncorrectValueInIsPositive=kD.IncorrectValueInIsNegative=kD.IncorrectStateInOnMethod=kD.IncorrectFunctionInOnMethod=void 0;kD.IncorrectFunctionInOnMethod="Incorrect function argument in on method of the validator method.";kD.IncorrectStateInOnMethod="Incorrect state argument in the on method in the validator method.";kD.IncorrectValueInIsNegative="Incorrect value property of the current validator instance. Note that if the value is not number, the is_negative() / isNegative method is not usable. The method returns false, but the result may be incorrect.";kD.IncorrectValueInIsPositive="Incorrect value property of the current validator instance. Note that if the value is not number, the is_positive() / isPositive method is not usable. The method returns false, but the result may be incorrect.";kD.IncorrectTypeInExecuteWith="Incorrect type of the parameter of the execute_with method. The parameter has to be function or async function.";kD.WarningMessage="Euriklis validator library warning message:"});var tD=A((G)=>{var CS=G&&G.__createBinding||(Object.create?function(D,I,L,B){if(B===void 0)B=L;var S=Object.getOwnPropertyDescriptor(I,L);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[L]}};Object.defineProperty(D,B,S)}:function(D,I,L,B){if(B===void 0)B=L;D[B]=I[L]}),hS=G&&G.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),_S=G&&G.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var L in D)if(L!=="default"&&Object.prototype.hasOwnProperty.call(D,L))CS(I,D,L)}return hS(I,D),I};Object.defineProperty(G,"__esModule",{value:!0});G.IncorrectTypeInExecuteWith=G.IncorrectValueInIsPositive=G.IncorrectValueInIsNegative=G.IncorrectStateInOnMethod=G.IncorrectFunctionInOnMethod=void 0;var v=_S(cD()),TT=(D)=>{console.warn(v.WarningMessage),console.warn(D)},pS=()=>TT(v.IncorrectFunctionInOnMethod);G.IncorrectFunctionInOnMethod=pS;var wS=()=>TT(v.IncorrectStateInOnMethod);G.IncorrectStateInOnMethod=wS;var qS=()=>TT(v.IncorrectValueInIsNegative);G.IncorrectValueInIsNegative=qS;var mS=()=>TT(v.IncorrectValueInIsPositive);G.IncorrectValueInIsPositive=mS;var gS=()=>TT(v.IncorrectTypeInExecuteWith);G.IncorrectTypeInExecuteWith=gS});var dD=A((vD)=>{Object.defineProperty(vD,"__esModule",{value:!0});vD.Benchmark=void 0;var yS=(D,I,L)=>{let B,S,x,M=[];for(B=L;B--;)S=performance.now(),I(D),x=performance.now(),M.push(x-S);let R=M.reduce((J,K)=>J+K,0)/L,H=M.reduce((J,K)=>{let w=K-R;return J+w*w},0),P=Math.sqrt(H/(L-1));return{mean:R,std:P,iterations:L}};vD.Benchmark=yS});var C=A((iD)=>{Object.defineProperty(iD,"__esModule",{value:!0});iD.CheckType=void 0;var bS=(D,I)=>Object.prototype.toString.call(D)===`[object ${I}]`;iD.CheckType=bS});var nD=A((f)=>{var kS=f&&f.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(f,"__esModule",{value:!0});f.ForEveryMapEdition=f.ForEverySetEdition=f.ForEveryObjectEdition=f.ForEveryArrayEdition=void 0;var yT=kS(DT()),jS=(D,I)=>{let L=D.length,B=new yT.default(void 0),S,x;for(S=0;S<L>>2;S++)if(x=S<<2,(B.reset(),B.value=D[x],!I(B,x).answer)||(B.reset(),B.value=D[x+1],!I(B,x+1).answer)||(B.reset(),B.value=D[x+2],!I(B,x+2).answer)||(B.reset(),B.value=D[x+3],!I(B,x+3).answer))return!1;x=S<<2;for(;x<L;x++)if(B.reset(),B.value=D[x],!I(B,x).answer)return!1;return!0};f.ForEveryArrayEdition=jS;var cS=(D,I)=>{let L=Object.keys(D),B=L.length,S=new yT.default(void 0),x,M;for(x=0;x<B>>2;x++)if(M=x<<2,(S.reset(),S.value=D[L[M]],!I(S,L[M]).answer)||(S.reset(),S.value=D[L[M+1]],!I(S,L[M+1]).answer)||(S.reset(),S.value=D[L[M+2]],!I(S,L[M+2]).answer)||(S.reset(),S.value=D[L[M+3]],!I(S,L[M+3]).answer))return!1;M=x<<2;for(;M<B;M++)if(S.reset(),S.value=D[L[M]],!I(S,L[M]).answer)return!1;return!0};f.ForEveryObjectEdition=cS;var tS=(D,I)=>{let L=new yT.default(void 0),B=0;for(let S of D)if(L.reset(),L.value=S,!I(L,B++).answer)return!1;return!0};f.ForEverySetEdition=tS;var vS=(D,I)=>{let L=new yT.default(void 0);for(let[B,S]of D)if(L.reset(),L.value=S,!I(L,B).answer)return!1;return!0};f.ForEveryMapEdition=vS});var sD=A((z)=>{var oS=z&&z.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(z,"__esModule",{value:!0});z.ForAnyMapEdition=z.ForAnySetEdition=z.ForAnyObjectEdition=z.ForAnyArrayEdition=void 0;var bT=oS(DT()),dS=(D,I)=>{let L=D.length,B=new bT.default(void 0),S,x;for(S=0;S<L>>2;S++)if(x=S<<2,(B.reset(),B.value=D[x],I(B,x).answer)||(B.reset(),B.value=D[x+1],I(B,x+1).answer)||(B.reset(),B.value=D[x+2],I(B,x+2).answer)||(B.reset(),B.value=D[x+3],I(B,x+3).answer))return!0;for(x=S<<2;x<L;x++)if(B.reset(),B.value=D[x],I(B,x).answer)return!0;return!1};z.ForAnyArrayEdition=dS;var iS=(D,I)=>{let L,B,S=Object.keys(D),x=S.length,M=new bT.default(void 0);for(L=0;L<x>>2;L++)if(B=L<<2,(M.reset(),M.value=D[S[B]],I(M,S[B]).answer)||(M.reset(),M.value=D[S[B+1]],I(M,S[B+1]).answer)||(M.reset(),M.value=D[S[B+2]],I(M,S[B+2]).answer)||(M.reset(),M.value=D[S[B+3]],I(M,S[B+3]).answer))return!0;B=L<<2;for(;B<x;B++)if(M.reset(),M.value=D[S[B]],I(M,S[B]).answer)return!0;return!1};z.ForAnyObjectEdition=iS;var rS=(D,I)=>{let L=new bT.default,B=0;for(let S of D)if(L.reset(),L.value=S,I(L,B++).answer)return!0;return!1};z.ForAnySetEdition=rS;var nS=(D,I)=>{let L=new bT.default;for(let[B,S]of D)if(L.reset(),L.value=S,I(L,B).answer)return!0;return!1};z.ForAnyMapEdition=nS});var aD=A((uD)=>{Object.defineProperty(uD,"__esModule",{value:!0});uD.HasNaNInTypedArray=void 0;var sS=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,isNaN(D[B])||isNaN(D[B+1])||isNaN(D[B+2])||isNaN(D[B+3]))return!0;for(B=L<<2;B<I;B++)if(isNaN(D[B]))return!0;return!1};uD.HasNaNInTypedArray=sS});var DI=A((eD)=>{Object.defineProperty(eD,"__esModule",{value:!0});eD.IsArrayBuffer=void 0;var uS=(D)=>D instanceof ArrayBuffer;eD.IsArrayBuffer=uS});var o=A((II)=>{Object.defineProperty(II,"__esModule",{value:!0});II.IsTypedArray=void 0;var lS=(D)=>D instanceof Object&&("buffer"in D)&&("byteLength"in D)&&("byteOffset"in D);II.IsTypedArray=lS});var xI=A((LI)=>{Object.defineProperty(LI,"__esModule",{value:!0});LI.IsArrayOfAbstractArrays=void 0;var IT=C(),BT=o(),aS=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!IT.CheckType(D[B],"Array")&&!BT.IsTypedArray(D[B])||!IT.CheckType(D[B+1],"Array")&&!BT.IsTypedArray(D[B+1])||!IT.CheckType(D[B+2],"Array")&&!BT.IsTypedArray(D[B+2])||!IT.CheckType(D[B+3],"Array")&&!BT.IsTypedArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!IT.CheckType(D[B],"Array")&&!BT.IsTypedArray(D[B]))return!1;return!0};LI.IsArrayOfAbstractArrays=aS});var HI=A((MI)=>{Object.defineProperty(MI,"__esModule",{value:!0});MI.IsArrayOfAbstractArraysWithEqualSize=void 0;var d=C(),i=o(),eS=(D)=>{let I=D.length,L,B,S;if(d.CheckType(D[0],"Array")||i.IsTypedArray(D[0]))S=D[0].length;else S=!1;for(L=0;L<I>>2;L++)if(B=L<<2,!d.CheckType(D[B],"Array")&&!i.IsTypedArray(D[B])||D[B].length!==S||(!d.CheckType(D[B+1],"Array")&&!i.IsTypedArray(D[B+1])||D[B+1].length!==S)||(!d.CheckType(D[B+2],"Array")&&!i.IsTypedArray(D[B+2])||D[B+2].length!==S)||(!d.CheckType(D[B+3],"Array")&&!i.IsTypedArray(D[B+3])||D[B+3].length!==S))return!1;for(B=L<<2;B<I;B++)if(!d.CheckType(D[B],"Array")&&!i.IsTypedArray(D[B])||D[B].length!==S)return!1;return!0};MI.IsArrayOfAbstractArraysWithEqualSize=eS});var $I=A((VI)=>{Object.defineProperty(VI,"__esModule",{value:!0});VI.IsArrayOfArrays=void 0;var LT=C(),Tx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!LT.CheckType(D[B],"Array")||!LT.CheckType(D[B+1],"Array")||!LT.CheckType(D[B+2],"Array")||!LT.CheckType(D[B+3],"Array"))return!1;for(B=L<<2;B<I;B++)if(!LT.CheckType(D[B],"Array"))return!1;return!0};VI.IsArrayOfArrays=Tx});var WI=A((AI)=>{Object.defineProperty(AI,"__esModule",{value:!0});AI.IsArrayOfArraysWithEqualSize=void 0;var r=C(),Dx=(D)=>{let I=D.length,L,B,S;if(r.CheckType(D[0],"Array"))S=D[0].length;else return!1;for(L=0;L<I>>2;L++)if(B=L<<2,!r.CheckType(D[B],"Array")||D[B].length!==S||!r.CheckType(D[B+1],"Array")||D[B+1].length!==S||!r.CheckType(D[B+2],"Array")||D[B+2].length!==S||!r.CheckType(D[B+3],"Array")||D[B+3].length!==S)return!1;for(B=L<<2;B<I;B++)if(!r.CheckType(D[B],"Array")||D[B].length!==S)return!1;return!0};AI.IsArrayOfArraysWithEqualSize=Dx});var EI=A((NI)=>{Object.defineProperty(NI,"__esModule",{value:!0});NI.IsArrayOfFunctions=void 0;var Ix=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="function"||typeof D[B+1]!=="function"||typeof D[B+2]!=="function"||typeof D[B+3]!=="function")return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="function")return!1;return!0};NI.IsArrayOfFunctions=Ix});var kT=A((JI)=>{Object.defineProperty(JI,"__esModule",{value:!0});JI.IsIntegerArray=void 0;var Bx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||!Number.isInteger(D[B])||(typeof D[B+1]!=="number"||!Number.isInteger(D[B+1]))||(typeof D[B+2]!=="number"||!Number.isInteger(D[B+2]))||(typeof D[B+3]!=="number"||!Number.isInteger(D[B+3])))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||!Number.isInteger(D[B]))return!1;return!0};JI.IsIntegerArray=Bx});var OI=A((YI)=>{Object.defineProperty(YI,"__esModule",{value:!0});YI.IsArrayOfIntegerArrays=void 0;var ST=kT(),Lx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!ST.IsIntegerArray(D[B])||!ST.IsIntegerArray(D[B+1])||!ST.IsIntegerArray(D[B+2])||!ST.IsIntegerArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!ST.IsIntegerArray(D[B]))return!1;return!0};YI.IsArrayOfIntegerArrays=Lx});var fI=A((GI)=>{Object.defineProperty(GI,"__esModule",{value:!0});GI.IsArrayOfIntegerArraysWithEqualSize=void 0;var Sx=C(),xT=kT(),xx=(D)=>{let I=D.length,L,B,S;if(!Sx.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(L=0;L<I>>2;L++)if(B=L<<2,!xT.IsIntegerArray(D[B])||D[B].length!==S||!xT.IsIntegerArray(D[B+1])||D[B+1].length!==S||!xT.IsIntegerArray(D[B+2])||D[B+2].length!==S||!xT.IsIntegerArray(D[B+3])||D[B+3].length!==S)return!1;for(B=L<<2;B<I;B++)if(!xT.IsIntegerArray(D[B])||D[B].length!==S)return!1;return!0};GI.IsArrayOfIntegerArraysWithEqualSize=xx});var CI=A((zI)=>{Object.defineProperty(zI,"__esModule",{value:!0});zI.IsArrayOfIntegersInClosedRange=void 0;var Mx=(D,I,L)=>{let B=D.length,S,x;for(S=0;S<B>>2;S++)if(x=S<<2,!Number.isInteger(D[x])||D[x]<I||D[x]>L||(!Number.isInteger(D[x+1])||D[x+1]<I||D[x+1]>L)||(!Number.isInteger(D[x+2])||D[x+2]<I||D[x+2]>L)||(!Number.isInteger(D[x+3])||D[x+3]<I||D[x+3]>L))return!1;for(x=S<<2;x<B;x++)if(!Number.isInteger(D[x])||D[x]<I||D[x]>L)return!1;return!0};zI.IsArrayOfIntegersInClosedRange=Mx});var pI=A((hI)=>{Object.defineProperty(hI,"__esModule",{value:!0});hI.IsArrayOfIntegersInRange=void 0;var Rx=(D,I,L)=>{let B=D.length,S,x;for(S=0;S<B>>2;S++)if(x=S<<2,!Number.isInteger(D[x])||!(D[x]>I&&D[x]<L)||(!Number.isInteger(D[x+1])||!(D[x+1]>I&&D[x+1]<L))||(!Number.isInteger(D[x+2])||!(D[x+2]>I&&D[x+2]<L))||(!Number.isInteger(D[x+3])||!(D[x+3]>I&&D[x+3]<L)))return!1;for(x=S<<2;x<B;x++)if(!Number.isInteger(D[x])||!(D[x]>I&&D[x]<L))return!1;return!0};hI.IsArrayOfIntegersInRange=Rx});var mI=A((wI)=>{Object.defineProperty(wI,"__esModule",{value:!0});wI.IsArrayOfNegativeIntegers=void 0;var Hx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||!Number.isInteger(D[B])||!(D[B]<0)||(typeof D[B+1]!=="number"||!Number.isInteger(D[B+1])||!(D[B+1]<0))||(typeof D[B+2]!=="number"||!Number.isInteger(D[B+2])||!(D[B+2]<0))||(typeof D[B+3]!=="number"||!Number.isInteger(D[B+3])||!(D[B+3]<0)))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||!Number.isInteger(D[B])||!(D[B]<0))return!1;return!0};wI.IsArrayOfNegativeIntegers=Hx});var bI=A((gI)=>{Object.defineProperty(gI,"__esModule",{value:!0});gI.IsArrayOfNegativeNumbers=void 0;var Vx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||!(D[B]<0)||(typeof D[B+1]!=="number"||!(D[B+1]<0))||(typeof D[B+2]!=="number"||!(D[B+2]<0))||(typeof D[B+3]!=="number"||!(D[B+3]<0)))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||!(D[B]<0))return!1;return!0};gI.IsArrayOfNegativeNumbers=Vx});var jT=A((kI)=>{Object.defineProperty(kI,"__esModule",{value:!0});kI.IsNumberArray=void 0;var Fx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||isNaN(D[B])||(typeof D[B+1]!=="number"||isNaN(D[B+1]))||(typeof D[B+2]!=="number"||isNaN(D[B+2]))||(typeof D[B+3]!=="number"||isNaN(D[B+3])))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||isNaN(D[B]))return!1;return!0};kI.IsNumberArray=Fx});var vI=A((cI)=>{Object.defineProperty(cI,"__esModule",{value:!0});cI.IsArrayOfNumberArrays=void 0;var MT=jT(),$x=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!MT.IsNumberArray(D[B])||!MT.IsNumberArray(D[B+1])||!MT.IsNumberArray(D[B+2])||!MT.IsNumberArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!MT.IsNumberArray(D[B]))return!1;return!0};cI.IsArrayOfNumberArrays=$x});var iI=A((oI)=>{Object.defineProperty(oI,"__esModule",{value:!0});oI.IsArrayOfNumberArraysWithEqualSize=void 0;var Ax=C(),RT=jT(),Px=(D)=>{let I=D.length,L,B,S;if(!Ax.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(L=0;L<I>>2;L++)if(B=L<<2,!RT.IsNumberArray(D[B])||D[B].length!==S||!RT.IsNumberArray(D[B+1])||D[B+1].length!==S||!RT.IsNumberArray(D[B+2])||D[B+2].length!==S||!RT.IsNumberArray(D[B+3])||D[B+3].length!==S)return!1;for(B=L<<2;B<I;B++)if(!RT.IsNumberArray(D[B])||D[B].length!==S)return!1;return!0};oI.IsArrayOfNumberArraysWithEqualSize=Px});var sI=A((rI)=>{Object.defineProperty(rI,"__esModule",{value:!0});rI.IsArrayOfNumbersInClosedRange=void 0;var Wx=(D,I,L)=>{let B=D.length,S,x;for(S=0;S<B>>2;S++)if(x=S<<2,typeof D[x]!=="number"||isNaN(D[x])||D[x]<I||D[x]>L||(typeof D[x+1]!=="number"||isNaN(D[x+1])||D[x+1]<I||D[x+1]>L)||(typeof D[x+2]!=="number"||isNaN(D[x+2])||D[x+2]<I||D[x+2]>L)||(typeof D[x+3]!=="number"||isNaN(D[x+3])||D[x+3]<I||D[x+3]>L))return!1;for(x=S<<2;x<B;x++)if(typeof D[x]!=="number"||isNaN(D[x])||D[x]<I||D[x]>L)return!1;return!0};rI.IsArrayOfNumbersInClosedRange=Wx});var aI=A((uI)=>{Object.defineProperty(uI,"__esModule",{value:!0});uI.IsArrayOfNumbersInRange=void 0;var Nx=(D,I,L)=>{let B=D.length,S,x;for(S=0;S<B>>2;S++)if(x=S<<2,typeof D[x]!=="number"||isNaN(D[x])||D[x]<=I||D[x]>=L||(typeof D[x+1]!=="number"||isNaN(D[x+1])||D[x+1]<=I||D[x+1]>=L)||(typeof D[x+2]!=="number"||isNaN(D[x+2])||D[x+2]<=I||D[x+2]>=L)||(typeof D[x+3]!=="number"||isNaN(D[x+3])||D[x+3]<=I||D[x+3]>=L))return!1;for(x=S<<2;x<B;x++)if(typeof D[x]!=="number"||isNaN(D[x])||D[x]<=I||D[x]>=L)return!1;return!0};uI.IsArrayOfNumbersInRange=Nx});var cT=A((eI)=>{Object.defineProperty(eI,"__esModule",{value:!0});eI.IsObjectArray=void 0;var Xx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,D[B]instanceof Array||typeof D[B]!=="object"||D[B]===null||(D[B+1]instanceof Array||typeof D[B+1]!=="object"||D[B+1]===null)||(D[B+2]instanceof Array||typeof D[B+2]!=="object"||D[B+2]===null)||(D[B+3]instanceof Array||typeof D[B+3]!=="object"||D[B+3]===null))return!1;for(B=L<<2;B<I;B++)if(D[B]instanceof Array||typeof D[B]!=="object"||D[B]===null)return!1;return!0};eI.IsObjectArray=Xx});var BB=A((DB)=>{Object.defineProperty(DB,"__esModule",{value:!0});DB.IsArrayOfObjectArrays=void 0;var HT=cT(),Ex=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!Array.isArray(D[B])||!HT.IsObjectArray(D[B])||!Array.isArray(D[B+1])||!HT.IsObjectArray(D[B+1])||!Array.isArray(D[B+2])||!HT.IsObjectArray(D[B+2])||!Array.isArray(D[B+3])||!HT.IsObjectArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!Array.isArray(D[B])||!HT.IsObjectArray(D[B]))return!1;return!0};DB.IsArrayOfObjectArrays=Ex});var xB=A((LB)=>{Object.defineProperty(LB,"__esModule",{value:!0});LB.IsArrayOfObjectArraysWithEqualSize=void 0;var VT=cT(),Jx=(D)=>{let I=D.length,L,B,S;if(!Array.isArray(D[0]))return!1;else S=D[0].length;for(L=0;L<I>>2;L++)if(B=L<<2,!Array.isArray(D[B])||!VT.IsObjectArray(D[B])||D[B].length!==S||!Array.isArray(D[B+1])||!VT.IsObjectArray(D[B+1])||D[B+1].length!==S||!Array.isArray(D[B+2])||!VT.IsObjectArray(D[B+2])||D[B+2].length!==S||!Array.isArray(D[B+3])||!VT.IsObjectArray(D[B+3])||D[B+3].length!==S)return!1;for(B=L<<2;B<I;B++)if(!Array.isArray(D[B])||!VT.IsObjectArray(D[B])||D[B].length!==S)return!1;return!0};LB.IsArrayOfObjectArraysWithEqualSize=Jx});var HB=A((MB)=>{Object.defineProperty(MB,"__esModule",{value:!0});MB.IsArrayOfPositiveIntegers=void 0;var Kx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||!Number.isInteger(D[B])||D[B]<0||(typeof D[B+1]!=="number"||!Number.isInteger(D[B+1])||D[B+1]<0)||(typeof D[B+2]!=="number"||!Number.isInteger(D[B+2])||D[B+2]<0)||(typeof D[B+3]!=="number"||!Number.isInteger(D[B+3])||D[B+3]<0))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||!Number.isInteger(D[B])||D[B]<0)return!1;return!0};MB.IsArrayOfPositiveIntegers=Kx});var $B=A((VB)=>{Object.defineProperty(VB,"__esModule",{value:!0});VB.IsArrayOfPositiveNumbers=void 0;var Yx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="number"||D[B]<0||(typeof D[B+1]!=="number"||D[B+1]<0)||(typeof D[B+2]!=="number"||D[B+2]<0)||(typeof D[B+3]!=="number"||D[B+3]<0))return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="number"||D[B]<0)return!1;return!0};VB.IsArrayOfPositiveNumbers=Yx});var tT=A((AB)=>{Object.defineProperty(AB,"__esModule",{value:!0});AB.IsStringArray=void 0;var Zx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="string"||typeof D[B+1]!=="string"||typeof D[B+2]!=="string"||typeof D[B+3]!=="string")return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="string")return!1;return!0};AB.IsStringArray=Zx});var XB=A((WB)=>{Object.defineProperty(WB,"__esModule",{value:!0});WB.IsArrayOfStringArrays=void 0;var FT=C(),$T=tT(),Ox=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!FT.CheckType(D[B],"Array")||!$T.IsStringArray(D[B])||!FT.CheckType(D[B+1],"Array")||!$T.IsStringArray(D[B+1])||!FT.CheckType(D[B+2],"Array")||!$T.IsStringArray(D[B+2])||!FT.CheckType(D[B+3],"Array")||!$T.IsStringArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!FT.CheckType(D[B],"Array")||!$T.IsStringArray(D[B]))return!1;return!0};WB.IsArrayOfStringArrays=Ox});var KB=A((EB)=>{Object.defineProperty(EB,"__esModule",{value:!0});EB.IsArrayOfStringArraysWithEqualSize=void 0;var n=C(),AT=tT(),Gx=(D)=>{let I=D.length,L,B,S;if(!n.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(L=0;L<I>>2;L++)if(B=L<<2,!n.CheckType(D[B],"Array")||!AT.IsStringArray(D[B])||D[B].length!==S||!n.CheckType(D[B],"Array")||!AT.IsStringArray(D[B+1])||D[B+1].length!==S||!n.CheckType(D[B+2],"Array")||!AT.IsStringArray(D[B+2])||D[B+2].length!==S||!n.CheckType(D[B+3],"Array")||!AT.IsStringArray(D[B+3])||D[B+3].length!==S)return!1;for(B=L<<2;B<I;B++)if(!n.CheckType(D[B],"Array")||!AT.IsStringArray(D[B])||D[B].length!==S)return!1;return!0};EB.IsArrayOfStringArraysWithEqualSize=Gx});var OB=A((YB)=>{Object.defineProperty(YB,"__esModule",{value:!0});YB.IsArrayOfTypedArrays=void 0;var PT=o(),Qx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,!PT.IsTypedArray(D[B])||!PT.IsTypedArray(D[B+1])||!PT.IsTypedArray(D[B+2])||!PT.IsTypedArray(D[B+3]))return!1;for(B=L<<2;B<I;B++)if(!PT.IsTypedArray(D[B]))return!1;return!0};YB.IsArrayOfTypedArrays=Qx});var fB=A((GB)=>{Object.defineProperty(GB,"__esModule",{value:!0});GB.IsArrayOfTypedArraysWithEqualSize=void 0;var s=o(),fx=(D)=>{let I=D.length,L,B,S;if(s.IsTypedArray(D[0]))S=D[0].length;else S=!1;for(L=0;L<I>>2;L++)if(B=L<<2,!s.IsTypedArray(D[B])||D[B].length!==S||(!s.IsTypedArray(D[B+1])||D[B+1].length!==S)||(!s.IsTypedArray(D[B+2])||D[B+2].length!==S)||(!s.IsTypedArray(D[B+3])||D[B+3].length!==S))return!1;for(B=L<<2;B<I;B++)if(!s.IsTypedArray(D[B])||D[B].length!==S)return!1;return!0};GB.IsArrayOfTypedArraysWithEqualSize=fx});var CB=A((zB)=>{Object.defineProperty(zB,"__esModule",{value:!0});zB.IsBooleanArray=void 0;var zx=(D)=>{let I=D.length,L,B;for(L=0;L<I>>2;L++)if(B=L<<2,typeof D[B]!=="boolean"||typeof D[B+1]!=="boolean"||typeof D[B+2]!=="boolean"||typeof D[B+3]!=="boolean")return!1;for(B=L<<2;B<I;B++)if(typeof D[B]!=="boolean")return!1;return!0};zB.IsBooleanArray=zx});var pB=A((hB)=>{Object.defineProperty(hB,"__esModule",{value:!0});hB.IsFloat64Array=void 0;var Ux=(D)=>D instanceof Float64Array;hB.IsFloat64Array=Ux});var mB=A((wB)=>{Object.defineProperty(wB,"__esModule",{value:!0});wB.IsGeneratorFunction=void 0;var Cx=(D)=>D instanceof Function?D.constructor.name==="GeneratorFunction":D instanceof Object?Object.prototype.toString.call(D)==="[object Generator]":!1;wB.IsGeneratorFunction=Cx});var bB=A((gB)=>{Object.defineProperty(gB,"__esModule",{value:!0});gB.IsInstanceof=void 0;var hx=(D,I)=>{return D instanceof I};gB.IsInstanceof=hx});var cB=A((kB)=>{Object.defineProperty(kB,"__esModule",{value:!0});kB.IsInstanceType=void 0;var _x=(D)=>{return typeof D==="function"&&!!D.prototype};kB.IsInstanceType=_x});var oB=A((tB)=>{Object.defineProperty(tB,"__esModule",{value:!0});tB.IsInt16Array=void 0;var px=(D)=>D instanceof Int16Array;tB.IsInt16Array=px});var rB=A((dB)=>{Object.defineProperty(dB,"__esModule",{value:!0});dB.IsInt32Array=void 0;var wx=(D)=>D instanceof Int32Array;dB.IsInt32Array=wx});var uB=A((nB)=>{Object.defineProperty(nB,"__esModule",{value:!0});nB.IsInt8Array=void 0;var qx=(D)=>{return D instanceof Int8Array};nB.IsInt8Array=qx});var eB=A((lB)=>{Object.defineProperty(lB,"__esModule",{value:!0});lB.IsInteger=void 0;var mx=(D)=>typeof D==="number"&&Number.isInteger(D);lB.IsInteger=mx});var IL=A((TL)=>{Object.defineProperty(TL,"__esModule",{value:!0});TL.IsIntegerLike=void 0;var gx=(D)=>typeof D==="string"?Number.isInteger(+D):Number.isInteger(D);TL.IsIntegerLike=gx});var SL=A((BL)=>{Object.defineProperty(BL,"__esModule",{value:!0});BL.IsNegativeIntegerLike=void 0;var yx=(D)=>!isNaN(D)?Number.isInteger(+D)&&+D<0:!1;BL.IsNegativeIntegerLike=yx});var RL=A((xL)=>{Object.defineProperty(xL,"__esModule",{value:!0});xL.IsNegativeNumberLike=void 0;var bx=(D)=>!isNaN(D)?+D<0:!1;xL.IsNegativeNumberLike=bx});var FL=A((HL)=>{Object.defineProperty(HL,"__esModule",{value:!0});HL.IsNumberLike=void 0;var kx=(D)=>typeof D==="number"||typeof D==="string"&&!Number.isNaN(Number(D));HL.IsNumberLike=kx});var PL=A(($L)=>{Object.defineProperty($L,"__esModule",{value:!0});$L.IsObject=void 0;var jx=(D)=>{return Object.prototype.toString.call(D)==="[object Object]"};$L.IsObject=jx});var XL=A((WL)=>{Object.defineProperty(WL,"__esModule",{value:!0});WL.IsPositiveIntegerLike=void 0;var cx=(D)=>!isNaN(D)?Number.isInteger(+D)&&+D>=0:!1;WL.IsPositiveIntegerLike=cx});var KL=A((EL)=>{Object.defineProperty(EL,"__esModule",{value:!0});EL.IsPositiveNumberLike=void 0;var tx=(D)=>!isNaN(D)?+D>=0:!1;EL.IsPositiveNumberLike=tx});var OL=A((YL)=>{Object.defineProperty(YL,"__esModule",{value:!0});YL.IsPromiseFunction=void 0;var vx=(D)=>D instanceof Promise;YL.IsPromiseFunction=vx});var fL=A((GL)=>{Object.defineProperty(GL,"__esModule",{value:!0});GL.IsUint16Array=void 0;var ox=(D)=>D instanceof Uint16Array;GL.IsUint16Array=ox});var CL=A((zL)=>{Object.defineProperty(zL,"__esModule",{value:!0});zL.IsUint32Array=void 0;var dx=(D)=>D instanceof Uint32Array;zL.IsUint32Array=dx});var pL=A((hL)=>{Object.defineProperty(hL,"__esModule",{value:!0});hL.IsUint8Array=void 0;var ix=(D)=>D instanceof Uint8Array;hL.IsUint8Array=ix});var mL=A((wL)=>{Object.defineProperty(wL,"__esModule",{value:!0});wL.IsUint8ClampedArray=void 0;var rx=(D)=>D instanceof Uint8ClampedArray;wL.IsUint8ClampedArray=rx});var bL=A((gL)=>{Object.defineProperty(gL,"__esModule",{value:!0});gL.IsValidEmail=void 0;var nx=(D)=>{return/^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/.test(D)};gL.IsValidEmail=nx});var cL=A((kL)=>{Object.defineProperty(kL,"__esModule",{value:!0});kL.TestCondition=void 0;var sx=(D,I="",L,B="eq")=>{let S=D;if(I)S=D[I];switch(B){case"eq":return S===L;case"neq":return S!==L;case"geq":return S>=L;case"leq":return S<=L;case"lt":return S<L;case"gt":return S>L}};kL.TestCondition=sx});var tL=A(($)=>{Object.defineProperty($,"__esModule",{value:!0});$.IsNumberLike=$.IsNumberArray=$.IsNegativeNumberLike=$.IsNegativeIntegerLike=$.IsIntegerLike=$.IsIntegerArray=$.IsInteger=$.IsInt8Array=$.IsInt32Array=$.IsInt16Array=$.IsInstanceType=$.IsInstanceof=$.IsGeneratorFunction=$.IsFloat64Array=$.IsBooleanArray=$.IsArrayOfTypedArraysWithEqualSize=$.IsArrayOfTypedArrays=$.IsArrayOfStringArraysWithEqualSize=$.IsArrayOfStringArrays=$.IsArrayOfPositiveNumbers=$.IsArrayOfPositiveIntegers=$.IsArrayOfObjectArraysWithEqualSize=$.IsArrayOfObjectArrays=$.IsArrayOfNumbersInRange=$.IsArrayOfNumbersInClosedRange=$.IsArrayOfNumberArraysWithEqualSize=$.IsArrayOfNumberArrays=$.IsArrayOfNegativeNumbers=$.IsArrayOfNegativeIntegers=$.IsArrayOfIntegersInRange=$.IsArrayOfIntegersInClosedRange=$.IsArrayOfIntegerArraysWithEqualSize=$.IsArrayOfIntegerArrays=$.IsArrayOfFunctions=$.IsArrayOfArraysWithEqualSize=$.IsArrayOfArrays=$.IsArrayOfAbstractArraysWithEqualSize=$.IsArrayOfAbstractArrays=$.IsArrayBuffer=$.HasNaNInTypedArray=$.ForAnySetEdition=$.ForAnyObjectEdition=$.ForAnyMapEdition=$.ForAnyArrayEdition=$.ForEverySetEdition=$.ForEveryObjectEdition=$.ForEveryMapEdition=$.ForEveryArrayEdition=$.CheckType=$.Benchmark=void 0;$.TestCondition=$.IsValidEmail=$.IsUint8ClampedArray=$.IsUint8Array=$.IsUint32Array=$.IsUint16Array=$.IsTypedArray=$.IsStringArray=$.IsPromiseFunction=$.IsPositiveNumberLike=$.IsPositiveIntegerLike=$.IsObjectArray=$.IsObject=void 0;var ux=dD();Object.defineProperty($,"Benchmark",{enumerable:!0,get:function(){return ux.Benchmark}});var lx=C();Object.defineProperty($,"CheckType",{enumerable:!0,get:function(){return lx.CheckType}});var vT=nD();Object.defineProperty($,"ForEveryArrayEdition",{enumerable:!0,get:function(){return vT.ForEveryArrayEdition}});Object.defineProperty($,"ForEveryMapEdition",{enumerable:!0,get:function(){return vT.ForEveryMapEdition}});Object.defineProperty($,"ForEveryObjectEdition",{enumerable:!0,get:function(){return vT.ForEveryObjectEdition}});Object.defineProperty($,"ForEverySetEdition",{enumerable:!0,get:function(){return vT.ForEverySetEdition}});var oT=sD();Object.defineProperty($,"ForAnyArrayEdition",{enumerable:!0,get:function(){return oT.ForAnyArrayEdition}});Object.defineProperty($,"ForAnyMapEdition",{enumerable:!0,get:function(){return oT.ForAnyMapEdition}});Object.defineProperty($,"ForAnyObjectEdition",{enumerable:!0,get:function(){return oT.ForAnyObjectEdition}});Object.defineProperty($,"ForAnySetEdition",{enumerable:!0,get:function(){return oT.ForAnySetEdition}});var ax=aD();Object.defineProperty($,"HasNaNInTypedArray",{enumerable:!0,get:function(){return ax.HasNaNInTypedArray}});var ex=DI();Object.defineProperty($,"IsArrayBuffer",{enumerable:!0,get:function(){return ex.IsArrayBuffer}});var T0=xI();Object.defineProperty($,"IsArrayOfAbstractArrays",{enumerable:!0,get:function(){return T0.IsArrayOfAbstractArrays}});var D0=HI();Object.defineProperty($,"IsArrayOfAbstractArraysWithEqualSize",{enumerable:!0,get:function(){return D0.IsArrayOfAbstractArraysWithEqualSize}});var I0=$I();Object.defineProperty($,"IsArrayOfArrays",{enumerable:!0,get:function(){return I0.IsArrayOfArrays}});var B0=WI();Object.defineProperty($,"IsArrayOfArraysWithEqualSize",{enumerable:!0,get:function(){return B0.IsArrayOfArraysWithEqualSize}});var L0=EI();Object.defineProperty($,"IsArrayOfFunctions",{enumerable:!0,get:function(){return L0.IsArrayOfFunctions}});var S0=OI();Object.defineProperty($,"IsArrayOfIntegerArrays",{enumerable:!0,get:function(){return S0.IsArrayOfIntegerArrays}});var x0=fI();Object.defineProperty($,"IsArrayOfIntegerArraysWithEqualSize",{enumerable:!0,get:function(){return x0.IsArrayOfIntegerArraysWithEqualSize}});var M0=CI();Object.defineProperty($,"IsArrayOfIntegersInClosedRange",{enumerable:!0,get:function(){return M0.IsArrayOfIntegersInClosedRange}});var R0=pI();Object.defineProperty($,"IsArrayOfIntegersInRange",{enumerable:!0,get:function(){return R0.IsArrayOfIntegersInRange}});var H0=mI();Object.defineProperty($,"IsArrayOfNegativeIntegers",{enumerable:!0,get:function(){return H0.IsArrayOfNegativeIntegers}});var V0=bI();Object.defineProperty($,"IsArrayOfNegativeNumbers",{enumerable:!0,get:function(){return V0.IsArrayOfNegativeNumbers}});var F0=vI();Object.defineProperty($,"IsArrayOfNumberArrays",{enumerable:!0,get:function(){return F0.IsArrayOfNumberArrays}});var $0=iI();Object.defineProperty($,"IsArrayOfNumberArraysWithEqualSize",{enumerable:!0,get:function(){return $0.IsArrayOfNumberArraysWithEqualSize}});var A0=sI();Object.defineProperty($,"IsArrayOfNumbersInClosedRange",{enumerable:!0,get:function(){return A0.IsArrayOfNumbersInClosedRange}});var P0=aI();Object.defineProperty($,"IsArrayOfNumbersInRange",{enumerable:!0,get:function(){return P0.IsArrayOfNumbersInRange}});var W0=BB();Object.defineProperty($,"IsArrayOfObjectArrays",{enumerable:!0,get:function(){return W0.IsArrayOfObjectArrays}});var N0=xB();Object.defineProperty($,"IsArrayOfObjectArraysWithEqualSize",{enumerable:!0,get:function(){return N0.IsArrayOfObjectArraysWithEqualSize}});var X0=HB();Object.defineProperty($,"IsArrayOfPositiveIntegers",{enumerable:!0,get:function(){return X0.IsArrayOfPositiveIntegers}});var E0=$B();Object.defineProperty($,"IsArrayOfPositiveNumbers",{enumerable:!0,get:function(){return E0.IsArrayOfPositiveNumbers}});var J0=XB();Object.defineProperty($,"IsArrayOfStringArrays",{enumerable:!0,get:function(){return J0.IsArrayOfStringArrays}});var K0=KB();Object.defineProperty($,"IsArrayOfStringArraysWithEqualSize",{enumerable:!0,get:function(){return K0.IsArrayOfStringArraysWithEqualSize}});var Y0=OB();Object.defineProperty($,"IsArrayOfTypedArrays",{enumerable:!0,get:function(){return Y0.IsArrayOfTypedArrays}});var Z0=fB();Object.defineProperty($,"IsArrayOfTypedArraysWithEqualSize",{enumerable:!0,get:function(){return Z0.IsArrayOfTypedArraysWithEqualSize}});var O0=CB();Object.defineProperty($,"IsBooleanArray",{enumerable:!0,get:function(){return O0.IsBooleanArray}});var G0=pB();Object.defineProperty($,"IsFloat64Array",{enumerable:!0,get:function(){return G0.IsFloat64Array}});var Q0=mB();Object.defineProperty($,"IsGeneratorFunction",{enumerable:!0,get:function(){return Q0.IsGeneratorFunction}});var f0=bB();Object.defineProperty($,"IsInstanceof",{enumerable:!0,get:function(){return f0.IsInstanceof}});var z0=cB();Object.defineProperty($,"IsInstanceType",{enumerable:!0,get:function(){return z0.IsInstanceType}});var U0=oB();Object.defineProperty($,"IsInt16Array",{enumerable:!0,get:function(){return U0.IsInt16Array}});var C0=rB();Object.defineProperty($,"IsInt32Array",{enumerable:!0,get:function(){return C0.IsInt32Array}});var h0=uB();Object.defineProperty($,"IsInt8Array",{enumerable:!0,get:function(){return h0.IsInt8Array}});var _0=eB();Object.defineProperty($,"IsInteger",{enumerable:!0,get:function(){return _0.IsInteger}});var p0=kT();Object.defineProperty($,"IsIntegerArray",{enumerable:!0,get:function(){return p0.IsIntegerArray}});var w0=IL();Object.defineProperty($,"IsIntegerLike",{enumerable:!0,get:function(){return w0.IsIntegerLike}});var q0=SL();Object.defineProperty($,"IsNegativeIntegerLike",{enumerable:!0,get:function(){return q0.IsNegativeIntegerLike}});var m0=RL();Object.defineProperty($,"IsNegativeNumberLike",{enumerable:!0,get:function(){return m0.IsNegativeNumberLike}});var g0=jT();Object.defineProperty($,"IsNumberArray",{enumerable:!0,get:function(){return g0.IsNumberArray}});var y0=FL();Object.defineProperty($,"IsNumberLike",{enumerable:!0,get:function(){return y0.IsNumberLike}});var b0=PL();Object.defineProperty($,"IsObject",{enumerable:!0,get:function(){return b0.IsObject}});var k0=cT();Object.defineProperty($,"IsObjectArray",{enumerable:!0,get:function(){return k0.IsObjectArray}});var j0=XL();Object.defineProperty($,"IsPositiveIntegerLike",{enumerable:!0,get:function(){return j0.IsPositiveIntegerLike}});var c0=KL();Object.defineProperty($,"IsPositiveNumberLike",{enumerable:!0,get:function(){return c0.IsPositiveNumberLike}});var t0=OL();Object.defineProperty($,"IsPromiseFunction",{enumerable:!0,get:function(){return t0.IsPromiseFunction}});var v0=tT();Object.defineProperty($,"IsStringArray",{enumerable:!0,get:function(){return v0.IsStringArray}});var o0=o();Object.defineProperty($,"IsTypedArray",{enumerable:!0,get:function(){return o0.IsTypedArray}});var d0=fL();Object.defineProperty($,"IsUint16Array",{enumerable:!0,get:function(){return d0.IsUint16Array}});var i0=CL();Object.defineProperty($,"IsUint32Array",{enumerable:!0,get:function(){return i0.IsUint32Array}});var r0=pL();Object.defineProperty($,"IsUint8Array",{enumerable:!0,get:function(){return r0.IsUint8Array}});var n0=mL();Object.defineProperty($,"IsUint8ClampedArray",{enumerable:!0,get:function(){return n0.IsUint8ClampedArray}});var s0=bL();Object.defineProperty($,"IsValidEmail",{enumerable:!0,get:function(){return s0.IsValidEmail}});var u0=cL();Object.defineProperty($,"TestCondition",{enumerable:!0,get:function(){return u0.TestCondition}})});var DT=A((U)=>{var e0=U&&U.__createBinding||(Object.create?function(D,I,L,B){if(B===void 0)B=L;var S=Object.getOwnPropertyDescriptor(I,L);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[L]}};Object.defineProperty(D,B,S)}:function(D,I,L,B){if(B===void 0)B=L;D[B]=I[L]}),TM=U&&U.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),MD=U&&U.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var L in D)if(L!=="default"&&Object.prototype.hasOwnProperty.call(D,L))e0(I,D,L)}return TM(I,D),I},DM=U&&U.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(U,"__esModule",{value:!0});var xD=DM(qD()),N=MD(bD()),WT=MD(tD()),V=MD(tL());class W{#L=void 0;#S=null;#I=null;#T=null;#B=null;#M=!1;#x="";constructor(D=void 0){this.value=D,this.#x=""}get value(){return this.#L}set value(D){try{this.#L=D}catch(I){this.value=I}}get description(){return this.#x}set description(D){if(new W(D).isString.or.isNumber.answer)this.#x=D;else N.IncorrectDescriptionProperty()}describe(D){if(new W(D).isString.and.not.isEmpty.answer)this.#x=D;else N.IncorrectParameterInDescribe();return this}reset(){this.#S=null,this.#I=null,this.#T=null}get answer(){return this.reset(),this.#B}get show_warnings(){return this.#M}set show_warnings(D){new W(D).isBoolean.on(!0,()=>this.#M=D)}#D(){if(this.#S)this.#T=!this.#T;if(this.#I==="or")this.#B=this.#B||this.#T;if(this.#I==="and")this.#B=this.#B&&this.#T;if(this.#I===null)this.#B=this.#T;return this.reset(),this}get not(){return this.#S=!0,this}get and(){return this.#I="and",this}get or(){return this.#I="or",this}copy(){return new W(this.value)}absoluteCopy(){let D=new W(this.value);return D.#B=this.#B,D.#S=this.#S,D.#I=this.#I,D.#T=this.#T,D}get isBoolean(){return this.#T=V.CheckType(this.value,"Boolean"),this.#D()}get isUndefined(){return this.#T=V.CheckType(this.value,"Undefined"),this.#D()}get isNull(){return this.#T=V.CheckType(this.value,"Null"),this.#D()}get isSymbol(){return this.#T=V.CheckType(this.value,"Symbol"),this.#D()}get isBigInt(){return this.#T=V.CheckType(this.value,"BigInt"),this.#D()}get isString(){return this.#T=V.CheckType(this.value,"String"),this.#D()}get isNumber(){return this.#T=V.CheckType(this.value,"Number"),this.#D()}get isInteger(){return this.#T=V.IsInteger(this.value),this.#D()}get isFloat(){return this.#T=this.copy().isNumber.and.not.isInteger.answer,this.#D()}isGreaterThan(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsBiggerThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"gt");else this.#T=!1;return this.#D()}isLessThan(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsLesserThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"lt");else this.#T=!1;return this.#D()}isGreaterThanOrEqual(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsEqualOrBiggerThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"geq");else this.#T=!1;return this.#D()}isLessThanOrEqual(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsEqualOrLesserThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"leq");else this.#T=!1;return this.#D()}isEqual(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsEqual();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"eq");else this.#T=!1;return this.#D()}isNotEqual(D){if(new W(D).not.isNumber.answer)N.IncorrectArgumentInIsNotEqual();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"neq");else this.#T=!1;return this.#D()}isInRange(D,I){if(new W([D,I]).not.isNumberArray.answer)N.IncorrectArgumentsInIsInRange();if(D>=I)N.IncorrectArgumentsInIsInRange();return this.#T=this.copy().isNumber.answer?V.TestCondition(this.value,void 0,D,"gt")&&V.TestCondition(this.value,void 0,I,"lt"):!1,this.#D()}isInClosedRange(D,I){if(new W([D,I]).not.isNumberArray.answer)N.IncorrectArgumentsInIsInClosedRange();if(D>=I)N.IncorrectArgumentsInIsInClosedRange();return this.#T=this.copy().isNumber.answer?V.TestCondition(this.value,void 0,D,"geq")&&V.TestCondition(this.value,void 0,I,"leq"):!1,this.#D()}get isPositive(){if(this.copy().not.isNumber.answer){if(this.show_warnings)WT.IncorrectValueInIsPositive();this.#T=!1}else this.#T=V.TestCondition(this.value,void 0,0,"geq");return this.#D()}get isNegative(){if(this.copy().not.isNumber.answer){if(this.show_warnings)WT.IncorrectValueInIsNegative();this.#T=!1}else this.#T=V.TestCondition(this.value,void 0,0,"lt");return this.#D()}get isPositiveInteger(){if(this.copy().isInteger.answer)this.#T=V.TestCondition(this.value,void 0,0,"geq");else this.#T=!1;return this.#D()}get isNegativeInteger(){if(this.copy().isInteger.answer)this.#T=V.TestCondition(this.value,void 0,0,"lt");else this.#T=!1;return this.#D()}get isConvertibleToNumber(){return this.#T=V.IsNumberLike(this.value),this.#D()}get isConvertibleToInteger(){return this.#T=V.IsIntegerLike(this.value),this.#D()}get isConvertibleToPositiveNumber(){return this.#T=V.IsPositiveNumberLike(this.value),this.#D()}get isConvertibleToNegativeNumber(){return this.#T=V.IsNegativeNumberLike(this.value),this.#D()}get isConvertibleToPositiveInteger(){return this.#T=V.IsPositiveIntegerLike(this.value),this.#D()}get isConvertibleToNegativeInteger(){return this.#T=V.IsNegativeIntegerLike(this.value),this.#D()}get isPrimitiveType(){return this.#T=this.copy().isString.or.isNumber.or.isBigInt.or.isBoolean.or.isUndefined.or.isNull.or.isSymbol.answer,this.#D()}get isArrayBuffer(){return this.#T=V.CheckType(this.value,"ArrayBuffer"),this.#D()}get isInt8Array(){return this.#T=V.CheckType(this.value,"Int8Array"),this.#D()}get isUint8Array(){return this.#T=V.CheckType(this.value,"Uint8Array"),this.#D()}get isUint8ClampedArray(){return this.#T=V.CheckType(this.value,"Uint8ClampedArray"),this.#D()}get isInt16Array(){return this.#T=V.CheckType(this.value,"Int16Array"),this.#D()}get isUint16Array(){return this.#T=V.CheckType(this.value,"Uint16Array"),this.#D()}get isInt32Array(){return this.#T=V.CheckType(this.value,"Int32Array"),this.#D()}get isUint32Array(){return this.#T=V.CheckType(this.value,"Uint32Array"),this.#D()}get isIntegerTypedArray(){return this.#T=this.copy().isInt8Array.or.isUint8Array.or.isUint8ClampedArray.or.isInt16Array.or.isUint16Array.or.isInt32Array.or.isUint32Array.answer,this.#D()}get isFloat32Array(){return this.#T=V.CheckType(this.value,"Float32Array"),this.#D()}get isFloat64Array(){return this.#T=V.CheckType(this.value,"Float64Array"),this.#D()}get isFloatTypedArray(){return this.#T=this.copy().isFloat32Array.or.isFloat64Array.answer,this.#D()}get isTypedArray(){return this.#T=V.IsTypedArray(this.value),this.#D()}get isArray(){return this.#T=V.CheckType(this.value,"Array"),this.#D()}get isBooleanArray(){if(this.copy().isArray.answer)this.#T=V.IsBooleanArray(this.value);else this.#T=!1;return this.#D()}get isNumberArray(){let D=this.copy();if(D.isArray.answer)this.#T=V.IsNumberArray(this.value);else if(D.isTypedArray.answer)this.#T=!V.HasNaNInTypedArray(this.value);else this.#T=!1;return this.#D()}get isIntegerArray(){let D=this.copy();if(D.isArray.or.isFloatTypedArray.answer)this.#T=V.IsIntegerArray(this.value);else if(D.isIntegerTypedArray.answer)this.#T=!V.HasNaNInTypedArray(this.value);else this.#T=!1;return this.#D()}get isArrayOfPositiveNumbers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfPositiveNumbers(this.value);else this.#T=!1;return this.#D()}get isArrayOfNegativeNumbers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNegativeNumbers(this.value);else this.#T=!1;return this.#D()}get isArrayOfPositiveIntegers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfPositiveIntegers(this.value);else this.#T=!1;return this.#D()}get isArrayOfNegativeIntegers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNegativeIntegers(this.value);else this.#T=!1;return this.#D()}isArrayOfNumbersInRange(D,I){if(new W([D,I]).not.isNumberArray.or.bind(new W(D).isGreaterThanOrEqual(I)).answer)N.IllegalParametersInIsArrayOfNumbersInRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNumbersInRange(this.value,D,I);else this.#T=!1;return this.#D()}isArrayOfNumbersInClosedRange(D,I){if(new W([D,I]).not.isNumberArray.or.bind(new W(D).isGreaterThanOrEqual(I)).answer)N.IllegalParametersInIsArrayOfNumbersInClosedRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNumbersInClosedRange(this.value,D,I);else this.#T=!1;return this.#D()}isArrayOfIntegersInRange(D,I){if(new W([D,I]).not.isIntegerArray.or.bind(new W(D).isGreaterThanOrEqual(I)).answer)N.IllegalParametersInIsArrayOfIntegersInRange();if(this.copy().not.isArray.and.not.isTypedArray.answer)this.#T=!1;else this.#T=V.IsArrayOfIntegersInRange(this.value,D,I);return this.#D()}isArrayOfIntegersInClosedRange(D,I){if(new W([D,I]).not.isNumberArray.or.bind(new W(D).isGreaterThanOrEqual(I)).answer)N.IllegalParametersInIsArrayOfIntegersInClosedRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfIntegersInClosedRange(this.value,D,I);else this.#T=!0;return this.#D()}get isStringArray(){if(this.copy().isArray.answer)this.#T=V.IsStringArray(this.value);else this.#T=!1;return this.#D()}get isObjectArray(){if(this.copy().isArray.answer)this.#T=V.IsObjectArray(this.value);else this.#T=!1;return this.#D()}get isArrayOfFunctions(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfFunctions(this.value);else this.#T=!1;return this.#D()}get isArrayOfArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfNumberArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfNumberArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfNumberArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfNumberArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfIntegerArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfIntegerArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfIntegerArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfIntegerArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfTypedArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfTypedArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfTypedArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfTypedArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfAbstractArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfAbstractArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfAbstractArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfAbstractArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfStringArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfStringArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfStringArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfStringArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfObjectArrays(){if(this.copy().not.isArray.answer)this.#T=!1;else this.#T=V.IsArrayOfObjectArrays(this.value);return this.#D()}get isArrayOfObjectArraysWithEqualSize(){if(this.copy().not.isArray.answer)this.#T=!1;else this.#T=V.IsArrayOfObjectArraysWithEqualSize(this.value);return this.#D()}get isObject(){return this.#T=V.CheckType(this.value,"Object"),this.#D()}get isMap(){return this.#T=V.CheckType(this.value,"Map"),this.#D()}get isSet(){return this.#T=V.CheckType(this.value,"Set"),this.#D()}get isFunction(){return this.#T=V.CheckType(this.value,"Function"),this.#D()}get isAsync(){return this.#T=V.CheckType(this.value,"AsyncFunction"),this.#D()}get isGenerator(){return this.#T=V.CheckType(this.value,"GeneratorFunction")||V.CheckType(this.value,"Generator"),this.#D()}get isPromise(){return this.#T=V.CheckType(this.value,"Promise"),this.#D()}get isError(){return this.#T=V.CheckType(this.value,"Error"),this.#D()}get isDate(){return this.#T=V.CheckType(this.value,"Date")?this.value.toString()!=="Invalid Date":!1,this.#D()}get isEmail(){if(this.copy().isString.answer)this.#T=V.IsValidEmail(this.value);else this.#T=!1;return this.#D()}isInstanceof(D){if(V.IsInstanceType(D))this.#T=V.IsInstanceof(this.value,D);else if(typeof D==="string")this.#T=new W((I)=>I.constructor.name===D).executeWith(this.value).value;else N.IncorrectArgumentInIsInstanceof();return this.#D()}hasLength(D){if(Number.isInteger(D))D=Number(D);else N.IncorrectArgumentInHasLength();let I=this.copy();if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D);else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D);else if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D);else if(I.isMap.or.isSet.answer)this.#T=V.TestCondition(this.value,"size",D);else this.#T=!1;return this.#D()}hasLengthGreaterThan(D){if(Number.isInteger(D))D=Number(D);else N.IncorrectArgumentInHasLengthBiggerThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"gt");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"gt");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"gt");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"gt");else this.#T=!1;return this.#D()}hasLengthEqualsOrGreaterThan(D){if(Number.isInteger(D))D=Number(D);else N.IncorrectArgumentInHasLengthEqualsOrBiggerThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"geq");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"geq");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"geq");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"geq");else this.#T=!1;return this.#D()}hasLengthLessThan(D){if(Number.isInteger(D))D=Number(D);else N.IncorrectArgumentInHasLengthLesserThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"lt");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"lt");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"lt");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"lt");else this.#T=!1;return this.#D()}hasLengthEqualsOrLessThan(D){if(Number.isInteger(D))D=Number(D);else N.IncorrectArgumentInHasLengthEqualsOrLesserThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"leq");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"leq");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"leq");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"leq");else this.#T=!1;return this.#D()}hasLengthInRange(D,I){if(Number.isInteger(D)&&Number.isInteger(I)){if(D=Number(D),I=Number(I),D>=I)N.IncorrectArgumentsInHasLengthInRange()}else N.IncorrectArgumentsInHasLengthInRange();let L=this.copy();if(L.isArray.or.isString.answer)this.#T=this.value.length>D&&this.value.length<I;else if(L.isObject.answer){let B=Object.keys(L.value).length;this.#T=B>D&&B<I}else this.#T=!1;return this.#D()}hasLengthInClosedRange(D,I){if(Number.isInteger(D)&&Number.isInteger(I)){if(D=Number(D),I=Number(I),D>=I)N.IncorrectArgumentsInHasLengthInClosedRange()}else N.IncorrectArgumentsInHasLengthInClosedRange();let L=this.copy();if(L.isArray.or.isString.answer)this.#T=this.value.length>=D&&this.value.length<=I;else if(L.isObject.answer){let B=Object.keys(L.value).length;this.#T=B>=D&&B<=I}else this.#T=!1;return this.#D()}get isEmpty(){let D=this.copy();if(D.isUndefined.or.isNull.answer)this.#T=!0;else if(D.isArray.or.isArrayBuffer.or.isMap.or.isObject.or.isSet.or.isString.or.isTypedArray)this.#T=D.hasLength(0).answer;else N.IncorrectArgumentInIsEmpty();return this.#D()}forEvery(D){let I=this.copy();if(new W(D).not.isFunction.answer)N.IncorrectFunctionArgumentInForAll();if(I.not.isEmpty.answer)if(I.isArray.answer)this.#T=V.ForEveryArrayEdition(I.value,D);else if(I.isObject.answer)this.#T=V.ForEveryObjectEdition(I.value,D);else if(I.isSet.answer)this.#T=V.ForEverySetEdition(I.value,D);else if(I.isMap.answer)this.#T=V.ForEveryMapEdition(this.value,D);else this.#T=!1;else this.#T=!1;return this.#D()}forAny(D){let I=this.copy();if(new W(D).not.isFunction.answer)N.IncorrectFunctionArgumentInForAny();if(I.not.isEmpty.answer)if(I.isArray.or.isTypedArray.answer)this.#T=V.ForAnyArrayEdition(I.value,D);else if(I.isObject.answer)this.#T=V.ForAnyObjectEdition(I.value,D);else if(I.isSet.answer)this.#T=V.ForAnySetEdition(this.value,D);else if(I.isMap.answer)this.#T=V.ForAnyMapEdition(this.value,D);else this.#T=!1;else this.#T=!1;return this.#D()}isArrayAndForEvery(D){if(new W(D).not.isFunction.answer)N.IncorrectFunctionArgumentInForAll();if(this.copy().isArray.answer)this.#T=V.ForEveryArrayEdition(this.value,D);else this.#T=!1;return this.#D()}isArrayAndForAny(D){if(new W(D).not.isFunction.answer)N.IncorrectFunctionArgumentInForAny();if(this.copy().isArray.answer)this.#T=V.ForAnyArrayEdition(this.value,D);else this.#T=!1;return this.#D()}interface(D){let I=new W(D),L=I.isObject&&this.copy().isObject.answer;if(this.#T=!1,L){if(I.forEvery((S)=>S.isFunction).answer)for(let S of Object.keys(D)){if(this.#T=D[S](new W(this.value[S])).answer,new W(this.#T).not.isBoolean.answer)N.IncorrectArgumentInInterface();if(!this.#T)return this.#D()}}return this.#D()}isSame(D){let I=new W(D),L=this.copy();if(L.isPrimitiveType.answer)if(I.isPrimitiveType.answer)this.#T=String(this.value)===String(D);else this.#T=!1;else if(L.isFunction.or.isAsync.or.isGenerator.answer)if(I.isFunction.or.isAsync.or.isGenerator.answer)this.#T=this.value.toString()===D.toString();else this.#T=!1;else if(L.isArray.or.isTypedArray.or.isObject.answer)if(I.isArray.or.isTypedArray.or.isObject.answer)this.#T=L.forEvery((B,S)=>B.isSame(D[S])).answer;else this.#T=!1;else if(L.isArrayBuffer.answer)if(I.isArrayBuffer.answer){let B=new W(new Float64Array(this.value)),S=new Float64Array(I.value);this.#T=B.forEvery((x,M)=>x.isSame(S[M])).answer}else this.#T=!1;else N.InappropriateValueInIsSame();return this.#D()}isSameWithAny(D){let I,L,B=this.copy(),S=new W(D).isArray.or.isTypedArray.answer;if(this.#T=!1,S){let x=D.length;for(I=0;I<x>>2;I++)if(L=I<<2,B.isSame(D[L]).answer||B.isSame(D[L+1]).answer||B.isSame(D[L+2]).answer||B.isSame(D[L+3]).answer)return this.#T=!0,this.#D();L=I<<2;for(;L<x;L++)if(B.isSame(D[L]).answer)return this.#T=!0,this.#D()}return this.#D()}bind(D){if(!(D instanceof W))N.IncorrectArgumentInBindMethod();return this.#T=D.answer,this.#D()}on(D,I){let L=new W(D).not.isBoolean.and.not.isSame("true").and.not.isSame("false").answer,B=new W(I).not.isFunction.answer;if(!L&&!B){if(D===this.answer)I(this)}else if(B){if(this.show_warnings)WT.IncorrectFunctionInOnMethod()}else if(L){if(this.show_warnings)WT.IncorrectStateInOnMethod()}return this}executeWith(...D){if(this.copy().isFunction.answer)try{this.#L=this.copy().value(...D)}catch(I){this.#L=I}else if(this.copy().isAsync.answer){let I=null,L=async()=>{try{I=await this.copy().value(...D)}catch(B){I=B}return I};this.#L=L()}else if(this.show_warnings)WT.IncorrectTypeInExecuteWith();return this}throwsErrorWith(...D){let I=null;try{I=this.copy().executeWith(...D).value}catch(L){I=L}return this.#T=V.CheckType(I,"Error"),this.#D()}benchmark(D,I=100){if(new W(I).not.isInteger.answer)N.IncorrectIterationsParameterInBenchmark();return V.Benchmark(this.value,D,I)}test(D={title:!1,success:"green",error:"red"}){if(D.title)new xD.default().bold.underline.setBgColor("rgb(66, 55, 233)").setColor("rgb(10, 10, 10)").append(this.description).reset.log();else this.on(!0,()=>{new xD.default().bold.italic.setColor(D.success).appendCheckMark.append(" "+this.description).reset.log()}).on(!1,()=>{new xD.default().bold.italic.setColor(D.error).appendWarningSign.append(" "+this.description).reset.log()});return this}}U.default=W});var a=(D,I,L)=>{if(!I)return null;let B=L(I,D);if(B<0)return a(D,I.left,L);if(B>0)return a(D,I.right,L);return I},m=(D,I,L)=>{if(D){let B=L(D,I);if(B<0)return m(D.left,I,L);else if(B>0)return m(D.right,I,L);else return D}else return null};var pT=(D,I,L)=>{if(I.isEmpty)return;let B=I.dequeue();if(!D(B,L))return;if(B.left)I.enqueue(B.left);if(B.right)I.enqueue(B.right);return pT(D,I,L)};var wT=(D,I,L)=>{if(I.isEmpty)return;let B=I.pop();if(B.right)I.push(B.right);if(B.left)I.push(B.left);return L(B,D),wT(D,I,L)};var qT=(D,I,L)=>{if(I.isEmpty)return;let B=I.dequeue();if(B.left)I.enqueue(B.left);if(B.right)I.enqueue(B.right);return L(B,D),qT(D,I,L)};var mT=(D,I)=>D.id<I.id?-1:D.id===I.id?0:1,gT=(D,I)=>D.id>I?-1:D.id===I?0:1;var t=(D,I,L)=>{if(!I?.prev)D.root=L;else if(I===I.prev.left)I.prev.left=L;else I.prev.right=L;if(L)L.prev=I.prev};var k=(D,I)=>{if(!D)return null;if(!D.left)t(I,D,D?.right);else if(!D.right)t(I,D,D?.left||null);else{let L=I.successorNode(D);if(L.prev!==D)t(I,L,L.right),L.right=D?.right||null,L.right.prev=L;if(t(I,D,L),!D.prev)I.rootNode=L;if(D===D.prev?.left)D.prev.left=L;if(D===D.prev?.right)D.prev.right=L;L.left=D.left,L.left.prev=L}return D.prev};var LD=(D,I)=>{let L=D.left,B=L.right;if(D.prev)if(D===D.prev.left)D.prev.left=B;else D.prev.right=B;else I.rootNode=B;if(B.prev=D.prev||null,D.prev=B,L.prev=B,L.right=B.left,B.left)B.left.prev=L;if(D.left=B.right,B.right)B.right.prev=D;B.left=L,B.right=D};var SD=(D,I)=>{let L=D.right,B=L.left;if(D.prev)if(D===D.prev.left)D.prev.left=B;else D.prev.right=B;else I.rootNode=B;if(B.prev=D.prev||null,D.prev=B,L.prev=B,L.left=B.right,B.right)B.right.prev=L;if(D.right=B.left,B.left)B.left.prev=D;B.right=L,B.left=D};var CD=(D,I,L,B=null)=>{if(D){if(B=D,L(I,D)<0)D=D.left;else D=D.right;return CD(D,I,L,B)}else return B},e=(D,I,L)=>{let{order:B,rootNode:S}=D,x;if(L)I.id=L;if(x=CD(S,I,B),I.prev=x,!x)D.rootNode=I;else{let M=B(I,x);if(M<0)x.left=I;else if(M===0)if(D.unique)return x.data=I.data,null;else x.right=I;else x.right=I}return I};var vL=zD(DT(),1),oL=Math.max,dT=(D)=>(I)=>{let L=new Error;throw L.name=D,L.message=I,L},iT=(D,I)=>new vL.default(D).isSame(I).answer;var dL=(D,I,L=["data"])=>{let B,S;if(!D.isEmpty&&!I.isEmpty){if(B=D.pop(),S=I.pop(),!L.every((M)=>iT(B[M],S[M])))return!1;if(B.left)D.push(B.left);if(B.right)D.push(B.right);if(S.left)I.push(S.left);if(S.right)I.push(S.right);return rT(D,I)}else if(!D.isEmpty||!I.isEmpty)return!1;return!0},rT=(D,I)=>dL(D,I,["data","id"]),RD=(D,I)=>dL(D,I);var NT=(D)=>{if(D?.prev&&D===D?.prev?.right)return NT(D.prev);else if(!D?.prev&&D?.right)return null;return D},XT=(D)=>{if(D?.prev&&D===D?.prev?.left)return XT(D?.prev);else if(!D?.prev&&D?.left)return null;return D};var HD=(D,I)=>{let L=D.right;if(D.prev)if(D===D.prev.left)D.prev.left=L;else D.prev.right=L;else I.rootNode=L;if(L.prev=D.prev,D.prev=L,L.left)L.left.prev=D;D.right=L.left,L.left=D};var VD=(D,I)=>{let L=D.left;if(D.prev)if(D===D.prev.left)D.prev.left=L;else D.prev.right=L;else I.rootNode=L;if(L.prev=D.prev,D.prev=L,L.right)L.right.prev=D;D.left=L.right,L.right=D};var Q=[];for(let D=0;D<256;++D)Q.push((D+256).toString(16).slice(1));function iL(D,I=0){return(Q[D[I+0]]+Q[D[I+1]]+Q[D[I+2]]+Q[D[I+3]]+"-"+Q[D[I+4]]+Q[D[I+5]]+"-"+Q[D[I+6]]+Q[D[I+7]]+"-"+Q[D[I+8]]+Q[D[I+9]]+"-"+Q[D[I+10]]+Q[D[I+11]]+Q[D[I+12]]+Q[D[I+13]]+Q[D[I+14]]+Q[D[I+15]]).toLowerCase()}import{randomFillSync as BM}from"crypto";var sT=new Uint8Array(256),nT=sT.length;function FD(){if(nT>sT.length-16)BM(sT),nT=0;return sT.slice(nT,nT+=16)}import{randomUUID as LM}from"crypto";var $D={randomUUID:LM};function SM(D,I,L){if($D.randomUUID&&!I&&!D)return $D.randomUUID();D=D||{};let B=D.random??D.rng?.()??FD();if(B.length<16)throw new Error("Random bytes length must be >= 16");if(B[6]=B[6]&15|64,B[8]=B[8]&63|128,I){if(L=L||0,L<0||L+16>I.length)throw new RangeError(`UUID byte range ${L}:${L+15} is out of buffer bounds`);for(let S=0;S<16;++S)I[L+S]=B[S];return I}return iL(B)}var j=SM;class q{_id="";_data=null;constructor(D,I){if(this.data=D,D?.id&&!this.id)this.id=D.id;else if(I)this.id=I;else this.id=j()}get id(){return this._id}set id(D){this._id=D}get data(){return this._data}set data(D){if(typeof D!=="undefined")this._data=D}}class g extends q{_prev=null;_right=null;_left=null;constructor(D){super(D)}get prev(){return this._prev}set prev(D){this._prev=D}get right(){return this._right||null}set right(D){this._right=D||null}get left(){return this._left||null}set left(D){this._left=D||null}}class u extends g{bf=0;constructor(D){if(D){super(D);this.balance=0}}get balance(){return this.bf}set balance(D){this.bf=D}}var rL=dT("@euriklis/graphworlds Graph node error"),nL=(D)=>rL(`The edge ${D} already exists.`),AD=()=>rL("The name is required in order to create a node.");class ET{__SOURCE__;__TARGET__;__DATA__;__ID__="";constructor(D,I,L=null){this.__SOURCE__=D;this.__TARGET__=I;this.__DATA__=L;this.id=j()}get id(){return this.__ID__}set id(D){this.__ID__=D}get source(){return this.__SOURCE__}set source(D){this.__SOURCE__=D}get target(){return this.__TARGET__}set target(D){this.__TARGET__=D}get data(){return this.__DATA__}set data(D){this.__DATA__=D}}class JT extends ET{constructor({source:D,target:I,data:L}){super(D,I,L)}}class KT extends ET{__WEIGHT__=1;constructor({source:D,target:I,data:L,weight:B}){super(D,I,L);if(typeof B!=="undefined")this.weight=B}get weight(){return this.__WEIGHT__}set weight(D){this.__WEIGHT__=D}}class YT{__ID__="";__NAME__="";__DATA__=null;__IN__=new Map;__OUT__=new Map;constructor({name:D,data:I}){if(!D)AD();if(this.id=j(),this.name=D,typeof I!=="undefined")this.data=I}get id(){return this.__ID__}set id(D){this.__ID__=D}get name(){return this.__NAME__}set name(D){this.__NAME__=D}get data(){return this.__DATA__}set data(D){this.__DATA__=D}get incoming(){return this.__IN__}get outgoing(){return this.__OUT__}connect({node:D,data:I,params:L}){if(this.outgoing.has(D.name))nL(D.name);let B=this.createEdge(D,I,L);return this.outgoing.set(D.name,B),D.incoming.set(this.name,B),this}findConnections(D){let I=new Map;return this.outgoing.forEach((L,B)=>D(L)?I.set(B,L):null),I}getConnection(D){let I="";if(typeof D==="string")I=D;else I=D.name;return this.outgoing.get(I)}removeConnection({node:D,nodeName:I}){let L;if(!I&&!D)AD();if(D)L=this.outgoing.get(D.name),this.outgoing.delete(D.name),D.incoming.delete(this.name);else{let B=this.outgoing.get(I);if(B)this.outgoing.delete(I),B.target.incoming.delete(this.name)}return L}get inDegree(){return this.incoming.size}get outDegree(){return this.outgoing.size}}class ZT extends YT{createEdge(D,I){return new JT({source:this,target:D,data:I})}}class OT extends YT{__VALUE__=1;constructor({name:D,data:I,value:L}){super({name:D,data:I});if(typeof L!=="undefined")this.value=L}get value(){return this.__VALUE__}set value(D){this.__VALUE__=D}createEdge(D,I,{weight:L}){return new KT({source:this,target:D,data:I,weight:L})}weightedInDegree(){let D=0;return this.incoming.forEach((I)=>D+=I.weight),D}weightedOutDegree(){let D=0;return this.outgoing.forEach((I)=>D+=I.weight),D}}class l extends q{constructor(D){super(D)}}class Z extends q{_next=null;_prev=null;constructor(D){super(D)}get next(){return this._next}set next(D){this._next=D}get prev(){return this._prev}set prev(D){this._prev=D}}var sL=(D)=>`Stack overflow in method ${D}. The data structure limit size was achieved.`,uL=(D)=>`Stack underflow in method ${D}. The data structure is empty.`;var lL=dT("@euriklis/graphworlds DataStructures library error message");var y=(D)=>()=>lL(uL(D)),h=(D)=>()=>lL(sL(D));class Y{_top=null;_size=0;_limit=1/0;constructor(D){if(D)this.push(D)}get size(){return this._size}get limit(){return this._limit}get isEmpty(){return this.size===0}get top(){return this._top?.data}push(D){if(typeof D!=="undefined"){if(this.limit===this.size+1)h("Stack push");let I=new Z(D);if(I.prev=this._top,this._top)this._top.next=I;this._top=I,this._size++}return this}pushMany(D){for(let I of D)this.push(I);return this}pop(){let D=null;if(this._size){if(D=this._top.data,this._top=this._top.prev,this._top)this._top.next=null;this._size--}return D}popMany(D){let I,L,B=[];if(D>this.size)D=this.size;for(I=0;I<D-1;I+=2)L=this._top.data,this._top=this._top.prev,this._top.next=null,B[I]=L,L=this._top.data,this._top=this._top.prev,this._top.next=null,B[I+1]=L,this._size-=2;if(I===D-1){if(L=this._top.data,this._top=this._top.prev,this._top)this._top.next=null;B[I]=L,this._size--}return B}get list(){let D=[],I=this.size,L;for(L=I;L-- >1;)D[L--]=this.pop(),D[L]=this.pop();if(L===0)D[0]=this.pop();return D}traverse(D){let I=this._top;while(I)D(I.data,this),I=I.prev;return this}popAndTraverse(D){let I=[];while(this.size){let L=this.pop();D(L,this),I[I.length]=L}return I}loop(D,I=this.size){let L=this._top,B=0;while(L&&B++<I)if(D(L.data,this))L=L.prev;else break;return this}filter(D){let I=new Y,L=null,B,S=this._top;while(S){if(D(S.data,this))if(L)B=new Z(S.data),B.next=L,L.prev=B,L=B,I._size++;else L=new Z(S.data),I._top=L,I._size++;S=S.prev}return I}clear(){return this._top=null,this._size=0,this}copy(){let D=new Y,I=null,L,B;B=this._top;while(B){if(I)L=new Z(B.data),L.next=I,I.prev=L,I=L;else I=new Z(B.data),D._top=I;D._size++,B=B.prev}return D}append(D,I=0){let L,B;for(L=0;L<I>>2;L++)B=L<<2,this.push(D(B,this)),this.push(D(B+1,this)),this.push(D(B+2,this)),this.push(D(B+3,this));for(B=L<<2;B<I;B++)this.push(D(B,this));return this}[Symbol.iterator](){let D=this._top;return{next(){if(D){let I=D.data;return D=D.prev,{value:I,done:!1}}return{value:void 0,done:!0}}}}}class lT{_top=[];constructor(D){if(D)this.push(D)}get size(){return this._top.length}get isEmpty(){return this.size===0}get top(){return this._top[this._top.length-1]}push(D){if(typeof D!=="undefined")this._top[this._top.length]=D;return this}pushMany(D){let I=this._top;for(let L of D)I.push(L);return this}pop(){let D=null;if(this.size)D=this.top,this._top.length--;return D}popMany(D){let I,L=-1,B=[],S=this._top,x=S.length;if(this.size<D)D=this.size;for(I=x;L++,I-- >D+1;)B[L++]=S[I--],B[L]=S[I];if(I===x-D)B[L]=S[I];return this._top.length-=D,B}traverse(D){let I=this.size;while(I){let L=this._top[--I];D(L,this)}return this}popAndTraverse(D){let I=[];while(this.size){let L=this.pop();D(L,this),I[I.length]=L}return I}filter(D){let I=new lT,L=I._top,B=this._top.length,S=this._top,x,M=0;for(x=0;x<B-1;x+=2){if(D(S[x],this))L[M++]=S[x];if(D(S[x+1],this))L[M++]=S[x+1]}if(x===B-1){if(D(S[x],this))L[M]=S[x]}return I}get list(){let D=this._top;return this._top=[],D}loop(D,I){let L=this.size,B=0;while(L&&B++<I)if(!D(this._top[--L],this))break;return this}copy(){let D,I=new lT,L=this._top,B=I._top,S=L.length;for(D=S;D-- >1;)B[D]=L[D--],B[D]=L[D];if(D===0)B[D]=L[D];return I}clear(){return this._top=[],this}append(D,I=0){let L,B=this._top.length,S=this._top;for(L=I;L-- >1;)S[B+L]=D(L--,this),S[B+L]=D(L,this);if(L===0)S[B]=D(L,this);return this}[Symbol.iterator](){let D=this._top.length;return{next:()=>{if(D===0)return{done:!0,value:void 0};return{done:!1,value:this._top[--D]}}}}}var aL=zD(DT(),1);class O{static random(D,I=0,L=1){return new O().enqueueMany(Array.from({length:D}).map((B)=>I+Math.random()*(L-I)))}_head=null;_tail=null;_size=1/0;_length=0;constructor(D,I=1/0){if(this.size=I,D)this.enqueue(D)}get size(){return this._size}set size(D){this._size=D}get isEmpty(){return this._head===null&&this._tail===null&&this._length===0}get length(){return this._length}get peek(){return this._head?.data||null}get rear(){return this._tail?.data||null}_enqueue(D){if(this._size<this._length+1)h("Queue enqueue")();if(!this._tail)this._tail=D,this._head=D;else D.prev=this._tail,this._tail.next=D,this._tail=D;this._length++}enqueue(D){if(D){let I=new Z(D);this._enqueue(I)}return this}enqueueMany(D){let I=D.length,L,B,S=I-1;for(L=I;L-- >1;)B=new Z(D[S-L--]),this._enqueue(B),B=new Z(D[S-L]),this._enqueue(B);if(L===0)B=new Z(D[S]),this._enqueue(B);return this}dequeue(){if(this.isEmpty)y("Queue dequeue")();let D=this._head?.data||null;if(this._head=this._head?.next||null,this._head)this._head.prev=null;else this._tail=null;return this._length--,D}dequeueMany(D=1){let I=[],L,B;for(L=D;L-- >1;){if(this._head){if(B=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(B.data),this._length--,L--}else y("Queue dequeueMany")();if(this._head){if(B=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(B.data),this._length--}else y("Queue dequeueMany")()}if(L===0)if(this._head){if(B=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(B.data),this._length--}else y("Queue dequeueMany")();return I}traverse(D,I=!1){let L=I?this._tail:this._head;while(L)D(L,this),L=I?L.prev:L.next;return this}filter(D){let I=new O,L=this._head;while(L){if(D(L,this))I.enqueue(L.data);L=L.next}return I}contains(D){let I=this._head;while(I)if(new aL.default(I.data).isSame(D).answer)return!0;else I=I.next;return!1}reverse(){let D=this._head,I=null;this._tail=this._head;while(D)I=D.prev,D.prev=D.next,D.next=I,D=D.prev;if(I)this._head=I.prev;return this}clean(){return this._head=null,this._tail=null,this._size=1/0,this._length=0,this}copy(){let D=new O,I=this._head;while(I){let L=new Z(I.data);L.id=I.id,D._enqueue(L),I=I.next}return D.size=this.size,D}merge(D){if(this.isEmpty)this._head=D._head,this._tail=D._tail;else if(D._head){if(this._tail)this._tail.next=D._head,D._head.prev=this._tail;this._tail=D._tail}return this._length+=D._length,this}toArray(){let D=[];return this.traverse((I)=>D.push(I.data)),D}[Symbol.iterator](){let D=this._head;return{next(){if(D){let I=D.data;return D=D.next,{value:I,done:!1}}return{value:void 0,done:!0}}}}}class GT{order=mT;search=gT;_root=null;__unique__=!1;constructor(D){if(D)this.root=D}get root(){return this._root?.data||null}set root(D){if(D)this._root=new g(D)}get rootNode(){return this._root}set rootNode(D){this._root=D}get isEmpty(){return!this._root}get size(){let D=0;return this.BFS((I)=>D++),D}get unique(){return this.__unique__}set unique(D){this.__unique__=D}getNodeById(D){let I=null;return this.loop((L)=>{if(L.id===D)return I=L,!1;return!0}),I}height(D=this._root){if(!D)return 0;return 1+oL(this.height(D.left),this.height(D.right))}clean(){return this._root=null,this.order=mT,this.search=gT,this}copy(){let I=new this.constructor;return I.order=this.order,I.search=this.search,this.BFS((L)=>{I.insert(L?.data,L?.id)}),I}isExactlySame(D){let I=this._root,L=D._root,B=new Y(I),S=new Y(L);if(!B.isEmpty&&!S.isEmpty)return rT(B,S);return!1}isSame(D){let I=this._root,L=D._root,B=new Y(I),S=new Y(L);if(!B.isEmpty&&!S.isEmpty)return RD(B,S);return!1}has(D){let I=!1;return this.loop((L)=>(I=L.id!==D,!I)),I}loop(D){let I=new O(this._root);return pT(D,I,this)}insert(D,I){if(typeof D==="object"){if(D?.id)I=D.id}let L=new g(D);return e(this,L,I),this}insertMany(D,I=[]){let L=D.length,B;if(I.length){if(I.length!==D.length)throw new Error("The ids is declared but the length is not identical to the data length.")}for(B=0;B<L-1;B++)this.insert(D[B],I[B++]),this.insert(D[B],I[B]);if(B===L-1)this.insert(D[L-1],I[L-1]);return this}delete(D,I=this.search){let L=null;if(typeof D==="string")L=this.getNodeById(D);if(!L)L=m(this._root,D,I);return k(L,this),L?.data||null}deleteNode(D){let I=this.binarySearchNode(D);if(!I)return null;return k(I,this),I.prev=null,I.right=null,I.left=null,I}binarySearch(D,I=this.search){return m(this._root,D,I)?.data||null}binarySearchNode(D){return a(this,this._root,D)}min(D=this._root){let I=D;if(I?.left)return this.min(I.left);return I?.data||null}minNode(D=this._root){let I=D;if(I?.left)return this.minNode(I.left);return I}max(D=this._root){let I=D;if(I?.right)return this.max(I.right);return I?.data||null}maxNode(D=this._root){let I=D;if(I?.right)return this.maxNode(I.right);return I}predecessor(D=this._root){if(D?.left)return this.max(D.left);else return XT(D)?.data||null}predecessorNode(D=this._root){if(D?.left)return this.maxNode(D.left);else return XT(D)}successor(D=this._root){if(D?.right)return this.min(D.right);else return NT(D)?.data||null}successorNode(D=this._root){if(D?.right)return this.minNode(D.right);else return NT(D)}filter(D){let I=new GT;return I.order=this.order,this.BFS((L,B)=>{if(D(L,B))I.insert(L?.data)}),I}BFS(D){let I=new O(this._root);return qT(this,I,D),this}DFS(D){let I=new Y(this._root);return wT(this,I,D),this}singleRightRotation(D){if(!D)return this;return VD(D,this),this}singleLeftRotation(D){if(!D)return this;return HD(D,this),this}doubleLeftRightRotation(D){if(!D)return this;return LD(D,this),this}doubleRightLeftRotation(D){if(!D)return this;return SD(D,this),this}toArray(D="DFS"){let I=[];return this[D]((L)=>I.push(L?.data)),I}[Symbol.iterator](){let D=new O;return D.enqueue(this._root),{next(){if(!D.isEmpty){let I=D.dequeue(),L=I.data;if(I.left)D.enqueue(I.left);if(I.right)D.enqueue(I.right);return{value:L,done:!1}}return{value:void 0,done:!0}}}}print(D=this._root,I=0,L="Root: ",B=(S)=>S.id||null){if(D===null)return;if(console.log(" ".repeat(I*2)+L+B(D,this)),D.left)this.print(D.left,I+1,"L--> ",B);if(D.right)this.print(D.right,I+1,"R--> ",B)}}var _=(D,I)=>{if(!D)return;D.balance=I.height(D.right)-I.height(D.left),_(D.left,I),_(D.right,I)},aT=(D,I)=>{if(!D)return;return _(D,I),eL(D,I),aT(D.prev,I)},eL=(D,I)=>{if(D.balance===-2){if(D.left?.balance<0)I.singleRightRotation(D),_(D,I);else if(D.left?.balance>0)I.doubleLeftRightRotation(D),_(D,I)}else if(D.balance===2){if(D.right?.balance>0)I.singleLeftRotation(D),_(D,I);if(D.right?.balance<0)I.doubleRightLeftRotation(D),_(D,I)}},eT=(D,I,L=!0)=>{if(D.prev){if(D===D.prev.left)D.prev.balance-=1;else D.prev.balance+=1;if(D=D.prev,!D.balance)return;if(L)eL(D,I);return eT(D,I)}};class b extends GT{constructor(D){super(D)}get root(){return this._root?.data||null}set root(D){if(D)this._root=new u(D)}insert(D,I){if(D?.id)I=D.id;let L=new u(D),B=e(this,L,I);if(B)eT(B,this);return this}delete(D,I=this.search){let L=m(this._root,D,I);if(!L)return null;let B=k(L,this);return _(B,this),L.data}deleteNode(D){let I=this.binarySearchNode(D);if(!I)return null;let L=k(I,this);return aT(L,this),I.prev=null,I.left=null,I.right=null,I.balance=0,I}copy(){let I=new this.constructor;return I.order=this.order,I.search=this.search,I.unique=this.unique,this.BFS((L)=>{I.insert(L.data,L.id)}),I}print(D=this._root,I=0,L="Root: ",B=(S)=>S.data){if(D===null)return;if(console.log(" ".repeat(I*2)+L+B(D,this)+` [BF = ${D.balance}]`),D.left)this.print(D.left,I+1,"L--> ",B);if(D.right)this.print(D.right,I+1,"R--> ",B)}}var PD=(D)=>{if(D==="Map")return new Map;if(D==="AVL"){let I=new b;return I.unique=!0,I}return null};var QT=(D,I)=>{if(I instanceof Map)I.set(D.id,D);if(I instanceof b)I.insert(D,D.id)},fT=(D,I)=>{if(I)I.delete(D)};var TD=(D,I,L,B)=>{if(!I)return;return D(I.data,I.id,L),I=B?I.prev:I.next,TD(D,I,L,B)},DD=(D,I,L,B)=>{if(!I)return;if(!D(I.data,I.id,L))return;return I=B?I.prev:I.next,DD(D,I,L,B)};var WD=(D,I)=>{if(I instanceof Map)return I.get(D)||null;else if(I instanceof b)return I.binarySearch(D);return null},ID=(D,I)=>{if(!I)return null;if(I.id===D)return I;return I=I.next,ID(D,I)};var ND=(D,I,L,B,S,x)=>{let M,R,H;for(M=I;M-- >1;){if(S<<=0,R=S/127773>>0,S=16807*(S-R*127773)-R*2836>>0,S<0)S+=2147483647;if(H=L+(B-L)*S*0.0000000004656612875,x)D.addLast(x(H,`${I-M-1}`,D));else D.addLast(L+(B-L)*S*0.0000000004656612875,`${I-M-1}`);if(M--,S<<=0,R=S/127773>>0,S=16807*(S-R*127773)-R*2836>>0,S<0)S+=2147483647;if(H=L+(B-L)*S*0.0000000004656612875,x)D.addLast(x(H,`${I-M-1}`,D));else D.addLast(L+(B-L)*S*0.0000000004656612875,`${I-M-1}`)}if(M===0){if(S<<=0,R=S/127773>>0,S=16807*(S-R*127773)-R*2836>>0,S<0)S+=2147483647;if(H=L+(B-L)*S*0.0000000004656612875,x)D.addLast(x(H,`${I-1}`,D));else D.addLast(L+(B-L)*S*0.0000000004656612875,`${I-1}`)}};var BD=(D,I,L,B,S)=>{if(!D)return;let{data:x,id:M}=D;if(I(x,M,L))B.addLast(x,M);return D=S?D.prev:D.next,BD(D,I,L,B,S)};var XD=(D,I,L=["data"])=>{if(D&&I){if(L.every((B)=>iT(D[B],I[B])))return D=D.next,I=I.next,XD(D,I,L);return!1}return!0},ED=(D,I)=>XD(D,I),JD=(D,I)=>XD(D,I,["data","id"]);class zT{_size=1/0;_head=null;_tail=null;_currentSize=0;_secureStore="Map";_map=null;static random(D){let{length:I,from:L=0,to:B=1,seed:S=123456,callback:x,mapType:M="Map"}=D,R=new zT;return R.mapType=M,ND(R,I,L,B,S,x),R}constructor(D,I=1/0){if(this.size=I,D)this.addLast(D)}get size(){return this._size}get mapType(){return this._secureStore}set mapType(D){this._secureStore=D,this._map=PD(this.mapType)}set size(D){this._size=D}get head(){return this._head?.data||null}get top(){return this._tail?.data||null}get length(){return this._currentSize}get isEmpty(){return this.length===0&&this._head===this._tail&&this._head===null}addLast(D,I){if(D){if(this._size<this._currentSize+1)h("DoublyLinkedList addLast")();let L=new Z(D);if(I)L.id=I;if(this._head)this._tail.next=L,L.prev=this._tail;else this._head=L;this._tail=L,this._currentSize++,QT(L,this._map)}return this}removeLast(){if(!this._head)y("DoublyLinkedList removeLast")();let D=this.top;if(fT(this._tail?.id,this._map),this._head===this._tail)this._head=null,this._tail=null;else this._tail=this._tail.prev,this._tail.next=null;return this._currentSize--,D}removeFirst(){if(!this._head)y("DoublyLinkedList removeFirst")();let D=this._head?.data;if(fT(this._head?.id,this._map),this._head===this._tail)this._head=null,this._tail=null;else this._head=this._head?.next,this._head.prev=null;return this._currentSize--,D}remove(D){let I=this._findNodeById(D);if(I){if(fT(I.id,this._map),this._head.id===D)this.removeFirst();else if(this._tail.id===D)this.removeLast();else I.next.prev=I.prev,I.prev.next=I.next;return I.prev=null,I.next=null,this._currentSize--,I.data}return null}insertAfter(D,I,L){let B=this._findNodeById(D),S=new Z(I);if(L)S.id=L;if(B){if(this._size<this._currentSize+1)h("DoublyLinkedList insertAfter")();if(S.prev=B,S.next=B.next,B===this._tail)this._tail=S;else B.next.prev=S;B.next=S,QT(S,this._map),this._currentSize++}return this}insertBefore(D,I,L){let B=this._findNodeById(D),S=new Z(I);if(L)S.id=L;if(B){if(this._size<this._currentSize+1)h("DoublyLinkedList insertBefore")();if(S.prev=B.prev,S.next=B,B===this._head)this._head=S;else B.prev.next=S;B.prev=S,QT(S,this._map),this._currentSize++}return this}values(){let D=new Map;return this.traverse((I,L)=>D.set(L,I)),D}has(D){return this._findNodeById(D)!==null}traverse(D,I=!1){let L=I?this._tail:this._head;return TD(D,L,this,I),this}loop(D,I=!1){let L=I?this._tail:this._head;return DD(D,L,this,I),this}filter(D,I=!1){let L=new zT,B=I?this._tail:this._head;return BD(B,D,this,L,I),L}copy(D=!1){let I=new zT;return I.size=this.size,I._secureStore=this._secureStore,this.traverse((L,B)=>{let S=new Z(L);S.id=B,I.addLast(S.data)},D),I}every(D){let I=!1;return this.loop((L,B,S)=>(I=D(L,B,S),I)),I}any(D){let I=!1;return this.loop((L,B,S)=>(I=D(L,B,S),!I)),I}clean(){return this._size=1/0,this._currentSize=0,this._head=null,this._tail=null,this._secureStore="Map",this._map=new Map,this}merge(D){if(!D.isEmpty){if(this._size=this._size+D._size,this.isEmpty)this._head=D._head,this._tail=D._tail;else{let I=this._tail;I.next=D._head,I.next.prev=this._tail,this._tail=D._tail}this._currentSize+=D._currentSize}return this}[Symbol.iterator](){let D=this._head;return{next(){if(D){let I=D.data;return D=D.next,{value:I,done:!1}}return{value:void 0,done:!0}}}}isSame(D){let I=this._head,L=D._head;if(this.length!==D.length)return!1;return ED(I,L)}isExactlySame(D){let I=this._head,L=D._head;if(this.length!==D.length)return!1;if(this._secureStore!==D._secureStore)return!1;return JD(I,L)}_findNodeById(D){let I=null;if(this._map)I=WD(D,this._map);else I=ID(D,this._head);return I}}function KD(D){return function(I,L,B){let S=B.value;B.value=function(x){if(typeof x!=="undefined"&&this.length>=this.size)D();return S.call(this,x)}}}var YD=(D,I,L)=>{while(I>0){let B=I-1>>1;if(!(L==="max"?D[I].id>D[B].id:D[I].id<D[B].id))break;[D[I],D[B]]=[D[B],D[I]],I=B}};var HM=(D,I,L,B)=>{while(!0){let S=(I<<1)+1,x=S+1,M=I;if(S<L&&(B==="max"?D[S].id>D[M].id:D[S].id<D[M].id))M=S;if(x<L&&(B==="max"?D[x].id>D[M].id:D[x].id<D[M].id))M=x;if(M===I)break;[D[I],D[M]]=[D[M],D[I]],I=M}},UT=(D,I)=>{for(let L=D.length-2>>1;L>=0;L--)HM(D,L,D.length,I)};var ZD=(D,I,L)=>{let B=[],S=(x)=>{if(x>=D.length)return;let M=D[x];if(M.id===I)B.push(M);if(L==="max"?M.id<I:M.id>I)return;S((x<<1)+1),S((x<<1)+2)};return S(0),B.length?B:null};var OD=(D,I,L)=>{let B=-1,S=(x)=>{if(x>=D.length)return;let M=D[x];if(M.id===I){B=x;return}if(L==="max"?M.id<I:M.id>I)return;S((x<<1)+1),S((x<<1)+2)};return S(0),B};class CT{_heap=[];_type="max";_size=1/0;_compare=(D,I)=>D>I?1:D<I?-1:0;static from(D,I=1/0,L="max"){let B=new CT;return B.size=I,B.type=L,B._heap=D.map((S)=>new l(S)),UT(B._heap,L),B}constructor(D){this.add(D)}get compare(){return this._compare}set compare(D){this._compare=D}get length(){return this._heap.length}set length(D){this._heap.length=D}get size(){return this._size}set size(D){this._size=D}get type(){return this._type}set type(D){this._type=D}add(D){if(typeof D==="undefined"||D===null)return this;let I=new l(D);return this._heap[this._heap.length]=I,YD(this._heap,this.length-1,this.type),this}search(D){return ZD(this._heap,D,this.type)}searchIndex(D){return OD(this._heap,D,this.type)}remove(D){let I=this.searchIndex(D);if(I===-1)return null;let[L]=this._heap.splice(I,1);return UT(this._heap,this.type),L.data}merge(D){if(D._heap.length){if(this._heap=this._heap.concat(D._heap),this._heap.length>this.size)this.size=this._heap.length;UT(this._heap,this.type)}return this}toArray(){return this._heap.map((D)=>D.data)}[Symbol.iterator](){let D=this._heap,I=0;return{next(){if(I<D.length)return{value:D[I++].data,done:!1};return{value:void 0,done:!0}}}}}UD([KD(h("PrimaryHeap.add")),_T("design:type",Function),_T("design:paramtypes",[typeof T==="undefined"?Object:T]),_T("design:returntype",typeof CT==="undefined"?Object:CT)],CT.prototype,"add",null);class T1 extends CT{constructor(D){super(D)}}class hT{__G__=new Map;__S__=null;constructor({nodes:D,edges:I,state:L}={}){if(D)this.nodes=D;if(I)this.edges=I;if(L)this.state=L}get state(){return this.__S__}set state(D){this.__S__=D}get nodes(){let D=this.__G__,I=[];return D.forEach((L)=>I.push({name:L.name,data:L.data})),I}set nodes(D){for(let I of D)this.addNode(I)}get edges(){let D=this.__G__,I=[];return D.forEach((L)=>{L.outgoing.forEach((B)=>I.push({source:B.source.name,target:B.target.name,data:B.data}))}),I}set edges(D){for(let I of D)this.addEdge({...I,params:{}})}getNodeInstance(D){return this.__G__.get(D)||null}getNode(D){let I=this.__G__.get(D);if(!I)return null;return{name:I.name,data:I.data}}addNode({name:D,data:I,options:L={}}){let B=(M)=>`Node with name ${M} already exists.`,S=this.__G__;if(S.has(D))throw new Error(B(D));let x=this.createNode({name:D,data:I,options:L});return S.set(D,x),this}getEdgeInstance({source:D,target:I}){let L=this.__G__,B=L.get(D),S=L.get(I);if(!B)return null;if(!S)return null;return B.getConnection(I)||null}getEdge({source:D,target:I}){let L=this.__G__,B=L.get(D),S=L.get(I);if(!B)return null;if(!S)return null;let x=B.getConnection(I)||null;if(!x)return null;return{source:x.source.name,target:x.target.name,data:x.data}}addEdge({source:D,target:I,data:L,params:B}){let S=this.__G__,x=`Edge with source ${D} and target ${I} already exists.`,M=(P)=>`Node with name ${P} not exists.`,R=S.get(D),H=S.get(I);if(!R)throw new Error(M(D));if(!H)throw new Error(M(I));if(R.outgoing.has(I))throw new Error(x);return R.connect({node:H,data:L,params:B}),this}removeNode(D){let I=this.__G__,L=I.get(D);if(!L)return null;let{incoming:B,outgoing:S}=L;for(let[x,M]of B)M.source.outgoing.delete(D);for(let[x,M]of S)M.target.incoming.delete(D);return I.delete(D),L}removeEdge({source:D,target:I}){let L=this.__G__,B=L.get(D),S=L.get(I);if(!B)return null;if(!S)return null;return B.removeConnection({node:S})||null}}class GD extends hT{createNode({name:D,data:I}){return new ZT({name:D,data:I})}clone(){let D=new GD;for(let I of this)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToGraph(){let D=new c;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToBaseNetwork(){let D=new p;for(let I of this)D.addNode({name:I.name,data:I.data,options:{value:1}});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:1}});return D}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}class c extends hT{static nCube(D){let I=new c,L=1<<D;for(let B=0;B<L;B++){let S=B.toString(2).padStart(D,"0").split("").map(Number);I.addNode({name:B.toString(),data:S})}for(let B=0;B<L;B++)for(let S=0;S<D;S++){let x=B^1<<S;I.addEdge({source:B.toString(),target:x.toString(),data:null,params:{}})}return I}createNode({name:D,data:I,options:L}){return new ZT({name:D,data:I,...L})}inDegree(D){let I=`Node with name ${D} does not exists in the graph.`,B=this.__G__.get(D);if(!B)throw new Error(I);return B.inDegree}outDegree(D){let I=`Node with name ${D} does not exists in the graph.`,B=this.__G__.get(D);if(!B)throw new Error(I);return B.outDegree}get order(){return this.__G__.size}get size(){let D=0;for(let I of this)D+=I.outgoing.size;return D}get density(){let D=this.order;return this.size/(D*D)}BFSNode({startingNode:D,callback:I=()=>{},errorCallback:L=(B,S)=>console.log(S.message)}){let B=new O,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.enqueue(x),S.add(x.name);while(!B.isEmpty){let M=B.dequeue();try{I(M,this)}catch(R){L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.enqueue(H)}}return this}async BFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:L=async(B,S)=>console.log(S.message)}){let B=new O,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.enqueue(x),S.add(x?.name);while(!B.isEmpty){let M=B.dequeue();try{await I(M,this)}catch(R){await L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.enqueue(H)}}return this}BFS({callback:D=()=>{},errorCallback:I=(L,B)=>console.log(B.message)}={}){let L=new O,B=new Set;for(let S of this){if(B.has(S.name))continue;L.enqueue(S),B.add(S.name);while(!L.isEmpty){let x=L.dequeue();try{D(x,this)}catch(M){I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.enqueue(R),B.add(R.name)}}}return this}async BFSAsync({callback:D=async()=>{},errorCallback:I=async(L,B)=>console.log(B.message)}={}){let L=new O,B=new Set;for(let S of this){if(B.has(S.name))continue;L.enqueue(S),B.add(S.name);while(!L.isEmpty){let x=L.dequeue();try{await D(x,this)}catch(M){await I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.enqueue(R),B.add(R.name)}}}return this}DFS({callback:D=()=>{},errorCallback:I=(L,B)=>console.log(B.message)}){let L=new Y,B=new Set;for(let S of this){if(B.has(S.name))continue;L.push(S),B.add(S.name);while(!L.isEmpty){let x=L.pop();try{D(x,this)}catch(M){I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.push(R),B.add(R.name)}}}return this}async DFSAsync({callback:D=async()=>{},errorCallback:I=async(L,B)=>console.log(B.message)}={}){let L=new Y,B=new Set;for(let S of this){if(B.has(S.name))continue;L.push(S),B.add(S.name);while(!L.isEmpty){let x=L.pop();try{await D(x,this)}catch(M){await I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.push(R),B.add(R.name)}}}return this}DFSNode({startingNode:D,callback:I=()=>{},errorCallback:L=(B,S)=>console.log(S.message)}){let B=new Y,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.push(x),S.add(x.name);while(!B.isEmpty){let M=B.pop();try{I(M,this)}catch(R){L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.push(H)}}return this}async DFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:L=async(B,S)=>console.log(S.message)}){let B=new Y,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.push(x),S.add(x.name);while(!B.isEmpty){let M=B.pop();try{await I(M,this)}catch(R){await L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.push(H)}}return this}clone(){let D=new c;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToBaseNetwork(){let D=new p;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:1}});return D}subgraph({callback:D}){let I=new c,L=new Set;for(let B of this)if(D(B,this))I.addNode({name:B.name,data:B.data}),L.add(B.name);for(let B of this.edges)if(L.has(B.source)&&L.has(B.target))I.addEdge({source:B.source,target:B.target,data:B.data,params:{}});return I}union(D){let I=this.clone();for(let L of D.nodes)if(!I.getNodeInstance(L.name))I.addNode({name:L.name,data:L.data});for(let L of D.edges)if(!I.getEdgeInstance({source:L.source,target:L.target}))I.addEdge({source:L.source,target:L.target,data:L.data,params:{}});return I}difference(D){let I=this.clone();for(let L of D.nodes)if(I.getNodeInstance(L.name))I.removeNode(L.name);for(let L of D.edges)I.removeEdge({source:L.source,target:L.target});return I}kronecker(D){let I=new c;for(let L of this)for(let B of D)I.addNode({name:`${L.name}|${B.name}`,data:[L.data,B.data]});for(let L of this.edges)for(let B of D.edges)I.addEdge({source:`${L.source}|${B.source}`,target:`${L.target}|${B.target}`,data:[L.data,B.data],params:{}});return I}isConnected(){if(this.order===0)return!0;let D=this.__G__.values().next().value,I=new Set,L=[D];I.add(D.name);while(L.length){let B=L.pop();for(let S of B.outgoing.values()){let x=S.target;if(!I.has(x.name))I.add(x.name),L.push(x)}for(let S of B.incoming.values()){let x=S.source;if(!I.has(x.name))I.add(x.name),L.push(x)}}return I.size===this.order}bridges(){let D=new Map;for(let H of this)D.set(H.name,new Set);for(let H of this)for(let P of H.outgoing.values()){if(D.get(H.name).add(P.target.name),!D.has(P.target.name))D.set(P.target.name,new Set);D.get(P.target.name).add(H.name)}let I=new Set,L=new Map,B=new Map,S=new Map,x=[],M=0,R=(H)=>{I.add(H),L.set(H,++M),B.set(H,L.get(H));for(let P of D.get(H)||[])if(!I.has(P)){if(S.set(P,H),R(P),B.set(H,Math.min(B.get(H),B.get(P))),B.get(P)>L.get(H)){let J=this.getEdge({source:H,target:P})||this.getEdge({source:P,target:H});x.push(J||{source:H,target:P,data:null})}}else if(P!==S.get(H))B.set(H,Math.min(B.get(H),L.get(P)))};for(let H of this)if(!I.has(H.name))S.set(H.name,null),R(H.name);return x}directedBridges(){let D=[];for(let I of this)for(let L of I.outgoing.values()){let B=I.name,S=L.target.name,x=[B],M=new Set([B]),R=!1;while(x.length&&!R){let H=x.pop(),P=this.__G__.get(H);for(let J of P.outgoing.values()){if(H===B&&J.target.name===S)continue;let K=J.target.name;if(K===S){R=!0;break}if(!M.has(K))M.add(K),x.push(K)}}if(!R)D.push({source:B,target:S,data:L.data})}return D}cycles(){let D=[],I=[],L=new Set,B=new Set,S=new Set,x=(M)=>{B.add(M.name),L.add(M.name),I.push(M.name);for(let R of M.outgoing.values()){let H=R.target;if(!L.has(H.name)){if(!B.has(H.name))x(H)}else{let P=I.indexOf(H.name);if(P!==-1){let J=[...I.slice(P),H.name],K=J.join("->");if(!S.has(K))D.push(J),S.add(K)}}}I.pop(),L.delete(M.name)};for(let M of this)if(!B.has(M.name))x(M);return D}Hamiltonian(){let D=this.order;if(D===0)return[];let L=[...this.__G__.keys()][0],B=[],S=new Set,x=(M)=>{if(S.add(M),B.push(M),B.length===D){if(this.__G__.get(M).outgoing.has(L))return B.push(L),!0}for(let[R]of this.__G__.get(M).outgoing)if(!S.has(R)&&x(R))return!0;return S.delete(M),B.pop(),!1};if(x(L))return B;return null}topologicalOrder(){let D=new Map,I=[],L=[];for(let B of this){let S=B.incoming.size;if(D.set(B.name,S),S===0)I.push(B)}while(I.length){let B=I.shift();L.push(B.name);for(let S of B.outgoing.values()){let x=S.target,M=(D.get(x.name)||0)-1;if(D.set(x.name,M),M===0)I.push(x)}}return L.length===this.order?L:null}biGraph(){if(this.order===0)return!0;let D=new Map;for(let I of this){if(D.has(I.name))continue;D.set(I.name,0);let L=[I];while(L.length){let B=L.shift(),S=D.get(B.name),x=[];for(let M of B.outgoing.values())x.push(M.target);for(let M of B.incoming.values())x.push(M.source);for(let M of x)if(!D.has(M.name))D.set(M.name,1-S),L.push(M);else if(D.get(M.name)===S)return!1}}return!0}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}class p extends hT{static nCube(D){let I=new p,L=1<<D;for(let B=0;B<L;B++){let S=B.toString(2).padStart(D,"0").split("").map(Number);I.addNode({name:B.toString(),data:S,options:{value:1}})}for(let B=0;B<L;B++)for(let S=0;S<D;S++){let x=B^1<<S;I.addEdge({source:B.toString(),target:x.toString(),data:null,params:{weight:1}})}return I}constructor({nodes:D,edges:I}={}){super({nodes:D,edges:I})}createNode({name:D,data:I,options:L}){return new OT({name:D,data:I,...L})}getNode(D){let L=this.__G__.get(D);if(!L)return null;return{name:L.name,data:L.data,value:L.value}}inDegree(D){let I=`Node with name ${D} does not exists in the graph.`,B=this.__G__.get(D);if(!B)throw new Error(I);return B.inDegree}outDegree(D){let I=`Node with name ${D} does not exists in the graph.`,B=this.__G__.get(D);if(!B)throw new Error(I);return B.outDegree}get order(){return this.__G__.size}get weightedOrder(){let D=0;for(let I of this)D+=I.value;return D}get size(){let D=0;for(let I of this)D+=I.outgoing.size;return D}get weightedSize(){let D=0;for(let I of this)for(let[L,B]of I.outgoing)D+=B.weight;return D}get density(){let D=this.order;return this.size/(D*D)}get weightedDensity(){let D=this.order;return this.weightedSize/(D*D)}get nodes(){let D=[];for(let I of this)D.push({name:I.name,data:I.data,value:I.value});return D}get edges(){let D=[];for(let I of this)for(let[L,B]of I.outgoing)D.push({source:B.source.name,target:B.target.name,data:B.data,weight:B.weight});return D}adjacencyMatrix(){let D=[...this.__G__.keys()],I=new Map;D.forEach((B,S)=>I.set(B,S));let L=D.map(()=>Array(D.length).fill(0));for(let B of this){let S=I.get(B.name);for(let x of B.outgoing.values()){let M=I.get(x.target.name);L[S][M]=x.weight}}return L}clone(){let D=new p;for(let I of this.nodes)D.addNode({name:I.name,data:I.data,options:{value:I.value}});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:I.weight}});return D}BFSNode({startingNode:D,callback:I=()=>{},errorCallback:L=(B,S)=>console.log(S.message)}){let B=new O,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.enqueue(x),S.add(x.name);while(!B.isEmpty){let M=B.dequeue();try{I(M,this)}catch(R){L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.enqueue(H)}}return this}async BFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:L=async(B,S)=>console.log(S.message)}){let B=new O,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.enqueue(x),S.add(x.name);while(!B.isEmpty){let M=B.dequeue();try{await I(M,this)}catch(R){await L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.enqueue(H)}}return this}BFS({callback:D=()=>{},errorCallback:I=(L,B)=>console.log(B.message)}={}){let L=new O,B=new Set;for(let S of this){if(B.has(S.name))continue;L.enqueue(S),B.add(S.name);while(!L.isEmpty){let x=L.dequeue();try{D(x,this)}catch(M){I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.enqueue(R),B.add(R.name)}}}return this}async BFSAsync({callback:D=async()=>{},errorCallback:I=async(L,B)=>console.log(B.message)}={}){let L=new O,B=new Set;for(let S of this){if(B.has(S.name))continue;L.enqueue(S),B.add(S.name);while(!L.isEmpty){let x=L.dequeue();try{await D(x,this)}catch(M){await I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.enqueue(R),B.add(R.name)}}}return this}DFS({callback:D=()=>{},errorCallback:I=(L,B)=>console.log(B.message)}){let L=new Y,B=new Set;for(let S of this){if(B.has(S.name))continue;L.push(S),B.add(S.name);while(!L.isEmpty){let x=L.pop();try{D(x,this)}catch(M){I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.push(R),B.add(R.name)}}}return this}async DFSAsync({callback:D=async()=>{},errorCallback:I=async(L,B)=>console.log(B.message)}={}){let L=new Y,B=new Set;for(let S of this){if(B.has(S.name))continue;L.push(S),B.add(S.name);while(!L.isEmpty){let x=L.pop();try{await D(x,this)}catch(M){await I(x,M,this)}for(let M of x.outgoing.values()){let R=M.target;if(!B.has(R.name))L.push(R),B.add(R.name)}}}return this}DFSNode({startingNode:D,callback:I=()=>{},errorCallback:L=(B,S)=>console.log(S.message)}){let B=new Y,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.push(x),S.add(x.name);while(!B.isEmpty){let M=B.pop();try{I(M,this)}catch(R){L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.push(H)}}return this}async DFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:L=async(B,S)=>console.log(S.message)}){let B=new Y,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;B.push(x),S.add(x.name);while(!B.isEmpty){let M=B.pop();try{await I(M,this)}catch(R){await L(M,R,this)}for(let R of M.outgoing.values()){let H=R.target;if(!S.has(H.name))S.add(H.name),B.push(H)}}return this}subgraph({callback:D}){let I=new p,L=new Set;for(let B of this)if(D(B,this))I.addNode({name:B.name,data:B.data,options:{value:B.value}}),L.add(B.name);for(let B of this.edges)if(L.has(B.source)&&L.has(B.target))I.addEdge({source:B.source,target:B.target,data:B.data,params:{weight:B.weight}});return I}union(D){let I=this.clone();for(let L of D.nodes)if(!I.getNodeInstance(L.name))I.addNode({name:L.name,data:L.data,options:{value:L.value}});for(let L of D.edges)if(!I.getEdgeInstance({source:L.source,target:L.target}))I.addEdge({source:L.source,target:L.target,data:L.data,params:{weight:L.weight}});return I}difference(D){let I=this.clone();for(let L of D.nodes)if(I.getNodeInstance(L.name))I.removeNode(L.name);for(let L of D.edges)I.removeEdge({source:L.source,target:L.target});return I}kronecker(D){let I=new p;for(let L of this)for(let B of D)I.addNode({name:`${L.name}|${B.name}`,data:[L.data,B.data],options:{value:L.value*B.value}});for(let L of this.edges)for(let B of D.edges)I.addEdge({source:`${L.source}|${B.source}`,target:`${L.target}|${B.target}`,data:[L.data,B.data],params:{weight:L.weight*B.weight}});return I}isConnected(){if(this.order===0)return!0;let D=this.__G__.values().next().value,I=new Set,L=[D];I.add(D.name);while(L.length){let B=L.pop();for(let S of B.outgoing.values()){let x=S.target;if(!I.has(x.name))I.add(x.name),L.push(x)}for(let S of B.incoming.values()){let x=S.source;if(!I.has(x.name))I.add(x.name),L.push(x)}}return I.size===this.order}bridges(){let D=new Map;for(let H of this)D.set(H.name,new Set);for(let H of this)for(let P of H.outgoing.values()){if(D.get(H.name).add(P.target.name),!D.has(P.target.name))D.set(P.target.name,new Set);D.get(P.target.name).add(H.name)}let I=new Set,L=new Map,B=new Map,S=new Map,x=[],M=0,R=(H)=>{I.add(H),L.set(H,++M),B.set(H,L.get(H));for(let P of D.get(H)||[])if(!I.has(P)){if(S.set(P,H),R(P),B.set(H,Math.min(B.get(H),B.get(P))),B.get(P)>L.get(H)){let J=this.getEdgeInstance({source:H,target:P})||this.getEdgeInstance({source:P,target:H});if(J)x.push({source:J.source.name,target:J.target.name,data:J.data,weight:J.weight})}}else if(P!==S.get(H))B.set(H,Math.min(B.get(H),L.get(P)))};for(let H of this)if(!I.has(H.name))S.set(H.name,null),R(H.name);return x}directedBridges(){let D=[];for(let I of this)for(let L of I.outgoing.values()){let B=I.name,S=L.target.name,x=[B],M=new Set([B]),R=!1;while(x.length&&!R){let H=x.pop(),P=this.getNodeInstance(H);for(let J of P.outgoing.values()){if(H===B&&J.target.name===S)continue;let K=J.target.name;if(K===S){R=!0;break}if(!M.has(K))M.add(K),x.push(K)}}if(!R)D.push({source:B,target:S,data:L.data,weight:L.weight})}return D}cycles(){let D=[],I=[],L=new Set,B=new Set,S=new Set,x=(M)=>{B.add(M.name),L.add(M.name),I.push(M.name);for(let R of M.outgoing.values()){let H=R.target;if(!L.has(H.name)){if(!B.has(H.name))x(H)}else{let P=I.indexOf(H.name);if(P!==-1){let J=[...I.slice(P),H.name],K=J.join("->");if(!S.has(K))D.push(J),S.add(K)}}}I.pop(),L.delete(M.name)};for(let M of this)if(!B.has(M.name))x(M);return D}Hamiltonian(){let D=this.order;if(D===0)return[];let L=[...this.__G__.keys()][0],B=new Y,S=new Set,x=(M)=>{if(S.add(M),B.push(M),B.size===D){if(this.__G__.get(M).outgoing.has(L))return B.push(L),!0}for(let[R]of this.__G__.get(M).outgoing)if(!S.has(R)&&x(R))return!0;return S.delete(M),B.pop(),!1};if(x(L))return[...B];return null}topologicalOrder(){let D=new Map,I=[],L=[];for(let B of this){let S=B.incoming.size;if(D.set(B.name,S),S===0)I.push(B)}while(I.length){let B=I.shift();L.push(B.name);for(let S of B.outgoing.values()){let x=S.target,M=(D.get(x.name)||0)-1;if(D.set(x.name,M),M===0)I.push(x)}}return L.length===this.order?L:null}shortestPath({start:D,end:I}){let L=this.getNodeInstance(D),B=this.getNodeInstance(I);if(!L||!B)return null;let S=new Map,x=new Map,M=new Set;for(let H of this)S.set(H.name,1/0),x.set(H.name,null);S.set(D,0);while(M.size<this.order){let H=null,P=1/0;for(let[K,w]of S)if(!M.has(K)&&w<P)P=w,H=K;if(H===null)break;if(H===I)break;M.add(H);let J=this.getNodeInstance(H);for(let K of J.outgoing.values()){let w=K.target.name,QD=S.get(H)+K.weight;if(QD<S.get(w))S.set(w,QD),x.set(w,H)}}if(S.get(I)===1/0)return null;let R=new Y;for(let H=I;H;H=x.get(H)||null)R.push(H);return{distance:S.get(I),path:[...R],pathStack:R}}minimumSpanningTree(){let D=new p;for(let M of this)D.addNode({name:M.name,data:M.data,options:{value:M.value}});let I=[],L=new Set;for(let M of this)for(let R of M.outgoing.values()){let H=M.name,P=R.target.name,J=H<P?`${H}|${P}`:`${P}|${H}`;if(!L.has(J))L.add(J),I.push({source:H,target:P,weight:R.weight,data:R.data})}I.sort((M,R)=>M.weight-R.weight);let B=new Map,S=(M)=>{let R=B.get(M);while(R!==B.get(R))B.set(R,B.get(B.get(R))),R=B.get(R);return R},x=(M,R)=>{B.set(S(M),S(R))};for(let M of this)B.set(M.name,M.name);for(let M of I)if(S(M.source)!==S(M.target))D.addEdge({source:M.source,target:M.target,data:M.data,params:{weight:M.weight}}),x(M.source,M.target);return D}PRIM(D){let I=new p;for(let M of this)I.addNode({name:M.name,data:M.data,options:{value:M.value}});if(this.order===0)return I;let L=D?this.getNodeInstance(D):this.__G__.values().next().value;if(!L)return I;let B=new Set,S=[],x=(M)=>{for(let R of M.outgoing.values())if(!B.has(R.target.name))S.push({source:M.name,target:R.target.name,weight:R.weight,data:R.data})};B.add(L.name),x(L);while(B.size<this.order&&S.length){S.sort((H,P)=>H.weight-P.weight);let M=S.shift();while(M&&B.has(M.target))M=S.shift();if(!M)break;I.addEdge({source:M.source,target:M.target,data:M.data,params:{weight:M.weight}}),B.add(M.target);let R=this.getNodeInstance(M.target);x(R)}return I}PERT(){let D=this.topologicalOrder(),I=new Map;if(!D)return I;for(let L of D){let B=this.getNodeInstance(L),S=0;for(let x of B.incoming.values()){let M=(I.get(x.source.name)||0)+x.weight;if(M>S)S=M}I.set(L,S)}return I}CPM(){let D=this.topologicalOrder(),I=new Map,L=new Map;if(!D)return{duration:0,path:[],pathStack:new Y};for(let M of D){let R=0,H=null,P=this.getNodeInstance(M);for(let J of P.incoming.values()){let K=(I.get(J.source.name)||0)+J.weight;if(K>R)R=K,H=J.source.name}I.set(M,R),L.set(M,H)}let B=D[0],S=I.get(B)||0;for(let M of D){let R=I.get(M);if(R>S)S=R,B=M}let x=new Y;for(let M=B;M;M=L.get(M)||null)x.push(M);return{duration:S,path:[...x],pathStack:x}}biGraph(){if(this.order===0)return!0;let D=new Map;for(let I of this){if(D.has(I.name))continue;D.set(I.name,0);let L=new O(I);while(L.length){let B=L.dequeue(),S=D.get(B.name),x=[];for(let M of B.outgoing.values())x.push(M.target);for(let M of B.incoming.values())x.push(M.source);for(let M of x)if(!D.has(M.name))D.set(M.name,1-S),L.enqueue(M);else if(D.get(M.name)===S)return!1}}return!0}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}export{lT as StaticStack,GD as StateGraph,O as Queue,CT as PrimaryHeap,T1 as Heap,c as Graph,Y as DynamicStack,zT as DoublyLinkedList,p as BaseNetwork,hT as BaseGraph,GT as BST,b as AVLTree};
