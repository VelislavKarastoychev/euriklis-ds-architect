var I1=Object.create;var{getPrototypeOf:L1,defineProperty:UD,getOwnPropertyNames:B1}=Object;var S1=Object.prototype.hasOwnProperty;var zD=(D,I,B)=>{B=D!=null?I1(L1(D)):{};let L=I||!D||!D.__esModule?UD(B,"default",{value:D,enumerable:!0}):B;for(let S of B1(D))if(!S1.call(L,S))UD(L,S,{get:()=>D[S],enumerable:!0});return L};var W=(D,I)=>()=>(I||D((I={exports:{}}).exports,I),I.exports);var CD=function(D,I,B,L){var S=arguments.length,x=S<3?I:L===null?L=Object.getOwnPropertyDescriptor(I,B):L,R;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")x=Reflect.decorate(D,I,B,L);else for(var H=D.length-1;H>=0;H--)if(R=D[H])x=(S<3?R(x):S>3?R(I,B,x):R(I,B))||x;return S>3&&x&&Object.defineProperty(I,B,x),x};var qT=(D,I)=>{if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata(D,I)};var mD=W((wD)=>{Object.defineProperty(wD,"__esModule",{value:!0});var x1="Velislav S. Karastoychev",R1="1.0.0",hD=/^rgb\((25[0-5]|2[0-4]\d|1\d{2}|\d{1,2}),\s*(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2}),\s*(25[0-5]|2[0-4]\d|1\d{2}|\d{1,2})\)$/,pD=["black","red","green","yellow","blue","violet","cyan","grey","none"];class qD{text;styles;constructor(D=""){this.text=D,this.styles=""}get reset(){return this.styles="\x1B[0m",this}get bold(){return this.styles+="\x1B[1m",this}get italic(){return this.styles+="\x1B[3m",this}get blink(){return this.styles+="\x1B[5m",this}get machine(){return this.styles+="\x1B[2m",this}get underline(){return this.styles+="\x1B[4m",this}setColor(D="none"){let I=new Error,B;if(I.name="@euriklis/message package color error",I.message=`Incorrect color type or value. The color which may be used are ${pD.join(" ")} or some arbitrary rgb value`,D==="black")B="\x1B[30m";else if(D==="red")B="\x1B[31m";else if(D==="green")B="\x1B[32m";else if(D==="yellow")B="\x1B[33m";else if(D==="blue")B="\x1B[34m";else if(D==="violet")B="\x1B[35m";else if(D==="cyan")B="\x1B[36m";else if(D==="grey")B="\x1B[37m";else if(D==="none")B="\x1B[0m";else if(typeof D==="string")if(hD.test(D)){let[L,S,x]=D.match(/\d{1,3}/g)||["","",""];B=`\x1B[38;2;${L};${S};${x}m`}else throw I;else throw I;return this.styles+=B,this}get setColorCyan(){return this.setColor("cyan")}get setColorViolet(){return this.setColor("violet")}get setColorYellow(){return this.setColor("yellow")}get setColorGreen(){return this.setColor("green")}get setColorBlue(){return this.setColor("blue")}get setColorRed(){return this.setColor("red")}get setColorBlack(){return this.setColor("black")}get setColorGrey(){return this.setColor("grey")}setBgColor(D="\x1B[0m"){let I=new Error;if(I.name="@euriklis/message library background color error message",I.message=`Incorrect color type in the setBgColor method. The parameter has to be equal to some of the values ${pD.join(" ")}`,D==="black")D="\x1B[40m";else if(D==="red")D="\x1B[41m";else if(D==="green")D="\x1B[42m";else if(D==="yellow")D="\x1B[43m";else if(D==="blue")D="\x1B[44m";else if(D==="violet")D="\x1B[45m";else if(D==="cyan")D="\x1B[46m";else if(D==="grey")D="\x1B[47m";else if(typeof D==="string"){if(hD.test(D)){let[B,L,S]=D.match(/\d{1,3}/g)||["","",""];D=`\x1B[48;2;${B};${L};${S}m`}}else throw I;return this.styles+=D,this}get setBgColorGrey(){return this.setBgColor("grey")}get setBgColorCyan(){return this.setBgColor("cyan")}get setBgColorViolet(){return this.setBgColor("violet")}get setBgColorBlue(){return this.setBgColor("blue")}get setBgColorYellow(){return this.setBgColor("yellow")}get setBgColorGreen(){return this.setBgColor("green")}get setBgColorRed(){return this.setBgColor("red")}get setBgColorBlack(){return this.setBgColor("black")}append(D=""){return this.text+=`${this.styles}${D}\x1B[0m`,this}prepend(D=""){return this.text=`${this.styles}${D}${this.text}\x1B[0m`,this}get appendCopyrightSymbol(){return this.text+="©",this}get prependCopyrightSymbol(){return this.text="©"+this.text,this}get prependRegisteredSymbol(){return this.prepend("®")}get appendRegisteredSymbol(){return this.append("®")}get appendLogicalNotSymbol(){return this.append("¬")}get prependLogicalNotSymbol(){return this.prepend("¬")}get appendLogicalForAllSymbol(){return this.append("∀")}get prependLogicalForAllSymbol(){return this.prepend("∀")}get appendLogicalExistsSymbol(){return this.append("∃")}get prependLogicalExistsSymbol(){return this.prepend("∃")}get appendLogicalConjunctionSymbol(){return this.append("⋀")}get prependLogicalConjunctionSymbol(){return this.prepend("⋀")}get appendLogicalDisjunctionSymbol(){return this.append("⋁")}get prependLogicalDisjunctionSymbol(){return this.prepend("⋁")}get appendLogicalElementOfSymbol(){return this.append("∈")}get prependLogicalElementOfSymbol(){return this.prepend("∈")}get appendLogicalFollowsSymbol(){return this.append("⇒")}get prependLogicalFollowsSymbol(){return this.prepend("⇒")}get appendLogicalInverseFollowsSymbol(){return this.append("⇐")}get prependLogicalInverseFollowsSymbol(){return this.prepend("⇐")}get appendLogicalEquivalenceSymbol(){return this.append("⇔")}get prependLogicalEquivalenceSymbol(){return this.prepend("⇔")}get appendLogicalIdentical(){return this.append("≡")}get prependLogicalIdentical(){return this.prepend("≡")}get appendLogicalNotIdentical(){return this.append("≢")}get prependLogicalNotIdentical(){return this.prepend("≢")}get appendMathNaturalNumbersSymbol(){return this.append("ℕ")}get prependMathNaturalNumbersSymbol(){return this.prepend("ℕ")}get appendMathPartialDifferential(){return this.append("∂")}get prependMathPartialDifferential(){return this.prepend("∂")}get appendMathEmptySet(){return this.append("∅")}get prependMathEmptySet(){return this.prepend("∅")}get appendMathDeterminant(){return this.append("∆")}get prependMathDeterminant(){return this.prepend("∆")}get appendMathNabla(){return this.append("∇")}get prependMathNabla(){return this.prepend("∇")}get appendMathProductSymbol(){return this.append("∏")}get prependMathProductSymbol(){return this.prepend("∏")}get appendMathSummationSymbol(){return this.append("∑")}get prependMathSummationSymbol(){return this.prepend("∑")}get appendMathIntersectionSymbol(){return this.append("∩")}get prependMathIntersectionSymbol(){return this.prepend("∩")}get appendMathUnionSymbol(){return this.append("∪")}get prependMathUnionSymbol(){return this.prepend("∪")}get appendMathIntegralSymbol(){return this.append("∫")}get prependMathIntegralSymbol(){return this.prepend("∫")}get appendMathDoubleIntegralSymbol(){return this.append("∬")}get prependMathDoubleIntegralSymbol(){return this.prepend("∬")}get appendMathTripleIntegralSymbol(){return this.append("∭")}get prependMathTripleIntegralSymbol(){return this.prepend("∭")}get appendMathProportionalSymbol(){return this.append("∝")}get prependMathProportionalSymbol(){return this.prepend("∝")}get appendMathInfinitySymbol(){return this.append("∞")}get prependMathInfinitySymbol(){return this.prepend("∞")}get appendMathContourIntegral(){return this.append("∮")}get prependMathContourIntegral(){return this.prepend("∮")}get appendMathVolumeIntegral(){return this.append("∰")}get prependMathVolumeIntegral(){return this.prepend("∰")}get appendMathAlmostEqual(){return this.append("≈")}get prependMathAlmostEqual(){return this.prepend("≈")}get appendMathAlmostEqualOrEqual(){return this.append("≊")}get prependMathAlmostEqualOrEqual(){return this.prepend("≊")}get appendMathEstimates(){return this.append("≙")}get prependMathEstimates(){return this.prepend("≙")}get appendMathEqualByDefinition(){return this.append("≝")}get prependMathEqualByDefinition(){return this.prepend("≝")}get appendMathSqrtSymbol(){return this.append("√")}get prependMathSqrtSymbol(){return this.prepend("√")}get appendMathCubeRootSymbol(){return this.append("∛")}get prependMathCubeRootSymbol(){return this.prepend("∛")}get appendMathForthRootSymbol(){return this.append("∜")}get prependMathForthRootSymbol(){return this.prepend("∜")}get appendMathSubsetOfSymbol(){return this.append("⊂")}get prependMathSubsetOfSymbol(){return this.prepend("⊂")}get appendMathSupersetOfSymbol(){return this.append("⊃")}get prependMathSupersetOfSymbol(){return this.prepend("⊃")}get appendHourglassSymbol(){return this.append("⌛")}get prependHourglassSymbol(){return this.prepend("⌛")}get appendKeyboardSymbol(){return this.append("⌨")}get prependKeyboardSymbol(){return this.prepend("⌨")}get appendQuestionMarkOrnament(){return this.append("❓")}get prependQuestionMarkOrnament(){return this.prepend("❓")}get appendBitcoinSymbol(){return this.append("₿")}get prependBitcoinSymbol(){return this.prepend("₿")}get appendEuroSymbol(){return this.append("€")}get prependEuroSymbol(){return this.prepend("€")}get appendFaceWithTearsOfJoy(){return this.append("\uD83D\uDE02")}get prependFaceWithTearsOfJoy(){return this.prepend("\uD83D\uDE02")}get appendHeartSymbol(){return this.append("❤")}get prependHeartSymbol(){return this.prepend("❤")}get appendCoronaVirusSymbol(){return this.append("\uD83E\uDDA0")}get prependCoronaVirusSymbol(){return this.prepend("\uD83E\uDDA0")}get appendAmbulanceSymbol(){return this.append("\uD83D\uDE91")}get prependAmbulanceSymbol(){return this.prepend("\uD83D\uDE91")}get appendPotableWaterSymbol(){return this.append("\uD83D\uDEB0")}get prependPotableWaterSymbol(){return this.prepend("\uD83D\uDEB0")}get appendFaceWithMedicalMaskSymbol(){return this.append("\uD83D\uDE37")}get prependFaceWithMedicalMaskSymbol(){return this.prepend("\uD83D\uDE37")}get appendRoseSymbol(){return this.append("\uD83C\uDF39")}get prependRoseSymbol(){return this.prepend("\uD83C\uDF39")}get appendNotCheckMark(){return this.append("⍻")}get prependNotCheckMark(){return this.prepend("⍻")}get appendCheckMark(){return this.append("✓")}get prependCheckMark(){return this.prepend("✓")}get appendBallotBoxWithCheckMark(){return this.append("☑")}get prependBallotBoxWithCheckMark(){return this.prepend("☑")}get appendWhiteHeavyCheckMark(){return this.append("✅")}get prependWhiteHeavyCheckMark(){return this.prepend("✅")}get appendHeavyCheckMark(){return this.append("✔")}get prependHeavyCheckMark(){return this.prepend("✔")}get appendWarningSign(){return this.append("⚠")}get prependWarningSign(){return this.prepend("⚠")}appendWhiteSpace(D=1){let I="";if(!Number.isInteger(D))D=1;for(let B=0;B<D;B++)I+=" ";return this.append(I)}prependWhiteSpace(D=1){let I="";if(!Number.isInteger(D))D=1;for(let B=0;B<D;B++)I+=" ";return this.prepend(I)}log(){return console.log(this.text),this}info(){return console.info(this.text),this}warn(){return console.warn(this.text),this}error(){return console.error(this.text),this}static author=x1;static version=R1}wD.default=qD});var bD=W((yD)=>{Object.defineProperty(yD,"__esModule",{value:!0});yD.IncorrectParameterInDescribeTxt=yD.IncorrectIterationsParameterInBenchmarkTxt=yD.IncorrectFunctionArgumentInForAnyTxt=yD.IncorrectFunctionArgumentInForAllTxt=yD.IncorrectArgumentInIsInstanceofTxt=yD.IncorrectDescriptionPropertyTxt=yD.IncorrectArgumentsInIsInRangeTxt=yD.IncorrectArgumentsInIsInClosedRangeTxt=yD.IncorrectArgumentsInHasLengthInRangeTxt=yD.IncorrectArgumentsInHasLengthInClosedRangeTxt=yD.IncorrectArgumentInInterfaceTxt=yD.IncorrectArgumentInStringContainsExpressionTxt=yD.IncorrectArgumentInIsLesserThanTxt=yD.IncorrectArgumentInIsBiggerThanTxt=yD.IncorrectArgumentInHasLengthLesserThanTxt=yD.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt=yD.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt=yD.IncorrectArgumentInHasLengthBiggerThanTxt=yD.IncorrectArgumentInHasLengthTxt=yD.IncorrectArgumentInIsNotEqual=yD.IncorrectArgumentInIsEqualOrLesserThanTxt=yD.IncorrectArgumentInIsEqualOrBiggerThanTxt=yD.IncorrectArgumentInIsEqual=yD.IncorrectArgumentInIsEmptyTxt=yD.IncorrectArgumentInBindMethodTxt=yD.IncorrectArgumentInIsArrayAndForAnyTxt=yD.InappropriateValueInIsSameTxt=yD.IllegalUsageOfArgumentInIsArrayAndForEveryTxt=yD.IllegalTypeInForAnyTxt=yD.IllegalParametersInIsArrayOfNumbersInRangeTxt=yD.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt=yD.IllegalParametersInIsArrayOfIntegersInRangeTxt=yD.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt=yD.ErrorMessage=void 0;yD.ErrorMessage="Euriklis validator error message:";yD.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt="Illegal parameters in the isArrayOfIntegersInClosedRange method. Note that the parameters of this method have to be numbers with the first parameter to be less than the second.";yD.IllegalParametersInIsArrayOfIntegersInRangeTxt="Illegal parameters in the isArrayOfIntegersInRange method. The parameters have to be integers and the first to be smaller than the second.";yD.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt="Illegal parameters in isArrayOfNumbersInClosedRange(a, b) method. Note that the parameters of the method have to be numbers and in addition the first has to be smaller than the second.";yD.IllegalParametersInIsArrayOfNumbersInRangeTxt="Illegal parameters in the isArrayOfNumbersInRange() method. Note that these parameters have to be numbers and in addition the first parameter has to be less than the second.";var M1=(D)=>`Illegal type of the this.value in the "forAny" method of euriklis validator module. The value has to be array or object type. The value of the current validator is ${typeof D} type.`;yD.IllegalTypeInForAnyTxt=M1;yD.IllegalUsageOfArgumentInIsArrayAndForEveryTxt="Illegal usage of the argument function of the method. The function has to return validator type.";yD.InappropriateValueInIsSameTxt="Inappropriate value property of the validator instance in the isSame method. You may use this method only if the value is a primitive type, function (async, generator, arrow or conventional function), array, typed array, object or array buffer type.";yD.IncorrectArgumentInIsArrayAndForAnyTxt="Error in the isArrayAndForAny(). Illegal argument in the parameter of the method.";yD.IncorrectArgumentInBindMethodTxt="The argument has to be validator type.";yD.IncorrectArgumentInIsEmptyTxt="This method can be used only for string, array and object types.";yD.IncorrectArgumentInIsEqual="The argument of the method isEqual is not a valid real number";yD.IncorrectArgumentInIsEqualOrBiggerThanTxt="Incorrect argument in the isGreaterOrEqualsTo() method. Note that this argument has to be an arbitrary number.";yD.IncorrectArgumentInIsEqualOrLesserThanTxt="Incorrect argument in isLessOrEqualsTo() method. Note that the parameter has to be an arbitrary number.";yD.IncorrectArgumentInIsNotEqual="The argument of the method has to be a valid real number.";yD.IncorrectArgumentInHasLengthTxt="The argument of the has length method is not integer.";yD.IncorrectArgumentInHasLengthBiggerThanTxt="Incorrect argument parameter in the hasLengthGreaterThan() method. Note that the parameter has to be an Integer.";yD.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt="Incorrect argument in the hasLengthGreaterOrEqualsTo() method of the current validator instance. Note that this parameter has to be an integer.";yD.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt="Incorrect argument in the hasLengthLessThanOrEqualsTo() method. Note that the parameter has to be an integer.";yD.IncorrectArgumentInHasLengthLesserThanTxt="Incorrect argument in the hasLengthLessThan() method. Note that the parameter has to be an integer number.";yD.IncorrectArgumentInIsBiggerThanTxt="Incorrect argument parameter of the isGreaterThan() method. Note that this parameter has to be an arbitrary number.";yD.IncorrectArgumentInIsLesserThanTxt="Incorrect argument parameter of the isLessThan() method. Note that this parameter has to be an arbitrary number.";yD.IncorrectArgumentInStringContainsExpressionTxt='The argument of the "is_this_string_contains_expression_k_times" method has to be string or object type.';yD.IncorrectArgumentInInterfaceTxt="The argument function of the interface method has to return a validator instance.";yD.IncorrectArgumentsInHasLengthInClosedRangeTxt="Incorrect arguments in hasLengthInClosedRange() method. Note that the both parameters have to be integers and the first parameter has to be smaller than the second.";yD.IncorrectArgumentsInHasLengthInRangeTxt="Incorrect arguments in hasLengthInange() method. Note that the both parameters have to be integers with the first element to be smaller than the second.";yD.IncorrectArgumentsInIsInClosedRangeTxt="Incorrect arguments in isInClosedrange() method. Note that both of these arguments have to be numbers with the first argument to be smaller than the second.";yD.IncorrectArgumentsInIsInRangeTxt="Incorrect arguments in the isInRange() method of the validator instance. Note that these parameters have to be arbitrary numbers and in addition the first has to be smaller than the second.";yD.IncorrectDescriptionPropertyTxt="Incorrectly defined description property. The description has to be a string or a number.";yD.IncorrectArgumentInIsInstanceofTxt="Incorrect parameter instance. The instance has to be InstanceType.";yD.IncorrectFunctionArgumentInForAllTxt="The callback argument of the forEvery method of the euriklis validator module has to be function type.";yD.IncorrectFunctionArgumentInForAnyTxt="The callback argument of the forAny method of the euriklis validator module has to be a function with argument a validator instance.";yD.IncorrectIterationsParameterInBenchmarkTxt='Incorrect parameter iterations in the benchmark function. The "iterations" has to be a positive integer.';yD.IncorrectParameterInDescribeTxt="Incorrect parameter in the describe method. The message has to be a string type."});var kD=W((A)=>{var v1=A&&A.__createBinding||(Object.create?function(D,I,B,L){if(L===void 0)L=B;var S=Object.getOwnPropertyDescriptor(I,B);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[B]}};Object.defineProperty(D,L,S)}:function(D,I,B,L){if(L===void 0)L=B;D[L]=I[B]}),o1=A&&A.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),d1=A&&A.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var B in D)if(B!=="default"&&Object.prototype.hasOwnProperty.call(D,B))v1(I,D,B)}return o1(I,D),I};Object.defineProperty(A,"__esModule",{value:!0});A.IncorrectParameterInDescribe=A.IncorrectIterationsParameterInBenchmark=A.IncorrectFunctionArgumentInForAny=A.IncorrectFunctionArgumentInForAll=A.IncorrectDescriptionProperty=A.IncorrectArgumentInIsInstanceof=A.IncorrectArgumentsInIsInRange=A.IncorrectArgumentsInIsInClosedRange=A.IncorrectArgumentsInHasLengthInRange=A.IncorrectArgumentsInHasLengthInClosedRange=A.IncorrectArgumentInStringContainsExpression=A.IncorrectArgumentInIsNotEqual=A.IncorrectArgumentInIsLesserThan=A.IncorrectArgumentInIsEqualOrLesserThan=A.IncorrectArgumentInIsEqual=A.IncorrectArgumentInIsEqualOrBiggerThan=A.IncorrectArgumentInIsEmpty=A.IncorrectArgumentInIsBiggerThan=A.IncorrectArgumentInIsArrayAndForAny=A.IncorrectArgumentInInterface=A.IncorrectArgumentInHasLengthLesserThan=A.IncorrectArgumentInHasLengthEqualsOrLesserThan=A.IncorrectArgumentInHasLengthEqualsOrBiggerThan=A.IncorrectArgumentInBindMethod=A.IncorrectArgumentInHasLength=A.IncorrectArgumentInHasLengthBiggerThan=A.InappropriateValueInIsSame=A.IllegalUsageOfArgumentInIsArrayAndForEvery=A.IllegalTypeInForAny=A.IllegalParametersInIsArrayOfNumbersInRange=A.IllegalParametersInIsArrayOfNumbersInClosedRange=A.IllegalParametersInIsArrayOfIntegersInRange=A.IllegalParametersInIsArrayOfIntegersInClosedRange=void 0;var Y=d1(bD()),Z=(D)=>{let I=new Error;throw I.name=Y.ErrorMessage,I.message=D,I},i1=()=>Z(Y.IllegalParametersInIsArrayOfIntegersInClosedRangeTxt);A.IllegalParametersInIsArrayOfIntegersInClosedRange=i1;var r1=()=>Z(Y.IllegalParametersInIsArrayOfIntegersInRangeTxt);A.IllegalParametersInIsArrayOfIntegersInRange=r1;var u1=()=>Z(Y.IllegalParametersInIsArrayOfNumbersInClosedRangeTxt);A.IllegalParametersInIsArrayOfNumbersInClosedRange=u1;var s1=()=>Z(Y.IllegalParametersInIsArrayOfNumbersInRangeTxt);A.IllegalParametersInIsArrayOfNumbersInRange=s1;var n1=()=>Z(Y.IllegalTypeInForAnyTxt(""));A.IllegalTypeInForAny=n1;var l1=()=>Z(Y.IllegalUsageOfArgumentInIsArrayAndForEveryTxt);A.IllegalUsageOfArgumentInIsArrayAndForEvery=l1;var a1=()=>Z(Y.InappropriateValueInIsSameTxt);A.InappropriateValueInIsSame=a1;var e1=()=>Z(Y.IncorrectArgumentInHasLengthBiggerThanTxt);A.IncorrectArgumentInHasLengthBiggerThan=e1;var TS=()=>Z(Y.IncorrectArgumentInHasLengthTxt);A.IncorrectArgumentInHasLength=TS;var DS=()=>Z(Y.IncorrectArgumentInBindMethodTxt);A.IncorrectArgumentInBindMethod=DS;var IS=()=>Z(Y.IncorrectArgumentInHasLengthEqualsOrBiggerThanTxt);A.IncorrectArgumentInHasLengthEqualsOrBiggerThan=IS;var LS=()=>Z(Y.IncorrectArgumentInHasLengthEqualsOrLesserThanTxt);A.IncorrectArgumentInHasLengthEqualsOrLesserThan=LS;var BS=()=>Z(Y.IncorrectArgumentInHasLengthLesserThanTxt);A.IncorrectArgumentInHasLengthLesserThan=BS;var SS=()=>Z(Y.IncorrectArgumentInInterfaceTxt);A.IncorrectArgumentInInterface=SS;var xS=()=>Z(Y.IncorrectArgumentInIsArrayAndForAnyTxt);A.IncorrectArgumentInIsArrayAndForAny=xS;var RS=()=>Z(Y.IncorrectArgumentInIsBiggerThanTxt);A.IncorrectArgumentInIsBiggerThan=RS;var HS=()=>Z(Y.IncorrectArgumentInIsEmptyTxt);A.IncorrectArgumentInIsEmpty=HS;var MS=()=>Z(Y.IncorrectArgumentInIsEqualOrBiggerThanTxt);A.IncorrectArgumentInIsEqualOrBiggerThan=MS;var VS=()=>Z(Y.IncorrectArgumentInIsEqual);A.IncorrectArgumentInIsEqual=VS;var $S=()=>Z(Y.IncorrectArgumentInIsEqualOrLesserThanTxt);A.IncorrectArgumentInIsEqualOrLesserThan=$S;var AS=()=>Z(Y.IncorrectArgumentInIsLesserThanTxt);A.IncorrectArgumentInIsLesserThan=AS;var PS=()=>Z(Y.IncorrectArgumentInIsNotEqual);A.IncorrectArgumentInIsNotEqual=PS;var WS=()=>Z(Y.IncorrectArgumentInStringContainsExpressionTxt);A.IncorrectArgumentInStringContainsExpression=WS;var FS=()=>Z(Y.IncorrectArgumentsInHasLengthInClosedRangeTxt);A.IncorrectArgumentsInHasLengthInClosedRange=FS;var XS=()=>Z(Y.IncorrectArgumentsInHasLengthInRangeTxt);A.IncorrectArgumentsInHasLengthInRange=XS;var JS=()=>Z(Y.IncorrectArgumentsInIsInClosedRangeTxt);A.IncorrectArgumentsInIsInClosedRange=JS;var KS=()=>Z(Y.IncorrectArgumentsInIsInRangeTxt);A.IncorrectArgumentsInIsInRange=KS;var YS=()=>Z(Y.IncorrectArgumentInIsInstanceofTxt);A.IncorrectArgumentInIsInstanceof=YS;var ZS=()=>Z(Y.IncorrectDescriptionPropertyTxt);A.IncorrectDescriptionProperty=ZS;var ES=()=>Z(Y.IncorrectFunctionArgumentInForAllTxt);A.IncorrectFunctionArgumentInForAll=ES;var GS=()=>Z(Y.IncorrectFunctionArgumentInForAnyTxt);A.IncorrectFunctionArgumentInForAny=GS;var OS=()=>Z(Y.IncorrectIterationsParameterInBenchmarkTxt);A.IncorrectIterationsParameterInBenchmark=OS;var NS=()=>Z(Y.IncorrectParameterInDescribeTxt);A.IncorrectParameterInDescribe=NS});var tD=W((jD)=>{Object.defineProperty(jD,"__esModule",{value:!0});jD.WarningMessage=jD.IncorrectTypeInExecuteWith=jD.IncorrectValueInIsPositive=jD.IncorrectValueInIsNegative=jD.IncorrectStateInOnMethod=jD.IncorrectFunctionInOnMethod=void 0;jD.IncorrectFunctionInOnMethod="Incorrect function argument in on method of the validator method.";jD.IncorrectStateInOnMethod="Incorrect state argument in the on method in the validator method.";jD.IncorrectValueInIsNegative="Incorrect value property of the current validator instance. Note that if the value is not number, the is_negative() / isNegative method is not usable. The method returns false, but the result may be incorrect.";jD.IncorrectValueInIsPositive="Incorrect value property of the current validator instance. Note that if the value is not number, the is_positive() / isPositive method is not usable. The method returns false, but the result may be incorrect.";jD.IncorrectTypeInExecuteWith="Incorrect type of the parameter of the execute_with method. The parameter has to be function or async function.";jD.WarningMessage="Euriklis validator library warning message:"});var vD=W((f)=>{var _S=f&&f.__createBinding||(Object.create?function(D,I,B,L){if(L===void 0)L=B;var S=Object.getOwnPropertyDescriptor(I,B);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[B]}};Object.defineProperty(D,L,S)}:function(D,I,B,L){if(L===void 0)L=B;D[L]=I[B]}),hS=f&&f.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),pS=f&&f.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var B in D)if(B!=="default"&&Object.prototype.hasOwnProperty.call(D,B))_S(I,D,B)}return hS(I,D),I};Object.defineProperty(f,"__esModule",{value:!0});f.IncorrectTypeInExecuteWith=f.IncorrectValueInIsPositive=f.IncorrectValueInIsNegative=f.IncorrectStateInOnMethod=f.IncorrectFunctionInOnMethod=void 0;var d=pS(tD()),LT=(D)=>{console.warn(d.WarningMessage),console.warn(D)},qS=()=>LT(d.IncorrectFunctionInOnMethod);f.IncorrectFunctionInOnMethod=qS;var wS=()=>LT(d.IncorrectStateInOnMethod);f.IncorrectStateInOnMethod=wS;var mS=()=>LT(d.IncorrectValueInIsNegative);f.IncorrectValueInIsNegative=mS;var yS=()=>LT(d.IncorrectValueInIsPositive);f.IncorrectValueInIsPositive=yS;var gS=()=>LT(d.IncorrectTypeInExecuteWith);f.IncorrectTypeInExecuteWith=gS});var iD=W((oD)=>{Object.defineProperty(oD,"__esModule",{value:!0});oD.Benchmark=void 0;var bS=(D,I,B)=>{let L,S,x,R=[];for(L=B;L--;)S=performance.now(),I(D),x=performance.now(),R.push(x-S);let H=R.reduce((F,X)=>F+X,0)/B,M=R.reduce((F,X)=>{let G=X-H;return F+G*G},0),$=Math.sqrt(M/(B-1));return{mean:H,std:$,iterations:B}};oD.Benchmark=bS});var h=W((rD)=>{Object.defineProperty(rD,"__esModule",{value:!0});rD.CheckType=void 0;var kS=(D,I)=>Object.prototype.toString.call(D)===`[object ${I}]`;rD.CheckType=kS});var sD=W((z)=>{var jS=z&&z.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(z,"__esModule",{value:!0});z.ForEveryMapEdition=z.ForEverySetEdition=z.ForEveryObjectEdition=z.ForEveryArrayEdition=void 0;var kT=jS(BT()),cS=(D,I)=>{let B=D.length,L=new kT.default(void 0),S,x;for(S=0;S<B>>2;S++)if(x=S<<2,(L.reset(),L.value=D[x],!I(L,x).answer)||(L.reset(),L.value=D[x+1],!I(L,x+1).answer)||(L.reset(),L.value=D[x+2],!I(L,x+2).answer)||(L.reset(),L.value=D[x+3],!I(L,x+3).answer))return!1;x=S<<2;for(;x<B;x++)if(L.reset(),L.value=D[x],!I(L,x).answer)return!1;return!0};z.ForEveryArrayEdition=cS;var tS=(D,I)=>{let B=Object.keys(D),L=B.length,S=new kT.default(void 0),x,R;for(x=0;x<L>>2;x++)if(R=x<<2,(S.reset(),S.value=D[B[R]],!I(S,B[R]).answer)||(S.reset(),S.value=D[B[R+1]],!I(S,B[R+1]).answer)||(S.reset(),S.value=D[B[R+2]],!I(S,B[R+2]).answer)||(S.reset(),S.value=D[B[R+3]],!I(S,B[R+3]).answer))return!1;R=x<<2;for(;R<L;R++)if(S.reset(),S.value=D[B[R]],!I(S,B[R]).answer)return!1;return!0};z.ForEveryObjectEdition=tS;var vS=(D,I)=>{let B=new kT.default(void 0),L=0;for(let S of D)if(B.reset(),B.value=S,!I(B,L++).answer)return!1;return!0};z.ForEverySetEdition=vS;var oS=(D,I)=>{let B=new kT.default(void 0);for(let[L,S]of D)if(B.reset(),B.value=S,!I(B,L).answer)return!1;return!0};z.ForEveryMapEdition=oS});var nD=W((C)=>{var dS=C&&C.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(C,"__esModule",{value:!0});C.ForAnyMapEdition=C.ForAnySetEdition=C.ForAnyObjectEdition=C.ForAnyArrayEdition=void 0;var jT=dS(BT()),iS=(D,I)=>{let B=D.length,L=new jT.default(void 0),S,x;for(S=0;S<B>>2;S++)if(x=S<<2,(L.reset(),L.value=D[x],I(L,x).answer)||(L.reset(),L.value=D[x+1],I(L,x+1).answer)||(L.reset(),L.value=D[x+2],I(L,x+2).answer)||(L.reset(),L.value=D[x+3],I(L,x+3).answer))return!0;for(x=S<<2;x<B;x++)if(L.reset(),L.value=D[x],I(L,x).answer)return!0;return!1};C.ForAnyArrayEdition=iS;var rS=(D,I)=>{let B,L,S=Object.keys(D),x=S.length,R=new jT.default(void 0);for(B=0;B<x>>2;B++)if(L=B<<2,(R.reset(),R.value=D[S[L]],I(R,S[L]).answer)||(R.reset(),R.value=D[S[L+1]],I(R,S[L+1]).answer)||(R.reset(),R.value=D[S[L+2]],I(R,S[L+2]).answer)||(R.reset(),R.value=D[S[L+3]],I(R,S[L+3]).answer))return!0;L=B<<2;for(;L<x;L++)if(R.reset(),R.value=D[S[L]],I(R,S[L]).answer)return!0;return!1};C.ForAnyObjectEdition=rS;var uS=(D,I)=>{let B=new jT.default,L=0;for(let S of D)if(B.reset(),B.value=S,I(B,L++).answer)return!0;return!1};C.ForAnySetEdition=uS;var sS=(D,I)=>{let B=new jT.default;for(let[L,S]of D)if(B.reset(),B.value=S,I(B,L).answer)return!0;return!1};C.ForAnyMapEdition=sS});var eD=W((lD)=>{Object.defineProperty(lD,"__esModule",{value:!0});lD.HasNaNInTypedArray=void 0;var nS=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,isNaN(D[L])||isNaN(D[L+1])||isNaN(D[L+2])||isNaN(D[L+3]))return!0;for(L=B<<2;L<I;L++)if(isNaN(D[L]))return!0;return!1};lD.HasNaNInTypedArray=nS});var II=W((TI)=>{Object.defineProperty(TI,"__esModule",{value:!0});TI.IsArrayBuffer=void 0;var lS=(D)=>D instanceof ArrayBuffer;TI.IsArrayBuffer=lS});var i=W((LI)=>{Object.defineProperty(LI,"__esModule",{value:!0});LI.IsTypedArray=void 0;var aS=(D)=>D instanceof Object&&("buffer"in D)&&("byteLength"in D)&&("byteOffset"in D);LI.IsTypedArray=aS});var RI=W((SI)=>{Object.defineProperty(SI,"__esModule",{value:!0});SI.IsArrayOfAbstractArrays=void 0;var ST=h(),xT=i(),eS=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!ST.CheckType(D[L],"Array")&&!xT.IsTypedArray(D[L])||!ST.CheckType(D[L+1],"Array")&&!xT.IsTypedArray(D[L+1])||!ST.CheckType(D[L+2],"Array")&&!xT.IsTypedArray(D[L+2])||!ST.CheckType(D[L+3],"Array")&&!xT.IsTypedArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!ST.CheckType(D[L],"Array")&&!xT.IsTypedArray(D[L]))return!1;return!0};SI.IsArrayOfAbstractArrays=eS});var VI=W((HI)=>{Object.defineProperty(HI,"__esModule",{value:!0});HI.IsArrayOfAbstractArraysWithEqualSize=void 0;var r=h(),u=i(),Tx=(D)=>{let I=D.length,B,L,S;if(r.CheckType(D[0],"Array")||u.IsTypedArray(D[0]))S=D[0].length;else S=!1;for(B=0;B<I>>2;B++)if(L=B<<2,!r.CheckType(D[L],"Array")&&!u.IsTypedArray(D[L])||D[L].length!==S||(!r.CheckType(D[L+1],"Array")&&!u.IsTypedArray(D[L+1])||D[L+1].length!==S)||(!r.CheckType(D[L+2],"Array")&&!u.IsTypedArray(D[L+2])||D[L+2].length!==S)||(!r.CheckType(D[L+3],"Array")&&!u.IsTypedArray(D[L+3])||D[L+3].length!==S))return!1;for(L=B<<2;L<I;L++)if(!r.CheckType(D[L],"Array")&&!u.IsTypedArray(D[L])||D[L].length!==S)return!1;return!0};HI.IsArrayOfAbstractArraysWithEqualSize=Tx});var PI=W(($I)=>{Object.defineProperty($I,"__esModule",{value:!0});$I.IsArrayOfArrays=void 0;var RT=h(),Dx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!RT.CheckType(D[L],"Array")||!RT.CheckType(D[L+1],"Array")||!RT.CheckType(D[L+2],"Array")||!RT.CheckType(D[L+3],"Array"))return!1;for(L=B<<2;L<I;L++)if(!RT.CheckType(D[L],"Array"))return!1;return!0};$I.IsArrayOfArrays=Dx});var XI=W((WI)=>{Object.defineProperty(WI,"__esModule",{value:!0});WI.IsArrayOfArraysWithEqualSize=void 0;var s=h(),Ix=(D)=>{let I=D.length,B,L,S;if(s.CheckType(D[0],"Array"))S=D[0].length;else return!1;for(B=0;B<I>>2;B++)if(L=B<<2,!s.CheckType(D[L],"Array")||D[L].length!==S||!s.CheckType(D[L+1],"Array")||D[L+1].length!==S||!s.CheckType(D[L+2],"Array")||D[L+2].length!==S||!s.CheckType(D[L+3],"Array")||D[L+3].length!==S)return!1;for(L=B<<2;L<I;L++)if(!s.CheckType(D[L],"Array")||D[L].length!==S)return!1;return!0};WI.IsArrayOfArraysWithEqualSize=Ix});var YI=W((JI)=>{Object.defineProperty(JI,"__esModule",{value:!0});JI.IsArrayOfFunctions=void 0;var Lx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="function"||typeof D[L+1]!=="function"||typeof D[L+2]!=="function"||typeof D[L+3]!=="function")return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="function")return!1;return!0};JI.IsArrayOfFunctions=Lx});var cT=W((ZI)=>{Object.defineProperty(ZI,"__esModule",{value:!0});ZI.IsIntegerArray=void 0;var Bx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||!Number.isInteger(D[L])||(typeof D[L+1]!=="number"||!Number.isInteger(D[L+1]))||(typeof D[L+2]!=="number"||!Number.isInteger(D[L+2]))||(typeof D[L+3]!=="number"||!Number.isInteger(D[L+3])))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||!Number.isInteger(D[L]))return!1;return!0};ZI.IsIntegerArray=Bx});var NI=W((GI)=>{Object.defineProperty(GI,"__esModule",{value:!0});GI.IsArrayOfIntegerArrays=void 0;var HT=cT(),Sx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!HT.IsIntegerArray(D[L])||!HT.IsIntegerArray(D[L+1])||!HT.IsIntegerArray(D[L+2])||!HT.IsIntegerArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!HT.IsIntegerArray(D[L]))return!1;return!0};GI.IsArrayOfIntegerArrays=Sx});var UI=W((QI)=>{Object.defineProperty(QI,"__esModule",{value:!0});QI.IsArrayOfIntegerArraysWithEqualSize=void 0;var xx=h(),MT=cT(),Rx=(D)=>{let I=D.length,B,L,S;if(!xx.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(B=0;B<I>>2;B++)if(L=B<<2,!MT.IsIntegerArray(D[L])||D[L].length!==S||!MT.IsIntegerArray(D[L+1])||D[L+1].length!==S||!MT.IsIntegerArray(D[L+2])||D[L+2].length!==S||!MT.IsIntegerArray(D[L+3])||D[L+3].length!==S)return!1;for(L=B<<2;L<I;L++)if(!MT.IsIntegerArray(D[L])||D[L].length!==S)return!1;return!0};QI.IsArrayOfIntegerArraysWithEqualSize=Rx});var _I=W((zI)=>{Object.defineProperty(zI,"__esModule",{value:!0});zI.IsArrayOfIntegersInClosedRange=void 0;var Hx=(D,I,B)=>{let L=D.length,S,x;for(S=0;S<L>>2;S++)if(x=S<<2,!Number.isInteger(D[x])||D[x]<I||D[x]>B||(!Number.isInteger(D[x+1])||D[x+1]<I||D[x+1]>B)||(!Number.isInteger(D[x+2])||D[x+2]<I||D[x+2]>B)||(!Number.isInteger(D[x+3])||D[x+3]<I||D[x+3]>B))return!1;for(x=S<<2;x<L;x++)if(!Number.isInteger(D[x])||D[x]<I||D[x]>B)return!1;return!0};zI.IsArrayOfIntegersInClosedRange=Hx});var qI=W((hI)=>{Object.defineProperty(hI,"__esModule",{value:!0});hI.IsArrayOfIntegersInRange=void 0;var Mx=(D,I,B)=>{let L=D.length,S,x;for(S=0;S<L>>2;S++)if(x=S<<2,!Number.isInteger(D[x])||!(D[x]>I&&D[x]<B)||(!Number.isInteger(D[x+1])||!(D[x+1]>I&&D[x+1]<B))||(!Number.isInteger(D[x+2])||!(D[x+2]>I&&D[x+2]<B))||(!Number.isInteger(D[x+3])||!(D[x+3]>I&&D[x+3]<B)))return!1;for(x=S<<2;x<L;x++)if(!Number.isInteger(D[x])||!(D[x]>I&&D[x]<B))return!1;return!0};hI.IsArrayOfIntegersInRange=Mx});var yI=W((wI)=>{Object.defineProperty(wI,"__esModule",{value:!0});wI.IsArrayOfNegativeIntegers=void 0;var Vx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||!Number.isInteger(D[L])||!(D[L]<0)||(typeof D[L+1]!=="number"||!Number.isInteger(D[L+1])||!(D[L+1]<0))||(typeof D[L+2]!=="number"||!Number.isInteger(D[L+2])||!(D[L+2]<0))||(typeof D[L+3]!=="number"||!Number.isInteger(D[L+3])||!(D[L+3]<0)))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||!Number.isInteger(D[L])||!(D[L]<0))return!1;return!0};wI.IsArrayOfNegativeIntegers=Vx});var kI=W((gI)=>{Object.defineProperty(gI,"__esModule",{value:!0});gI.IsArrayOfNegativeNumbers=void 0;var $x=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||!(D[L]<0)||(typeof D[L+1]!=="number"||!(D[L+1]<0))||(typeof D[L+2]!=="number"||!(D[L+2]<0))||(typeof D[L+3]!=="number"||!(D[L+3]<0)))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||!(D[L]<0))return!1;return!0};gI.IsArrayOfNegativeNumbers=$x});var tT=W((jI)=>{Object.defineProperty(jI,"__esModule",{value:!0});jI.IsNumberArray=void 0;var Ax=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||isNaN(D[L])||(typeof D[L+1]!=="number"||isNaN(D[L+1]))||(typeof D[L+2]!=="number"||isNaN(D[L+2]))||(typeof D[L+3]!=="number"||isNaN(D[L+3])))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||isNaN(D[L]))return!1;return!0};jI.IsNumberArray=Ax});var oI=W((tI)=>{Object.defineProperty(tI,"__esModule",{value:!0});tI.IsArrayOfNumberArrays=void 0;var VT=tT(),Px=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!VT.IsNumberArray(D[L])||!VT.IsNumberArray(D[L+1])||!VT.IsNumberArray(D[L+2])||!VT.IsNumberArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!VT.IsNumberArray(D[L]))return!1;return!0};tI.IsArrayOfNumberArrays=Px});var rI=W((dI)=>{Object.defineProperty(dI,"__esModule",{value:!0});dI.IsArrayOfNumberArraysWithEqualSize=void 0;var Wx=h(),$T=tT(),Fx=(D)=>{let I=D.length,B,L,S;if(!Wx.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(B=0;B<I>>2;B++)if(L=B<<2,!$T.IsNumberArray(D[L])||D[L].length!==S||!$T.IsNumberArray(D[L+1])||D[L+1].length!==S||!$T.IsNumberArray(D[L+2])||D[L+2].length!==S||!$T.IsNumberArray(D[L+3])||D[L+3].length!==S)return!1;for(L=B<<2;L<I;L++)if(!$T.IsNumberArray(D[L])||D[L].length!==S)return!1;return!0};dI.IsArrayOfNumberArraysWithEqualSize=Fx});var nI=W((uI)=>{Object.defineProperty(uI,"__esModule",{value:!0});uI.IsArrayOfNumbersInClosedRange=void 0;var Xx=(D,I,B)=>{let L=D.length,S,x;for(S=0;S<L>>2;S++)if(x=S<<2,typeof D[x]!=="number"||isNaN(D[x])||D[x]<I||D[x]>B||(typeof D[x+1]!=="number"||isNaN(D[x+1])||D[x+1]<I||D[x+1]>B)||(typeof D[x+2]!=="number"||isNaN(D[x+2])||D[x+2]<I||D[x+2]>B)||(typeof D[x+3]!=="number"||isNaN(D[x+3])||D[x+3]<I||D[x+3]>B))return!1;for(x=S<<2;x<L;x++)if(typeof D[x]!=="number"||isNaN(D[x])||D[x]<I||D[x]>B)return!1;return!0};uI.IsArrayOfNumbersInClosedRange=Xx});var eI=W((lI)=>{Object.defineProperty(lI,"__esModule",{value:!0});lI.IsArrayOfNumbersInRange=void 0;var Jx=(D,I,B)=>{let L=D.length,S,x;for(S=0;S<L>>2;S++)if(x=S<<2,typeof D[x]!=="number"||isNaN(D[x])||D[x]<=I||D[x]>=B||(typeof D[x+1]!=="number"||isNaN(D[x+1])||D[x+1]<=I||D[x+1]>=B)||(typeof D[x+2]!=="number"||isNaN(D[x+2])||D[x+2]<=I||D[x+2]>=B)||(typeof D[x+3]!=="number"||isNaN(D[x+3])||D[x+3]<=I||D[x+3]>=B))return!1;for(x=S<<2;x<L;x++)if(typeof D[x]!=="number"||isNaN(D[x])||D[x]<=I||D[x]>=B)return!1;return!0};lI.IsArrayOfNumbersInRange=Jx});var vT=W((TL)=>{Object.defineProperty(TL,"__esModule",{value:!0});TL.IsObjectArray=void 0;var Kx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,D[L]instanceof Array||typeof D[L]!=="object"||D[L]===null||(D[L+1]instanceof Array||typeof D[L+1]!=="object"||D[L+1]===null)||(D[L+2]instanceof Array||typeof D[L+2]!=="object"||D[L+2]===null)||(D[L+3]instanceof Array||typeof D[L+3]!=="object"||D[L+3]===null))return!1;for(L=B<<2;L<I;L++)if(D[L]instanceof Array||typeof D[L]!=="object"||D[L]===null)return!1;return!0};TL.IsObjectArray=Kx});var BL=W((IL)=>{Object.defineProperty(IL,"__esModule",{value:!0});IL.IsArrayOfObjectArrays=void 0;var AT=vT(),Yx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!Array.isArray(D[L])||!AT.IsObjectArray(D[L])||!Array.isArray(D[L+1])||!AT.IsObjectArray(D[L+1])||!Array.isArray(D[L+2])||!AT.IsObjectArray(D[L+2])||!Array.isArray(D[L+3])||!AT.IsObjectArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!Array.isArray(D[L])||!AT.IsObjectArray(D[L]))return!1;return!0};IL.IsArrayOfObjectArrays=Yx});var RL=W((SL)=>{Object.defineProperty(SL,"__esModule",{value:!0});SL.IsArrayOfObjectArraysWithEqualSize=void 0;var PT=vT(),Zx=(D)=>{let I=D.length,B,L,S;if(!Array.isArray(D[0]))return!1;else S=D[0].length;for(B=0;B<I>>2;B++)if(L=B<<2,!Array.isArray(D[L])||!PT.IsObjectArray(D[L])||D[L].length!==S||!Array.isArray(D[L+1])||!PT.IsObjectArray(D[L+1])||D[L+1].length!==S||!Array.isArray(D[L+2])||!PT.IsObjectArray(D[L+2])||D[L+2].length!==S||!Array.isArray(D[L+3])||!PT.IsObjectArray(D[L+3])||D[L+3].length!==S)return!1;for(L=B<<2;L<I;L++)if(!Array.isArray(D[L])||!PT.IsObjectArray(D[L])||D[L].length!==S)return!1;return!0};SL.IsArrayOfObjectArraysWithEqualSize=Zx});var VL=W((HL)=>{Object.defineProperty(HL,"__esModule",{value:!0});HL.IsArrayOfPositiveIntegers=void 0;var Ex=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||!Number.isInteger(D[L])||D[L]<0||(typeof D[L+1]!=="number"||!Number.isInteger(D[L+1])||D[L+1]<0)||(typeof D[L+2]!=="number"||!Number.isInteger(D[L+2])||D[L+2]<0)||(typeof D[L+3]!=="number"||!Number.isInteger(D[L+3])||D[L+3]<0))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||!Number.isInteger(D[L])||D[L]<0)return!1;return!0};HL.IsArrayOfPositiveIntegers=Ex});var PL=W(($L)=>{Object.defineProperty($L,"__esModule",{value:!0});$L.IsArrayOfPositiveNumbers=void 0;var Gx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="number"||D[L]<0||(typeof D[L+1]!=="number"||D[L+1]<0)||(typeof D[L+2]!=="number"||D[L+2]<0)||(typeof D[L+3]!=="number"||D[L+3]<0))return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="number"||D[L]<0)return!1;return!0};$L.IsArrayOfPositiveNumbers=Gx});var oT=W((WL)=>{Object.defineProperty(WL,"__esModule",{value:!0});WL.IsStringArray=void 0;var Ox=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="string"||typeof D[L+1]!=="string"||typeof D[L+2]!=="string"||typeof D[L+3]!=="string")return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="string")return!1;return!0};WL.IsStringArray=Ox});var KL=W((XL)=>{Object.defineProperty(XL,"__esModule",{value:!0});XL.IsArrayOfStringArrays=void 0;var WT=h(),FT=oT(),Nx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!WT.CheckType(D[L],"Array")||!FT.IsStringArray(D[L])||!WT.CheckType(D[L+1],"Array")||!FT.IsStringArray(D[L+1])||!WT.CheckType(D[L+2],"Array")||!FT.IsStringArray(D[L+2])||!WT.CheckType(D[L+3],"Array")||!FT.IsStringArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!WT.CheckType(D[L],"Array")||!FT.IsStringArray(D[L]))return!1;return!0};XL.IsArrayOfStringArrays=Nx});var EL=W((YL)=>{Object.defineProperty(YL,"__esModule",{value:!0});YL.IsArrayOfStringArraysWithEqualSize=void 0;var n=h(),XT=oT(),Qx=(D)=>{let I=D.length,B,L,S;if(!n.CheckType(D[0],"Array"))return!1;else S=D[0].length;for(B=0;B<I>>2;B++)if(L=B<<2,!n.CheckType(D[L],"Array")||!XT.IsStringArray(D[L])||D[L].length!==S||!n.CheckType(D[L],"Array")||!XT.IsStringArray(D[L+1])||D[L+1].length!==S||!n.CheckType(D[L+2],"Array")||!XT.IsStringArray(D[L+2])||D[L+2].length!==S||!n.CheckType(D[L+3],"Array")||!XT.IsStringArray(D[L+3])||D[L+3].length!==S)return!1;for(L=B<<2;L<I;L++)if(!n.CheckType(D[L],"Array")||!XT.IsStringArray(D[L])||D[L].length!==S)return!1;return!0};YL.IsArrayOfStringArraysWithEqualSize=Qx});var NL=W((GL)=>{Object.defineProperty(GL,"__esModule",{value:!0});GL.IsArrayOfTypedArrays=void 0;var JT=i(),fx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,!JT.IsTypedArray(D[L])||!JT.IsTypedArray(D[L+1])||!JT.IsTypedArray(D[L+2])||!JT.IsTypedArray(D[L+3]))return!1;for(L=B<<2;L<I;L++)if(!JT.IsTypedArray(D[L]))return!1;return!0};GL.IsArrayOfTypedArrays=fx});var UL=W((QL)=>{Object.defineProperty(QL,"__esModule",{value:!0});QL.IsArrayOfTypedArraysWithEqualSize=void 0;var l=i(),Ux=(D)=>{let I=D.length,B,L,S;if(l.IsTypedArray(D[0]))S=D[0].length;else S=!1;for(B=0;B<I>>2;B++)if(L=B<<2,!l.IsTypedArray(D[L])||D[L].length!==S||(!l.IsTypedArray(D[L+1])||D[L+1].length!==S)||(!l.IsTypedArray(D[L+2])||D[L+2].length!==S)||(!l.IsTypedArray(D[L+3])||D[L+3].length!==S))return!1;for(L=B<<2;L<I;L++)if(!l.IsTypedArray(D[L])||D[L].length!==S)return!1;return!0};QL.IsArrayOfTypedArraysWithEqualSize=Ux});var _L=W((zL)=>{Object.defineProperty(zL,"__esModule",{value:!0});zL.IsBooleanArray=void 0;var zx=(D)=>{let I=D.length,B,L;for(B=0;B<I>>2;B++)if(L=B<<2,typeof D[L]!=="boolean"||typeof D[L+1]!=="boolean"||typeof D[L+2]!=="boolean"||typeof D[L+3]!=="boolean")return!1;for(L=B<<2;L<I;L++)if(typeof D[L]!=="boolean")return!1;return!0};zL.IsBooleanArray=zx});var qL=W((hL)=>{Object.defineProperty(hL,"__esModule",{value:!0});hL.IsFloat64Array=void 0;var Cx=(D)=>D instanceof Float64Array;hL.IsFloat64Array=Cx});var yL=W((wL)=>{Object.defineProperty(wL,"__esModule",{value:!0});wL.IsGeneratorFunction=void 0;var _x=(D)=>D instanceof Function?D.constructor.name==="GeneratorFunction":D instanceof Object?Object.prototype.toString.call(D)==="[object Generator]":!1;wL.IsGeneratorFunction=_x});var kL=W((gL)=>{Object.defineProperty(gL,"__esModule",{value:!0});gL.IsInstanceof=void 0;var hx=(D,I)=>{return D instanceof I};gL.IsInstanceof=hx});var tL=W((jL)=>{Object.defineProperty(jL,"__esModule",{value:!0});jL.IsInstanceType=void 0;var px=(D)=>{return typeof D==="function"&&!!D.prototype};jL.IsInstanceType=px});var dL=W((vL)=>{Object.defineProperty(vL,"__esModule",{value:!0});vL.IsInt16Array=void 0;var qx=(D)=>D instanceof Int16Array;vL.IsInt16Array=qx});var uL=W((iL)=>{Object.defineProperty(iL,"__esModule",{value:!0});iL.IsInt32Array=void 0;var wx=(D)=>D instanceof Int32Array;iL.IsInt32Array=wx});var lL=W((sL)=>{Object.defineProperty(sL,"__esModule",{value:!0});sL.IsInt8Array=void 0;var mx=(D)=>{return D instanceof Int8Array};sL.IsInt8Array=mx});var TB=W((aL)=>{Object.defineProperty(aL,"__esModule",{value:!0});aL.IsInteger=void 0;var yx=(D)=>typeof D==="number"&&Number.isInteger(D);aL.IsInteger=yx});var LB=W((DB)=>{Object.defineProperty(DB,"__esModule",{value:!0});DB.IsIntegerLike=void 0;var gx=(D)=>typeof D==="string"?Number.isInteger(+D):Number.isInteger(D);DB.IsIntegerLike=gx});var xB=W((BB)=>{Object.defineProperty(BB,"__esModule",{value:!0});BB.IsNegativeIntegerLike=void 0;var bx=(D)=>!isNaN(D)?Number.isInteger(+D)&&+D<0:!1;BB.IsNegativeIntegerLike=bx});var MB=W((RB)=>{Object.defineProperty(RB,"__esModule",{value:!0});RB.IsNegativeNumberLike=void 0;var kx=(D)=>!isNaN(D)?+D<0:!1;RB.IsNegativeNumberLike=kx});var AB=W((VB)=>{Object.defineProperty(VB,"__esModule",{value:!0});VB.IsNumberLike=void 0;var jx=(D)=>typeof D==="number"||typeof D==="string"&&!Number.isNaN(Number(D));VB.IsNumberLike=jx});var FB=W((PB)=>{Object.defineProperty(PB,"__esModule",{value:!0});PB.IsObject=void 0;var cx=(D)=>{return Object.prototype.toString.call(D)==="[object Object]"};PB.IsObject=cx});var KB=W((XB)=>{Object.defineProperty(XB,"__esModule",{value:!0});XB.IsPositiveIntegerLike=void 0;var tx=(D)=>!isNaN(D)?Number.isInteger(+D)&&+D>=0:!1;XB.IsPositiveIntegerLike=tx});var EB=W((YB)=>{Object.defineProperty(YB,"__esModule",{value:!0});YB.IsPositiveNumberLike=void 0;var vx=(D)=>!isNaN(D)?+D>=0:!1;YB.IsPositiveNumberLike=vx});var NB=W((GB)=>{Object.defineProperty(GB,"__esModule",{value:!0});GB.IsPromiseFunction=void 0;var ox=(D)=>D instanceof Promise;GB.IsPromiseFunction=ox});var UB=W((QB)=>{Object.defineProperty(QB,"__esModule",{value:!0});QB.IsUint16Array=void 0;var dx=(D)=>D instanceof Uint16Array;QB.IsUint16Array=dx});var _B=W((zB)=>{Object.defineProperty(zB,"__esModule",{value:!0});zB.IsUint32Array=void 0;var ix=(D)=>D instanceof Uint32Array;zB.IsUint32Array=ix});var qB=W((hB)=>{Object.defineProperty(hB,"__esModule",{value:!0});hB.IsUint8Array=void 0;var rx=(D)=>D instanceof Uint8Array;hB.IsUint8Array=rx});var yB=W((wB)=>{Object.defineProperty(wB,"__esModule",{value:!0});wB.IsUint8ClampedArray=void 0;var ux=(D)=>D instanceof Uint8ClampedArray;wB.IsUint8ClampedArray=ux});var kB=W((gB)=>{Object.defineProperty(gB,"__esModule",{value:!0});gB.IsValidEmail=void 0;var sx=(D)=>{return/^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/.test(D)};gB.IsValidEmail=sx});var tB=W((jB)=>{Object.defineProperty(jB,"__esModule",{value:!0});jB.TestCondition=void 0;var nx=(D,I="",B,L="eq")=>{let S=D;if(I)S=D[I];switch(L){case"eq":return S===B;case"neq":return S!==B;case"geq":return S>=B;case"leq":return S<=B;case"lt":return S<B;case"gt":return S>B}};jB.TestCondition=nx});var vB=W((P)=>{Object.defineProperty(P,"__esModule",{value:!0});P.IsNumberLike=P.IsNumberArray=P.IsNegativeNumberLike=P.IsNegativeIntegerLike=P.IsIntegerLike=P.IsIntegerArray=P.IsInteger=P.IsInt8Array=P.IsInt32Array=P.IsInt16Array=P.IsInstanceType=P.IsInstanceof=P.IsGeneratorFunction=P.IsFloat64Array=P.IsBooleanArray=P.IsArrayOfTypedArraysWithEqualSize=P.IsArrayOfTypedArrays=P.IsArrayOfStringArraysWithEqualSize=P.IsArrayOfStringArrays=P.IsArrayOfPositiveNumbers=P.IsArrayOfPositiveIntegers=P.IsArrayOfObjectArraysWithEqualSize=P.IsArrayOfObjectArrays=P.IsArrayOfNumbersInRange=P.IsArrayOfNumbersInClosedRange=P.IsArrayOfNumberArraysWithEqualSize=P.IsArrayOfNumberArrays=P.IsArrayOfNegativeNumbers=P.IsArrayOfNegativeIntegers=P.IsArrayOfIntegersInRange=P.IsArrayOfIntegersInClosedRange=P.IsArrayOfIntegerArraysWithEqualSize=P.IsArrayOfIntegerArrays=P.IsArrayOfFunctions=P.IsArrayOfArraysWithEqualSize=P.IsArrayOfArrays=P.IsArrayOfAbstractArraysWithEqualSize=P.IsArrayOfAbstractArrays=P.IsArrayBuffer=P.HasNaNInTypedArray=P.ForAnySetEdition=P.ForAnyObjectEdition=P.ForAnyMapEdition=P.ForAnyArrayEdition=P.ForEverySetEdition=P.ForEveryObjectEdition=P.ForEveryMapEdition=P.ForEveryArrayEdition=P.CheckType=P.Benchmark=void 0;P.TestCondition=P.IsValidEmail=P.IsUint8ClampedArray=P.IsUint8Array=P.IsUint32Array=P.IsUint16Array=P.IsTypedArray=P.IsStringArray=P.IsPromiseFunction=P.IsPositiveNumberLike=P.IsPositiveIntegerLike=P.IsObjectArray=P.IsObject=void 0;var lx=iD();Object.defineProperty(P,"Benchmark",{enumerable:!0,get:function(){return lx.Benchmark}});var ax=h();Object.defineProperty(P,"CheckType",{enumerable:!0,get:function(){return ax.CheckType}});var dT=sD();Object.defineProperty(P,"ForEveryArrayEdition",{enumerable:!0,get:function(){return dT.ForEveryArrayEdition}});Object.defineProperty(P,"ForEveryMapEdition",{enumerable:!0,get:function(){return dT.ForEveryMapEdition}});Object.defineProperty(P,"ForEveryObjectEdition",{enumerable:!0,get:function(){return dT.ForEveryObjectEdition}});Object.defineProperty(P,"ForEverySetEdition",{enumerable:!0,get:function(){return dT.ForEverySetEdition}});var iT=nD();Object.defineProperty(P,"ForAnyArrayEdition",{enumerable:!0,get:function(){return iT.ForAnyArrayEdition}});Object.defineProperty(P,"ForAnyMapEdition",{enumerable:!0,get:function(){return iT.ForAnyMapEdition}});Object.defineProperty(P,"ForAnyObjectEdition",{enumerable:!0,get:function(){return iT.ForAnyObjectEdition}});Object.defineProperty(P,"ForAnySetEdition",{enumerable:!0,get:function(){return iT.ForAnySetEdition}});var ex=eD();Object.defineProperty(P,"HasNaNInTypedArray",{enumerable:!0,get:function(){return ex.HasNaNInTypedArray}});var T0=II();Object.defineProperty(P,"IsArrayBuffer",{enumerable:!0,get:function(){return T0.IsArrayBuffer}});var D0=RI();Object.defineProperty(P,"IsArrayOfAbstractArrays",{enumerable:!0,get:function(){return D0.IsArrayOfAbstractArrays}});var I0=VI();Object.defineProperty(P,"IsArrayOfAbstractArraysWithEqualSize",{enumerable:!0,get:function(){return I0.IsArrayOfAbstractArraysWithEqualSize}});var L0=PI();Object.defineProperty(P,"IsArrayOfArrays",{enumerable:!0,get:function(){return L0.IsArrayOfArrays}});var B0=XI();Object.defineProperty(P,"IsArrayOfArraysWithEqualSize",{enumerable:!0,get:function(){return B0.IsArrayOfArraysWithEqualSize}});var S0=YI();Object.defineProperty(P,"IsArrayOfFunctions",{enumerable:!0,get:function(){return S0.IsArrayOfFunctions}});var x0=NI();Object.defineProperty(P,"IsArrayOfIntegerArrays",{enumerable:!0,get:function(){return x0.IsArrayOfIntegerArrays}});var R0=UI();Object.defineProperty(P,"IsArrayOfIntegerArraysWithEqualSize",{enumerable:!0,get:function(){return R0.IsArrayOfIntegerArraysWithEqualSize}});var H0=_I();Object.defineProperty(P,"IsArrayOfIntegersInClosedRange",{enumerable:!0,get:function(){return H0.IsArrayOfIntegersInClosedRange}});var M0=qI();Object.defineProperty(P,"IsArrayOfIntegersInRange",{enumerable:!0,get:function(){return M0.IsArrayOfIntegersInRange}});var V0=yI();Object.defineProperty(P,"IsArrayOfNegativeIntegers",{enumerable:!0,get:function(){return V0.IsArrayOfNegativeIntegers}});var $0=kI();Object.defineProperty(P,"IsArrayOfNegativeNumbers",{enumerable:!0,get:function(){return $0.IsArrayOfNegativeNumbers}});var A0=oI();Object.defineProperty(P,"IsArrayOfNumberArrays",{enumerable:!0,get:function(){return A0.IsArrayOfNumberArrays}});var P0=rI();Object.defineProperty(P,"IsArrayOfNumberArraysWithEqualSize",{enumerable:!0,get:function(){return P0.IsArrayOfNumberArraysWithEqualSize}});var W0=nI();Object.defineProperty(P,"IsArrayOfNumbersInClosedRange",{enumerable:!0,get:function(){return W0.IsArrayOfNumbersInClosedRange}});var F0=eI();Object.defineProperty(P,"IsArrayOfNumbersInRange",{enumerable:!0,get:function(){return F0.IsArrayOfNumbersInRange}});var X0=BL();Object.defineProperty(P,"IsArrayOfObjectArrays",{enumerable:!0,get:function(){return X0.IsArrayOfObjectArrays}});var J0=RL();Object.defineProperty(P,"IsArrayOfObjectArraysWithEqualSize",{enumerable:!0,get:function(){return J0.IsArrayOfObjectArraysWithEqualSize}});var K0=VL();Object.defineProperty(P,"IsArrayOfPositiveIntegers",{enumerable:!0,get:function(){return K0.IsArrayOfPositiveIntegers}});var Y0=PL();Object.defineProperty(P,"IsArrayOfPositiveNumbers",{enumerable:!0,get:function(){return Y0.IsArrayOfPositiveNumbers}});var Z0=KL();Object.defineProperty(P,"IsArrayOfStringArrays",{enumerable:!0,get:function(){return Z0.IsArrayOfStringArrays}});var E0=EL();Object.defineProperty(P,"IsArrayOfStringArraysWithEqualSize",{enumerable:!0,get:function(){return E0.IsArrayOfStringArraysWithEqualSize}});var G0=NL();Object.defineProperty(P,"IsArrayOfTypedArrays",{enumerable:!0,get:function(){return G0.IsArrayOfTypedArrays}});var O0=UL();Object.defineProperty(P,"IsArrayOfTypedArraysWithEqualSize",{enumerable:!0,get:function(){return O0.IsArrayOfTypedArraysWithEqualSize}});var N0=_L();Object.defineProperty(P,"IsBooleanArray",{enumerable:!0,get:function(){return N0.IsBooleanArray}});var Q0=qL();Object.defineProperty(P,"IsFloat64Array",{enumerable:!0,get:function(){return Q0.IsFloat64Array}});var f0=yL();Object.defineProperty(P,"IsGeneratorFunction",{enumerable:!0,get:function(){return f0.IsGeneratorFunction}});var U0=kL();Object.defineProperty(P,"IsInstanceof",{enumerable:!0,get:function(){return U0.IsInstanceof}});var z0=tL();Object.defineProperty(P,"IsInstanceType",{enumerable:!0,get:function(){return z0.IsInstanceType}});var C0=dL();Object.defineProperty(P,"IsInt16Array",{enumerable:!0,get:function(){return C0.IsInt16Array}});var _0=uL();Object.defineProperty(P,"IsInt32Array",{enumerable:!0,get:function(){return _0.IsInt32Array}});var h0=lL();Object.defineProperty(P,"IsInt8Array",{enumerable:!0,get:function(){return h0.IsInt8Array}});var p0=TB();Object.defineProperty(P,"IsInteger",{enumerable:!0,get:function(){return p0.IsInteger}});var q0=cT();Object.defineProperty(P,"IsIntegerArray",{enumerable:!0,get:function(){return q0.IsIntegerArray}});var w0=LB();Object.defineProperty(P,"IsIntegerLike",{enumerable:!0,get:function(){return w0.IsIntegerLike}});var m0=xB();Object.defineProperty(P,"IsNegativeIntegerLike",{enumerable:!0,get:function(){return m0.IsNegativeIntegerLike}});var y0=MB();Object.defineProperty(P,"IsNegativeNumberLike",{enumerable:!0,get:function(){return y0.IsNegativeNumberLike}});var g0=tT();Object.defineProperty(P,"IsNumberArray",{enumerable:!0,get:function(){return g0.IsNumberArray}});var b0=AB();Object.defineProperty(P,"IsNumberLike",{enumerable:!0,get:function(){return b0.IsNumberLike}});var k0=FB();Object.defineProperty(P,"IsObject",{enumerable:!0,get:function(){return k0.IsObject}});var j0=vT();Object.defineProperty(P,"IsObjectArray",{enumerable:!0,get:function(){return j0.IsObjectArray}});var c0=KB();Object.defineProperty(P,"IsPositiveIntegerLike",{enumerable:!0,get:function(){return c0.IsPositiveIntegerLike}});var t0=EB();Object.defineProperty(P,"IsPositiveNumberLike",{enumerable:!0,get:function(){return t0.IsPositiveNumberLike}});var v0=NB();Object.defineProperty(P,"IsPromiseFunction",{enumerable:!0,get:function(){return v0.IsPromiseFunction}});var o0=oT();Object.defineProperty(P,"IsStringArray",{enumerable:!0,get:function(){return o0.IsStringArray}});var d0=i();Object.defineProperty(P,"IsTypedArray",{enumerable:!0,get:function(){return d0.IsTypedArray}});var i0=UB();Object.defineProperty(P,"IsUint16Array",{enumerable:!0,get:function(){return i0.IsUint16Array}});var r0=_B();Object.defineProperty(P,"IsUint32Array",{enumerable:!0,get:function(){return r0.IsUint32Array}});var u0=qB();Object.defineProperty(P,"IsUint8Array",{enumerable:!0,get:function(){return u0.IsUint8Array}});var s0=yB();Object.defineProperty(P,"IsUint8ClampedArray",{enumerable:!0,get:function(){return s0.IsUint8ClampedArray}});var n0=kB();Object.defineProperty(P,"IsValidEmail",{enumerable:!0,get:function(){return n0.IsValidEmail}});var l0=tB();Object.defineProperty(P,"TestCondition",{enumerable:!0,get:function(){return l0.TestCondition}})});var BT=W((_)=>{var TR=_&&_.__createBinding||(Object.create?function(D,I,B,L){if(L===void 0)L=B;var S=Object.getOwnPropertyDescriptor(I,B);if(!S||("get"in S?!I.__esModule:S.writable||S.configurable))S={enumerable:!0,get:function(){return I[B]}};Object.defineProperty(D,L,S)}:function(D,I,B,L){if(L===void 0)L=B;D[L]=I[B]}),DR=_&&_.__setModuleDefault||(Object.create?function(D,I){Object.defineProperty(D,"default",{enumerable:!0,value:I})}:function(D,I){D.default=I}),VD=_&&_.__importStar||function(D){if(D&&D.__esModule)return D;var I={};if(D!=null){for(var B in D)if(B!=="default"&&Object.prototype.hasOwnProperty.call(D,B))TR(I,D,B)}return DR(I,D),I},IR=_&&_.__importDefault||function(D){return D&&D.__esModule?D:{default:D}};Object.defineProperty(_,"__esModule",{value:!0});var MD=IR(mD()),K=VD(kD()),KT=VD(vD()),V=VD(vB());class J{#B=void 0;#S=null;#I=null;#T=null;#L=null;#R=!1;#x="";constructor(D=void 0){this.value=D,this.#x=""}get value(){return this.#B}set value(D){try{this.#B=D}catch(I){this.value=I}}get description(){return this.#x}set description(D){if(new J(D).isString.or.isNumber.answer)this.#x=D;else K.IncorrectDescriptionProperty()}describe(D){if(new J(D).isString.and.not.isEmpty.answer)this.#x=D;else K.IncorrectParameterInDescribe();return this}reset(){this.#S=null,this.#I=null,this.#T=null}get answer(){return this.reset(),this.#L}get show_warnings(){return this.#R}set show_warnings(D){new J(D).isBoolean.on(!0,()=>this.#R=D)}#D(){if(this.#S)this.#T=!this.#T;if(this.#I==="or")this.#L=this.#L||this.#T;if(this.#I==="and")this.#L=this.#L&&this.#T;if(this.#I===null)this.#L=this.#T;return this.reset(),this}get not(){return this.#S=!0,this}get and(){return this.#I="and",this}get or(){return this.#I="or",this}copy(){return new J(this.value)}absoluteCopy(){let D=new J(this.value);return D.#L=this.#L,D.#S=this.#S,D.#I=this.#I,D.#T=this.#T,D}get isBoolean(){return this.#T=V.CheckType(this.value,"Boolean"),this.#D()}get isUndefined(){return this.#T=V.CheckType(this.value,"Undefined"),this.#D()}get isNull(){return this.#T=V.CheckType(this.value,"Null"),this.#D()}get isSymbol(){return this.#T=V.CheckType(this.value,"Symbol"),this.#D()}get isBigInt(){return this.#T=V.CheckType(this.value,"BigInt"),this.#D()}get isString(){return this.#T=V.CheckType(this.value,"String"),this.#D()}get isNumber(){return this.#T=V.CheckType(this.value,"Number"),this.#D()}get isInteger(){return this.#T=V.IsInteger(this.value),this.#D()}get isFloat(){return this.#T=this.copy().isNumber.and.not.isInteger.answer,this.#D()}isGreaterThan(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsBiggerThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"gt");else this.#T=!1;return this.#D()}isLessThan(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsLesserThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"lt");else this.#T=!1;return this.#D()}isGreaterThanOrEqual(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsEqualOrBiggerThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"geq");else this.#T=!1;return this.#D()}isLessThanOrEqual(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsEqualOrLesserThan();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"leq");else this.#T=!1;return this.#D()}isEqual(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsEqual();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"eq");else this.#T=!1;return this.#D()}isNotEqual(D){if(new J(D).not.isNumber.answer)K.IncorrectArgumentInIsNotEqual();if(this.copy().isNumber.answer)this.#T=V.TestCondition(this.value,void 0,D,"neq");else this.#T=!1;return this.#D()}isInRange(D,I){if(new J([D,I]).not.isNumberArray.answer)K.IncorrectArgumentsInIsInRange();if(D>=I)K.IncorrectArgumentsInIsInRange();return this.#T=this.copy().isNumber.answer?V.TestCondition(this.value,void 0,D,"gt")&&V.TestCondition(this.value,void 0,I,"lt"):!1,this.#D()}isInClosedRange(D,I){if(new J([D,I]).not.isNumberArray.answer)K.IncorrectArgumentsInIsInClosedRange();if(D>=I)K.IncorrectArgumentsInIsInClosedRange();return this.#T=this.copy().isNumber.answer?V.TestCondition(this.value,void 0,D,"geq")&&V.TestCondition(this.value,void 0,I,"leq"):!1,this.#D()}get isPositive(){if(this.copy().not.isNumber.answer){if(this.show_warnings)KT.IncorrectValueInIsPositive();this.#T=!1}else this.#T=V.TestCondition(this.value,void 0,0,"geq");return this.#D()}get isNegative(){if(this.copy().not.isNumber.answer){if(this.show_warnings)KT.IncorrectValueInIsNegative();this.#T=!1}else this.#T=V.TestCondition(this.value,void 0,0,"lt");return this.#D()}get isPositiveInteger(){if(this.copy().isInteger.answer)this.#T=V.TestCondition(this.value,void 0,0,"geq");else this.#T=!1;return this.#D()}get isNegativeInteger(){if(this.copy().isInteger.answer)this.#T=V.TestCondition(this.value,void 0,0,"lt");else this.#T=!1;return this.#D()}get isConvertibleToNumber(){return this.#T=V.IsNumberLike(this.value),this.#D()}get isConvertibleToInteger(){return this.#T=V.IsIntegerLike(this.value),this.#D()}get isConvertibleToPositiveNumber(){return this.#T=V.IsPositiveNumberLike(this.value),this.#D()}get isConvertibleToNegativeNumber(){return this.#T=V.IsNegativeNumberLike(this.value),this.#D()}get isConvertibleToPositiveInteger(){return this.#T=V.IsPositiveIntegerLike(this.value),this.#D()}get isConvertibleToNegativeInteger(){return this.#T=V.IsNegativeIntegerLike(this.value),this.#D()}get isPrimitiveType(){return this.#T=this.copy().isString.or.isNumber.or.isBigInt.or.isBoolean.or.isUndefined.or.isNull.or.isSymbol.answer,this.#D()}get isArrayBuffer(){return this.#T=V.CheckType(this.value,"ArrayBuffer"),this.#D()}get isInt8Array(){return this.#T=V.CheckType(this.value,"Int8Array"),this.#D()}get isUint8Array(){return this.#T=V.CheckType(this.value,"Uint8Array"),this.#D()}get isUint8ClampedArray(){return this.#T=V.CheckType(this.value,"Uint8ClampedArray"),this.#D()}get isInt16Array(){return this.#T=V.CheckType(this.value,"Int16Array"),this.#D()}get isUint16Array(){return this.#T=V.CheckType(this.value,"Uint16Array"),this.#D()}get isInt32Array(){return this.#T=V.CheckType(this.value,"Int32Array"),this.#D()}get isUint32Array(){return this.#T=V.CheckType(this.value,"Uint32Array"),this.#D()}get isIntegerTypedArray(){return this.#T=this.copy().isInt8Array.or.isUint8Array.or.isUint8ClampedArray.or.isInt16Array.or.isUint16Array.or.isInt32Array.or.isUint32Array.answer,this.#D()}get isFloat32Array(){return this.#T=V.CheckType(this.value,"Float32Array"),this.#D()}get isFloat64Array(){return this.#T=V.CheckType(this.value,"Float64Array"),this.#D()}get isFloatTypedArray(){return this.#T=this.copy().isFloat32Array.or.isFloat64Array.answer,this.#D()}get isTypedArray(){return this.#T=V.IsTypedArray(this.value),this.#D()}get isArray(){return this.#T=V.CheckType(this.value,"Array"),this.#D()}get isBooleanArray(){if(this.copy().isArray.answer)this.#T=V.IsBooleanArray(this.value);else this.#T=!1;return this.#D()}get isNumberArray(){let D=this.copy();if(D.isArray.answer)this.#T=V.IsNumberArray(this.value);else if(D.isTypedArray.answer)this.#T=!V.HasNaNInTypedArray(this.value);else this.#T=!1;return this.#D()}get isIntegerArray(){let D=this.copy();if(D.isArray.or.isFloatTypedArray.answer)this.#T=V.IsIntegerArray(this.value);else if(D.isIntegerTypedArray.answer)this.#T=!V.HasNaNInTypedArray(this.value);else this.#T=!1;return this.#D()}get isArrayOfPositiveNumbers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfPositiveNumbers(this.value);else this.#T=!1;return this.#D()}get isArrayOfNegativeNumbers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNegativeNumbers(this.value);else this.#T=!1;return this.#D()}get isArrayOfPositiveIntegers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfPositiveIntegers(this.value);else this.#T=!1;return this.#D()}get isArrayOfNegativeIntegers(){if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNegativeIntegers(this.value);else this.#T=!1;return this.#D()}isArrayOfNumbersInRange(D,I){if(new J([D,I]).not.isNumberArray.or.bind(new J(D).isGreaterThanOrEqual(I)).answer)K.IllegalParametersInIsArrayOfNumbersInRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNumbersInRange(this.value,D,I);else this.#T=!1;return this.#D()}isArrayOfNumbersInClosedRange(D,I){if(new J([D,I]).not.isNumberArray.or.bind(new J(D).isGreaterThanOrEqual(I)).answer)K.IllegalParametersInIsArrayOfNumbersInClosedRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfNumbersInClosedRange(this.value,D,I);else this.#T=!1;return this.#D()}isArrayOfIntegersInRange(D,I){if(new J([D,I]).not.isIntegerArray.or.bind(new J(D).isGreaterThanOrEqual(I)).answer)K.IllegalParametersInIsArrayOfIntegersInRange();if(this.copy().not.isArray.and.not.isTypedArray.answer)this.#T=!1;else this.#T=V.IsArrayOfIntegersInRange(this.value,D,I);return this.#D()}isArrayOfIntegersInClosedRange(D,I){if(new J([D,I]).not.isNumberArray.or.bind(new J(D).isGreaterThanOrEqual(I)).answer)K.IllegalParametersInIsArrayOfIntegersInClosedRange();if(this.copy().isArray.or.isTypedArray.answer)this.#T=V.IsArrayOfIntegersInClosedRange(this.value,D,I);else this.#T=!0;return this.#D()}get isStringArray(){if(this.copy().isArray.answer)this.#T=V.IsStringArray(this.value);else this.#T=!1;return this.#D()}get isObjectArray(){if(this.copy().isArray.answer)this.#T=V.IsObjectArray(this.value);else this.#T=!1;return this.#D()}get isArrayOfFunctions(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfFunctions(this.value);else this.#T=!1;return this.#D()}get isArrayOfArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfNumberArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfNumberArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfNumberArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfNumberArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfIntegerArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfIntegerArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfIntegerArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfIntegerArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfTypedArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfTypedArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfTypedArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfTypedArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfAbstractArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfAbstractArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfAbstractArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfAbstractArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfStringArrays(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfStringArrays(this.value);else this.#T=!1;return this.#D()}get isArrayOfStringArraysWithEqualSize(){if(this.copy().isArray.answer)this.#T=V.IsArrayOfStringArraysWithEqualSize(this.value);else this.#T=!1;return this.#D()}get isArrayOfObjectArrays(){if(this.copy().not.isArray.answer)this.#T=!1;else this.#T=V.IsArrayOfObjectArrays(this.value);return this.#D()}get isArrayOfObjectArraysWithEqualSize(){if(this.copy().not.isArray.answer)this.#T=!1;else this.#T=V.IsArrayOfObjectArraysWithEqualSize(this.value);return this.#D()}get isObject(){return this.#T=V.CheckType(this.value,"Object"),this.#D()}get isMap(){return this.#T=V.CheckType(this.value,"Map"),this.#D()}get isSet(){return this.#T=V.CheckType(this.value,"Set"),this.#D()}get isFunction(){return this.#T=V.CheckType(this.value,"Function"),this.#D()}get isAsync(){return this.#T=V.CheckType(this.value,"AsyncFunction"),this.#D()}get isGenerator(){return this.#T=V.CheckType(this.value,"GeneratorFunction")||V.CheckType(this.value,"Generator"),this.#D()}get isPromise(){return this.#T=V.CheckType(this.value,"Promise"),this.#D()}get isError(){return this.#T=V.CheckType(this.value,"Error"),this.#D()}get isDate(){return this.#T=V.CheckType(this.value,"Date")?this.value.toString()!=="Invalid Date":!1,this.#D()}get isEmail(){if(this.copy().isString.answer)this.#T=V.IsValidEmail(this.value);else this.#T=!1;return this.#D()}isInstanceof(D){if(V.IsInstanceType(D))this.#T=V.IsInstanceof(this.value,D);else if(typeof D==="string")this.#T=new J((I)=>I.constructor.name===D).executeWith(this.value).value;else K.IncorrectArgumentInIsInstanceof();return this.#D()}hasLength(D){if(Number.isInteger(D))D=Number(D);else K.IncorrectArgumentInHasLength();let I=this.copy();if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D);else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D);else if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D);else if(I.isMap.or.isSet.answer)this.#T=V.TestCondition(this.value,"size",D);else this.#T=!1;return this.#D()}hasLengthGreaterThan(D){if(Number.isInteger(D))D=Number(D);else K.IncorrectArgumentInHasLengthBiggerThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"gt");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"gt");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"gt");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"gt");else this.#T=!1;return this.#D()}hasLengthEqualsOrGreaterThan(D){if(Number.isInteger(D))D=Number(D);else K.IncorrectArgumentInHasLengthEqualsOrBiggerThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"geq");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"geq");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"geq");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"geq");else this.#T=!1;return this.#D()}hasLengthLessThan(D){if(Number.isInteger(D))D=Number(D);else K.IncorrectArgumentInHasLengthLesserThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"lt");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"lt");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"lt");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"lt");else this.#T=!1;return this.#D()}hasLengthEqualsOrLessThan(D){if(Number.isInteger(D))D=Number(D);else K.IncorrectArgumentInHasLengthEqualsOrLesserThan();let I=this.copy();if(I.isArrayBuffer.answer)this.#T=V.TestCondition(this.value,"byteLength",D,"leq");else if(I.isArray.or.isTypedArray.or.isString.answer)this.#T=V.TestCondition(this.value,"length",D,"leq");else if(I.isObject.answer)this.#T=V.TestCondition(Object.keys(I.value),"length",D,"leq");else if(I.isSet.or.isMap.answer)this.#T=V.TestCondition(this.value,"size",D,"leq");else this.#T=!1;return this.#D()}hasLengthInRange(D,I){if(Number.isInteger(D)&&Number.isInteger(I)){if(D=Number(D),I=Number(I),D>=I)K.IncorrectArgumentsInHasLengthInRange()}else K.IncorrectArgumentsInHasLengthInRange();let B=this.copy();if(B.isArray.or.isString.answer)this.#T=this.value.length>D&&this.value.length<I;else if(B.isObject.answer){let L=Object.keys(B.value).length;this.#T=L>D&&L<I}else this.#T=!1;return this.#D()}hasLengthInClosedRange(D,I){if(Number.isInteger(D)&&Number.isInteger(I)){if(D=Number(D),I=Number(I),D>=I)K.IncorrectArgumentsInHasLengthInClosedRange()}else K.IncorrectArgumentsInHasLengthInClosedRange();let B=this.copy();if(B.isArray.or.isString.answer)this.#T=this.value.length>=D&&this.value.length<=I;else if(B.isObject.answer){let L=Object.keys(B.value).length;this.#T=L>=D&&L<=I}else this.#T=!1;return this.#D()}get isEmpty(){let D=this.copy();if(D.isUndefined.or.isNull.answer)this.#T=!0;else if(D.isArray.or.isArrayBuffer.or.isMap.or.isObject.or.isSet.or.isString.or.isTypedArray)this.#T=D.hasLength(0).answer;else K.IncorrectArgumentInIsEmpty();return this.#D()}forEvery(D){let I=this.copy();if(new J(D).not.isFunction.answer)K.IncorrectFunctionArgumentInForAll();if(I.not.isEmpty.answer)if(I.isArray.answer)this.#T=V.ForEveryArrayEdition(I.value,D);else if(I.isObject.answer)this.#T=V.ForEveryObjectEdition(I.value,D);else if(I.isSet.answer)this.#T=V.ForEverySetEdition(I.value,D);else if(I.isMap.answer)this.#T=V.ForEveryMapEdition(this.value,D);else this.#T=!1;else this.#T=!1;return this.#D()}forAny(D){let I=this.copy();if(new J(D).not.isFunction.answer)K.IncorrectFunctionArgumentInForAny();if(I.not.isEmpty.answer)if(I.isArray.or.isTypedArray.answer)this.#T=V.ForAnyArrayEdition(I.value,D);else if(I.isObject.answer)this.#T=V.ForAnyObjectEdition(I.value,D);else if(I.isSet.answer)this.#T=V.ForAnySetEdition(this.value,D);else if(I.isMap.answer)this.#T=V.ForAnyMapEdition(this.value,D);else this.#T=!1;else this.#T=!1;return this.#D()}isArrayAndForEvery(D){if(new J(D).not.isFunction.answer)K.IncorrectFunctionArgumentInForAll();if(this.copy().isArray.answer)this.#T=V.ForEveryArrayEdition(this.value,D);else this.#T=!1;return this.#D()}isArrayAndForAny(D){if(new J(D).not.isFunction.answer)K.IncorrectFunctionArgumentInForAny();if(this.copy().isArray.answer)this.#T=V.ForAnyArrayEdition(this.value,D);else this.#T=!1;return this.#D()}interface(D){let I=new J(D),B=I.isObject&&this.copy().isObject.answer;if(this.#T=!1,B){if(I.forEvery((S)=>S.isFunction).answer)for(let S of Object.keys(D)){if(this.#T=D[S](new J(this.value[S])).answer,new J(this.#T).not.isBoolean.answer)K.IncorrectArgumentInInterface();if(!this.#T)return this.#D()}}return this.#D()}isSame(D){let I=new J(D),B=this.copy();if(B.isPrimitiveType.answer)if(I.isPrimitiveType.answer)this.#T=String(this.value)===String(D);else this.#T=!1;else if(B.isFunction.or.isAsync.or.isGenerator.answer)if(I.isFunction.or.isAsync.or.isGenerator.answer)this.#T=this.value.toString()===D.toString();else this.#T=!1;else if(B.isArray.or.isTypedArray.or.isObject.answer)if(I.isArray.or.isTypedArray.or.isObject.answer)this.#T=B.forEvery((L,S)=>L.isSame(D[S])).answer;else this.#T=!1;else if(B.isArrayBuffer.answer)if(I.isArrayBuffer.answer){let L=new J(new Float64Array(this.value)),S=new Float64Array(I.value);this.#T=L.forEvery((x,R)=>x.isSame(S[R])).answer}else this.#T=!1;else K.InappropriateValueInIsSame();return this.#D()}isSameWithAny(D){let I,B,L=this.copy(),S=new J(D).isArray.or.isTypedArray.answer;if(this.#T=!1,S){let x=D.length;for(I=0;I<x>>2;I++)if(B=I<<2,L.isSame(D[B]).answer||L.isSame(D[B+1]).answer||L.isSame(D[B+2]).answer||L.isSame(D[B+3]).answer)return this.#T=!0,this.#D();B=I<<2;for(;B<x;B++)if(L.isSame(D[B]).answer)return this.#T=!0,this.#D()}return this.#D()}bind(D){if(!(D instanceof J))K.IncorrectArgumentInBindMethod();return this.#T=D.answer,this.#D()}on(D,I){let B=new J(D).not.isBoolean.and.not.isSame("true").and.not.isSame("false").answer,L=new J(I).not.isFunction.answer;if(!B&&!L){if(D===this.answer)I(this)}else if(L){if(this.show_warnings)KT.IncorrectFunctionInOnMethod()}else if(B){if(this.show_warnings)KT.IncorrectStateInOnMethod()}return this}executeWith(...D){if(this.copy().isFunction.answer)try{this.#B=this.copy().value(...D)}catch(I){this.#B=I}else if(this.copy().isAsync.answer){let I=null,B=async()=>{try{I=await this.copy().value(...D)}catch(L){I=L}return I};this.#B=B()}else if(this.show_warnings)KT.IncorrectTypeInExecuteWith();return this}throwsErrorWith(...D){let I=null;try{I=this.copy().executeWith(...D).value}catch(B){I=B}return this.#T=V.CheckType(I,"Error"),this.#D()}benchmark(D,I=100){if(new J(I).not.isInteger.answer)K.IncorrectIterationsParameterInBenchmark();return V.Benchmark(this.value,D,I)}test(D={title:!1,success:"green",error:"red"}){if(D.title)new MD.default().bold.underline.setBgColor("rgb(66, 55, 233)").setColor("rgb(10, 10, 10)").append(this.description).reset.log();else this.on(!0,()=>{new MD.default().bold.italic.setColor(D.success).appendCheckMark.append(" "+this.description).reset.log()}).on(!1,()=>{new MD.default().bold.italic.setColor(D.error).appendWarningSign.append(" "+this.description).reset.log()});return this}}_.default=J});var DT=(D,I,B)=>{if(!I)return null;let L=B(I,D);if(L<0)return DT(D,I.left,B);if(L>0)return DT(D,I.right,B);return I},g=(D,I,B)=>{if(D){let L=B(D,I);if(L<0)return g(D.left,I,B);else if(L>0)return g(D.right,I,B);else return D}else return null};var wT=(D,I,B)=>{if(I.isEmpty)return;let L=I.dequeue();if(!D(L,B))return;if(L.left)I.enqueue(L.left);if(L.right)I.enqueue(L.right);return wT(D,I,B)};var mT=(D,I,B)=>{if(I.isEmpty)return;let L=I.pop();if(L.right)I.push(L.right);if(L.left)I.push(L.left);return B(L,D),mT(D,I,B)};var yT=(D,I,B)=>{if(I.isEmpty)return;let L=I.dequeue();if(L.left)I.enqueue(L.left);if(L.right)I.enqueue(L.right);return B(L,D),yT(D,I,B)};var gT=(D,I)=>D.id<I.id?-1:D.id===I.id?0:1,bT=(D,I)=>D.id>I?-1:D.id===I?0:1;var o=(D,I,B)=>{if(!I?.prev)D.root=B;else if(I===I.prev.left)I.prev.left=B;else I.prev.right=B;if(B)B.prev=I.prev};var c=(D,I)=>{if(!D)return null;if(!D.left)o(I,D,D?.right);else if(!D.right)o(I,D,D?.left||null);else{let B=I.successorNode(D);if(B.prev!==D)o(I,B,B.right),B.right=D?.right||null,B.right.prev=B;if(o(I,D,B),!D.prev)I.rootNode=B;if(D===D.prev?.left)D.prev.left=B;if(D===D.prev?.right)D.prev.right=B;B.left=D.left,B.left.prev=B}return D.prev};var RD=(D,I)=>{let B=D.left,L=B.right;if(D.prev)if(D===D.prev.left)D.prev.left=L;else D.prev.right=L;else I.rootNode=L;if(L.prev=D.prev||null,D.prev=L,B.prev=L,B.right=L.left,L.left)L.left.prev=B;if(D.left=L.right,L.right)L.right.prev=D;L.left=B,L.right=D};var HD=(D,I)=>{let B=D.right,L=B.left;if(D.prev)if(D===D.prev.left)D.prev.left=L;else D.prev.right=L;else I.rootNode=L;if(L.prev=D.prev||null,D.prev=L,B.prev=L,B.left=L.right,L.right)L.right.prev=B;if(D.right=L.left,L.left)L.left.prev=D;L.right=B,L.left=D};var _D=(D,I,B,L=null)=>{if(D){if(L=D,B(I,D)<0)D=D.left;else D=D.right;return _D(D,I,B,L)}else return L},IT=(D,I,B)=>{let{order:L,rootNode:S}=D,x;if(B)I.id=B;if(x=_D(S,I,L),I.prev=x,!x)D.rootNode=I;else{let R=L(I,x);if(R<0)x.left=I;else if(R===0)if(D.unique)return x.data=I.data,null;else x.right=I;else x.right=I}return I};var oB=zD(BT(),1),dB=Math.max,rT=(D)=>(I)=>{let B=new Error;throw B.name=D,B.message=I,B},uT=(D,I)=>new oB.default(D).isSame(I).answer;var iB=(D,I,B=["data"])=>{let L,S;if(!D.isEmpty&&!I.isEmpty){if(L=D.pop(),S=I.pop(),!B.every((R)=>uT(L[R],S[R])))return!1;if(L.left)D.push(L.left);if(L.right)D.push(L.right);if(S.left)I.push(S.left);if(S.right)I.push(S.right);return sT(D,I)}else if(!D.isEmpty||!I.isEmpty)return!1;return!0},sT=(D,I)=>iB(D,I,["data","id"]),$D=(D,I)=>iB(D,I);var YT=(D)=>{if(D?.prev&&D===D?.prev?.right)return YT(D.prev);else if(!D?.prev&&D?.right)return null;return D},ZT=(D)=>{if(D?.prev&&D===D?.prev?.left)return ZT(D?.prev);else if(!D?.prev&&D?.left)return null;return D};var AD=(D,I)=>{let B=D.right;if(D.prev)if(D===D.prev.left)D.prev.left=B;else D.prev.right=B;else I.rootNode=B;if(B.prev=D.prev,D.prev=B,B.left)B.left.prev=D;D.right=B.left,B.left=D};var PD=(D,I)=>{let B=D.left;if(D.prev)if(D===D.prev.left)D.prev.left=B;else D.prev.right=B;else I.rootNode=B;if(B.prev=D.prev,D.prev=B,B.right)B.right.prev=D;D.left=B.right,B.right=D};var U=[];for(let D=0;D<256;++D)U.push((D+256).toString(16).slice(1));function rB(D,I=0){return(U[D[I+0]]+U[D[I+1]]+U[D[I+2]]+U[D[I+3]]+"-"+U[D[I+4]]+U[D[I+5]]+"-"+U[D[I+6]]+U[D[I+7]]+"-"+U[D[I+8]]+U[D[I+9]]+"-"+U[D[I+10]]+U[D[I+11]]+U[D[I+12]]+U[D[I+13]]+U[D[I+14]]+U[D[I+15]]).toLowerCase()}import{randomFillSync as BR}from"crypto";var lT=new Uint8Array(256),nT=lT.length;function WD(){if(nT>lT.length-16)BR(lT),nT=0;return lT.slice(nT,nT+=16)}import{randomUUID as SR}from"crypto";var FD={randomUUID:SR};function xR(D,I,B){if(FD.randomUUID&&!I&&!D)return FD.randomUUID();D=D||{};let L=D.random??D.rng?.()??WD();if(L.length<16)throw new Error("Random bytes length must be >= 16");if(L[6]=L[6]&15|64,L[8]=L[8]&63|128,I){if(B=B||0,B<0||B+16>I.length)throw new RangeError(`UUID byte range ${B}:${B+15} is out of buffer bounds`);for(let S=0;S<16;++S)I[B+S]=L[S];return I}return rB(L)}var t=xR;class w{_id="";_data=null;constructor(D,I){if(this.data=D,D?.id&&!this.id)this.id=D.id;else if(I)this.id=I;else this.id=t()}get id(){return this._id}set id(D){this._id=D}get data(){return this._data}set data(D){if(typeof D!=="undefined")this._data=D}}class b extends w{_prev=null;_right=null;_left=null;constructor(D){super(D)}get prev(){return this._prev}set prev(D){this._prev=D}get right(){return this._right||null}set right(D){this._right=D||null}get left(){return this._left||null}set left(D){this._left=D||null}}class a extends b{bf=0;constructor(D){if(D){super(D);this.balance=0}}get balance(){return this.bf}set balance(D){this.bf=D}}var uB=rT("@euriklis/graphworlds Graph node error"),sB=(D)=>uB(`The edge ${D} already exists.`),XD=()=>uB("The name is required in order to create a node.");class ET{__SOURCE__;__TARGET__;__DATA__;__ID__="";constructor(D,I,B=null){this.__SOURCE__=D;this.__TARGET__=I;this.__DATA__=B;this.id=t()}get id(){return this.__ID__}set id(D){this.__ID__=D}get source(){return this.__SOURCE__}set source(D){this.__SOURCE__=D}get target(){return this.__TARGET__}set target(D){this.__TARGET__=D}get data(){return this.__DATA__}set data(D){this.__DATA__=D}}class GT extends ET{constructor({source:D,target:I,data:B}){super(D,I,B)}}class OT extends ET{__WEIGHT__=1;constructor({source:D,target:I,data:B,weight:L}){super(D,I,B);if(typeof L!=="undefined")this.weight=L}get weight(){return this.__WEIGHT__}set weight(D){this.__WEIGHT__=D}}class NT{__ID__="";__NAME__="";__DATA__=null;__IN__=new Map;__OUT__=new Map;constructor({name:D,data:I}){if(!D)XD();if(this.id=t(),this.name=D,typeof I!=="undefined")this.data=I}get id(){return this.__ID__}set id(D){this.__ID__=D}get name(){return this.__NAME__}set name(D){this.__NAME__=D}get data(){return this.__DATA__}set data(D){this.__DATA__=D}get incoming(){return this.__IN__}get outgoing(){return this.__OUT__}connect({node:D,data:I,params:B}){if(this.outgoing.has(D.name))sB(D.name);let L=this.createEdge(D,I,B);return this.outgoing.set(D.name,L),D.incoming.set(this.name,L),this}findConnections(D){let I=new Map;return this.outgoing.forEach((B,L)=>D(B)?I.set(L,B):null),I}getConnection(D){let I="";if(typeof D==="string")I=D;else I=D.name;return this.outgoing.get(I)}removeConnection({node:D,nodeName:I}){let B;if(!I&&!D)XD();if(D)B=this.outgoing.get(D.name),this.outgoing.delete(D.name),D.incoming.delete(this.name);else{let L=this.outgoing.get(I);if(L)this.outgoing.delete(I),L.target.incoming.delete(this.name)}return B}get inDegree(){return this.incoming.size}get outDegree(){return this.outgoing.size}}class e extends NT{createEdge(D,I){return new GT({source:this,target:D,data:I})}}class QT extends NT{__VALUE__=1;constructor({name:D,data:I,value:B}){super({name:D,data:I});if(typeof B!=="undefined")this.value=B}get value(){return this.__VALUE__}set value(D){this.__VALUE__=D}createEdge(D,I,{weight:B}){return new OT({source:this,target:D,data:I,weight:B})}weightedInDegree(){let D=0;return this.incoming.forEach((I)=>D+=I.weight),D}weightedOutDegree(){let D=0;return this.outgoing.forEach((I)=>D+=I.weight),D}}class TT extends w{constructor(D){super(D)}}class N extends w{_next=null;_prev=null;constructor(D){super(D)}get next(){return this._next}set next(D){this._next=D}get prev(){return this._prev}set prev(D){this._prev=D}}var nB=(D)=>`Stack overflow in method ${D}. The data structure limit size was achieved.`,lB=(D)=>`Stack underflow in method ${D}. The data structure is empty.`;var aB=rT("@euriklis/graphworlds DataStructures library error message");var k=(D)=>()=>aB(lB(D)),p=(D)=>()=>aB(nB(D));class E{_top=null;_size=0;_limit=1/0;constructor(D){if(D)this.push(D)}get size(){return this._size}get limit(){return this._limit}get isEmpty(){return this.size===0}get top(){return this._top?.data}push(D){if(typeof D!=="undefined"){if(this.limit===this.size+1)p("Stack push");let I=new N(D);if(I.prev=this._top,this._top)this._top.next=I;this._top=I,this._size++}return this}pushMany(D){for(let I of D)this.push(I);return this}pop(){let D=null;if(this._size){if(D=this._top.data,this._top=this._top.prev,this._top)this._top.next=null;this._size--}return D}popMany(D){let I,B,L=[];if(D>this.size)D=this.size;for(I=0;I<D-1;I+=2)B=this._top.data,this._top=this._top.prev,this._top.next=null,L[I]=B,B=this._top.data,this._top=this._top.prev,this._top.next=null,L[I+1]=B,this._size-=2;if(I===D-1){if(B=this._top.data,this._top=this._top.prev,this._top)this._top.next=null;L[I]=B,this._size--}return L}get list(){let D=[],I=this.size,B;for(B=I;B-- >1;)D[B--]=this.pop(),D[B]=this.pop();if(B===0)D[0]=this.pop();return D}traverse(D){let I=this._top;while(I)D(I.data,this),I=I.prev;return this}popAndTraverse(D){let I=[];while(this.size){let B=this.pop();D(B,this),I[I.length]=B}return I}loop(D,I=this.size){let B=this._top,L=0;while(B&&L++<I)if(D(B.data,this))B=B.prev;else break;return this}filter(D){let I=new E,B=null,L,S=this._top;while(S){if(D(S.data,this))if(B)L=new N(S.data),L.next=B,B.prev=L,B=L,I._size++;else B=new N(S.data),I._top=B,I._size++;S=S.prev}return I}clear(){return this._top=null,this._size=0,this}copy(){let D=new E,I=null,B,L;L=this._top;while(L){if(I)B=new N(L.data),B.next=I,I.prev=B,I=B;else I=new N(L.data),D._top=I;D._size++,L=L.prev}return D}append(D,I=0){let B,L;for(B=0;B<I>>2;B++)L=B<<2,this.push(D(L,this)),this.push(D(L+1,this)),this.push(D(L+2,this)),this.push(D(L+3,this));for(L=B<<2;L<I;L++)this.push(D(L,this));return this}[Symbol.iterator](){let D=this._top;return{next(){if(D){let I=D.data;return D=D.prev,{value:I,done:!1}}return{value:void 0,done:!0}}}}}class eT{_top=[];constructor(D){if(D)this.push(D)}get size(){return this._top.length}get isEmpty(){return this.size===0}get top(){return this._top[this._top.length-1]}push(D){if(typeof D!=="undefined")this._top[this._top.length]=D;return this}pushMany(D){let I=this._top;for(let B of D)I.push(B);return this}pop(){let D=null;if(this.size)D=this.top,this._top.length--;return D}popMany(D){let I,B=-1,L=[],S=this._top,x=S.length;if(this.size<D)D=this.size;for(I=x;B++,I-- >D+1;)L[B++]=S[I--],L[B]=S[I];if(I===x-D)L[B]=S[I];return this._top.length-=D,L}traverse(D){let I=this.size;while(I){let B=this._top[--I];D(B,this)}return this}popAndTraverse(D){let I=[];while(this.size){let B=this.pop();D(B,this),I[I.length]=B}return I}filter(D){let I=new eT,B=I._top,L=this._top.length,S=this._top,x,R=0;for(x=0;x<L-1;x+=2){if(D(S[x],this))B[R++]=S[x];if(D(S[x+1],this))B[R++]=S[x+1]}if(x===L-1){if(D(S[x],this))B[R]=S[x]}return I}get list(){let D=this._top;return this._top=[],D}loop(D,I){let B=this.size,L=0;while(B&&L++<I)if(!D(this._top[--B],this))break;return this}copy(){let D,I=new eT,B=this._top,L=I._top,S=B.length;for(D=S;D-- >1;)L[D]=B[D--],L[D]=B[D];if(D===0)L[D]=B[D];return I}clear(){return this._top=[],this}append(D,I=0){let B,L=this._top.length,S=this._top;for(B=I;B-- >1;)S[L+B]=D(B--,this),S[L+B]=D(B,this);if(B===0)S[L]=D(B,this);return this}[Symbol.iterator](){let D=this._top.length;return{next:()=>{if(D===0)return{done:!0,value:void 0};return{done:!1,value:this._top[--D]}}}}}var eB=zD(BT(),1);class Q{static random(D,I=0,B=1){return new Q().enqueueMany(Array.from({length:D}).map((L)=>I+Math.random()*(B-I)))}_head=null;_tail=null;_size=1/0;_length=0;constructor(D,I=1/0){if(this.size=I,D)this.enqueue(D)}get size(){return this._size}set size(D){this._size=D}get isEmpty(){return this._head===null&&this._tail===null&&this._length===0}get length(){return this._length}get peek(){return this._head?.data||null}get rear(){return this._tail?.data||null}_enqueue(D){if(this._size<this._length+1)p("Queue enqueue")();if(!this._tail)this._tail=D,this._head=D;else D.prev=this._tail,this._tail.next=D,this._tail=D;this._length++}enqueue(D){if(D){let I=new N(D);this._enqueue(I)}return this}enqueueMany(D){let I=D.length,B,L,S=I-1;for(B=I;B-- >1;)L=new N(D[S-B--]),this._enqueue(L),L=new N(D[S-B]),this._enqueue(L);if(B===0)L=new N(D[S]),this._enqueue(L);return this}dequeue(){if(this.isEmpty)k("Queue dequeue")();let D=this._head?.data||null;if(this._head=this._head?.next||null,this._head)this._head.prev=null;else this._tail=null;return this._length--,D}dequeueMany(D=1){let I=[],B,L;for(B=D;B-- >1;){if(this._head){if(L=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(L.data),this._length--,B--}else k("Queue dequeueMany")();if(this._head){if(L=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(L.data),this._length--}else k("Queue dequeueMany")()}if(B===0)if(this._head){if(L=this._head,this._head=this._head.next,this._head)this._head.prev=null;else this._tail=null;I.push(L.data),this._length--}else k("Queue dequeueMany")();return I}traverse(D,I=!1){let B=I?this._tail:this._head;while(B)D(B,this),B=I?B.prev:B.next;return this}filter(D){let I=new Q,B=this._head;while(B){if(D(B,this))I.enqueue(B.data);B=B.next}return I}contains(D){let I=this._head;while(I)if(new eB.default(I.data).isSame(D).answer)return!0;else I=I.next;return!1}reverse(){let D=this._head,I=null;this._tail=this._head;while(D)I=D.prev,D.prev=D.next,D.next=I,D=D.prev;if(I)this._head=I.prev;return this}clean(){return this._head=null,this._tail=null,this._size=1/0,this._length=0,this}copy(){let D=new Q,I=this._head;while(I){let B=new N(I.data);B.id=I.id,D._enqueue(B),I=I.next}return D.size=this.size,D}merge(D){if(this.isEmpty)this._head=D._head,this._tail=D._tail;else if(D._head){if(this._tail)this._tail.next=D._head,D._head.prev=this._tail;this._tail=D._tail}return this._length+=D._length,this}toArray(){let D=[];return this.traverse((I)=>D.push(I.data)),D}[Symbol.iterator](){let D=this._head;return{next(){if(D){let I=D.data;return D=D.next,{value:I,done:!1}}return{value:void 0,done:!0}}}}}class fT{order=gT;search=bT;_root=null;__unique__=!1;constructor(D){if(D)this.root=D}get root(){return this._root?.data||null}set root(D){if(D)this._root=new b(D)}get rootNode(){return this._root}set rootNode(D){this._root=D}get isEmpty(){return!this._root}get size(){let D=0;return this.BFS((I)=>D++),D}get unique(){return this.__unique__}set unique(D){this.__unique__=D}getNodeById(D){let I=null;return this.loop((B)=>{if(B.id===D)return I=B,!1;return!0}),I}height(D=this._root){if(!D)return 0;return 1+dB(this.height(D.left),this.height(D.right))}clean(){return this._root=null,this.order=gT,this.search=bT,this}copy(){let I=new this.constructor;return I.order=this.order,I.search=this.search,this.BFS((B)=>{I.insert(B?.data,B?.id)}),I}isExactlySame(D){let I=this._root,B=D._root,L=new E(I),S=new E(B);if(!L.isEmpty&&!S.isEmpty)return sT(L,S);return!1}isSame(D){let I=this._root,B=D._root,L=new E(I),S=new E(B);if(!L.isEmpty&&!S.isEmpty)return $D(L,S);return!1}has(D){let I=!1;return this.loop((B)=>(I=B.id!==D,!I)),I}loop(D){let I=new Q(this._root);return wT(D,I,this)}insert(D,I){if(typeof D==="object"){if(D?.id)I=D.id}let B=new b(D);return IT(this,B,I),this}insertMany(D,I=[]){let B=D.length,L;if(I.length){if(I.length!==D.length)throw new Error("The ids is declared but the length is not identical to the data length.")}for(L=0;L<B-1;L++)this.insert(D[L],I[L++]),this.insert(D[L],I[L]);if(L===B-1)this.insert(D[B-1],I[B-1]);return this}delete(D,I=this.search){let B=null;if(typeof D==="string")B=this.getNodeById(D);if(!B)B=g(this._root,D,I);return c(B,this),B?.data||null}deleteNode(D){let I=this.binarySearchNode(D);if(!I)return null;return c(I,this),I.prev=null,I.right=null,I.left=null,I}binarySearch(D,I=this.search){return g(this._root,D,I)?.data||null}binarySearchNode(D){return DT(this,this._root,D)}min(D=this._root){let I=D;if(I?.left)return this.min(I.left);return I?.data||null}minNode(D=this._root){let I=D;if(I?.left)return this.minNode(I.left);return I}max(D=this._root){let I=D;if(I?.right)return this.max(I.right);return I?.data||null}maxNode(D=this._root){let I=D;if(I?.right)return this.maxNode(I.right);return I}predecessor(D=this._root){if(D?.left)return this.max(D.left);else return ZT(D)?.data||null}predecessorNode(D=this._root){if(D?.left)return this.maxNode(D.left);else return ZT(D)}successor(D=this._root){if(D?.right)return this.min(D.right);else return YT(D)?.data||null}successorNode(D=this._root){if(D?.right)return this.minNode(D.right);else return YT(D)}filter(D){let I=new fT;return I.order=this.order,this.BFS((B,L)=>{if(D(B,L))I.insert(B?.data)}),I}BFS(D){let I=new Q(this._root);return yT(this,I,D),this}DFS(D){let I=new E(this._root);return mT(this,I,D),this}singleRightRotation(D){if(!D)return this;return PD(D,this),this}singleLeftRotation(D){if(!D)return this;return AD(D,this),this}doubleLeftRightRotation(D){if(!D)return this;return RD(D,this),this}doubleRightLeftRotation(D){if(!D)return this;return HD(D,this),this}toArray(D="DFS"){let I=[];return this[D]((B)=>I.push(B?.data)),I}[Symbol.iterator](){let D=new Q;return D.enqueue(this._root),{next(){if(!D.isEmpty){let I=D.dequeue(),B=I.data;if(I.left)D.enqueue(I.left);if(I.right)D.enqueue(I.right);return{value:B,done:!1}}return{value:void 0,done:!0}}}}print(D=this._root,I=0,B="Root: ",L=(S)=>S.id||null){if(D===null)return;if(console.log(" ".repeat(I*2)+B+L(D,this)),D.left)this.print(D.left,I+1,"L--> ",L);if(D.right)this.print(D.right,I+1,"R--> ",L)}}var q=(D,I)=>{if(!D)return;D.balance=I.height(D.right)-I.height(D.left),q(D.left,I),q(D.right,I)},TD=(D,I)=>{if(!D)return;return q(D,I),T1(D,I),TD(D.prev,I)},T1=(D,I)=>{if(D.balance===-2){if(D.left?.balance<0)I.singleRightRotation(D),q(D,I);else if(D.left?.balance>0)I.doubleLeftRightRotation(D),q(D,I)}else if(D.balance===2){if(D.right?.balance>0)I.singleLeftRotation(D),q(D,I);if(D.right?.balance<0)I.doubleRightLeftRotation(D),q(D,I)}},DD=(D,I,B=!0)=>{if(D.prev){if(D===D.prev.left)D.prev.balance-=1;else D.prev.balance+=1;if(D=D.prev,!D.balance)return;if(B)T1(D,I);return DD(D,I)}};class j extends fT{constructor(D){super(D)}get root(){return this._root?.data||null}set root(D){if(D)this._root=new a(D)}insert(D,I){if(D?.id)I=D.id;let B=new a(D),L=IT(this,B,I);if(L)DD(L,this);return this}delete(D,I=this.search){let B=g(this._root,D,I);if(!B)return null;let L=c(B,this);return q(L,this),B.data}deleteNode(D){let I=this.binarySearchNode(D);if(!I)return null;let B=c(I,this);return TD(B,this),I.prev=null,I.left=null,I.right=null,I.balance=0,I}copy(){let I=new this.constructor;return I.order=this.order,I.search=this.search,I.unique=this.unique,this.BFS((B)=>{I.insert(B.data,B.id)}),I}print(D=this._root,I=0,B="Root: ",L=(S)=>S.data){if(D===null)return;if(console.log(" ".repeat(I*2)+B+L(D,this)+` [BF = ${D.balance}]`),D.left)this.print(D.left,I+1,"L--> ",L);if(D.right)this.print(D.right,I+1,"R--> ",L)}}var JD=(D)=>{if(D==="Map")return new Map;if(D==="AVL"){let I=new j;return I.unique=!0,I}return null};var UT=(D,I)=>{if(I instanceof Map)I.set(D.id,D);if(I instanceof j)I.insert(D,D.id)},zT=(D,I)=>{if(I)I.delete(D)};var ID=(D,I,B,L)=>{if(!I)return;return D(I.data,I.id,B),I=L?I.prev:I.next,ID(D,I,B,L)},LD=(D,I,B,L)=>{if(!I)return;if(!D(I.data,I.id,B))return;return I=L?I.prev:I.next,LD(D,I,B,L)};var KD=(D,I)=>{if(I instanceof Map)return I.get(D)||null;else if(I instanceof j)return I.binarySearch(D);return null},BD=(D,I)=>{if(!I)return null;if(I.id===D)return I;return I=I.next,BD(D,I)};var YD=(D,I,B,L,S,x)=>{let R,H,M;for(R=I;R-- >1;){if(S<<=0,H=S/127773>>0,S=16807*(S-H*127773)-H*2836>>0,S<0)S+=2147483647;if(M=B+(L-B)*S*0.0000000004656612875,x)D.addLast(x(M,`${I-R-1}`,D));else D.addLast(B+(L-B)*S*0.0000000004656612875,`${I-R-1}`);if(R--,S<<=0,H=S/127773>>0,S=16807*(S-H*127773)-H*2836>>0,S<0)S+=2147483647;if(M=B+(L-B)*S*0.0000000004656612875,x)D.addLast(x(M,`${I-R-1}`,D));else D.addLast(B+(L-B)*S*0.0000000004656612875,`${I-R-1}`)}if(R===0){if(S<<=0,H=S/127773>>0,S=16807*(S-H*127773)-H*2836>>0,S<0)S+=2147483647;if(M=B+(L-B)*S*0.0000000004656612875,x)D.addLast(x(M,`${I-1}`,D));else D.addLast(B+(L-B)*S*0.0000000004656612875,`${I-1}`)}};var SD=(D,I,B,L,S)=>{if(!D)return;let{data:x,id:R}=D;if(I(x,R,B))L.addLast(x,R);return D=S?D.prev:D.next,SD(D,I,B,L,S)};var ZD=(D,I,B=["data"])=>{if(D&&I){if(B.every((L)=>uT(D[L],I[L])))return D=D.next,I=I.next,ZD(D,I,B);return!1}return!0},ED=(D,I)=>ZD(D,I),GD=(D,I)=>ZD(D,I,["data","id"]);class CT{_size=1/0;_head=null;_tail=null;_currentSize=0;_secureStore="Map";_map=null;static random(D){let{length:I,from:B=0,to:L=1,seed:S=123456,callback:x,mapType:R="Map"}=D,H=new CT;return H.mapType=R,YD(H,I,B,L,S,x),H}constructor(D,I=1/0){if(this.size=I,D)this.addLast(D)}get size(){return this._size}get mapType(){return this._secureStore}set mapType(D){this._secureStore=D,this._map=JD(this.mapType)}set size(D){this._size=D}get head(){return this._head?.data||null}get top(){return this._tail?.data||null}get length(){return this._currentSize}get isEmpty(){return this.length===0&&this._head===this._tail&&this._head===null}addLast(D,I){if(D){if(this._size<this._currentSize+1)p("DoublyLinkedList addLast")();let B=new N(D);if(I)B.id=I;if(this._head)this._tail.next=B,B.prev=this._tail;else this._head=B;this._tail=B,this._currentSize++,UT(B,this._map)}return this}removeLast(){if(!this._head)k("DoublyLinkedList removeLast")();let D=this.top;if(zT(this._tail?.id,this._map),this._head===this._tail)this._head=null,this._tail=null;else this._tail=this._tail.prev,this._tail.next=null;return this._currentSize--,D}removeFirst(){if(!this._head)k("DoublyLinkedList removeFirst")();let D=this._head?.data;if(zT(this._head?.id,this._map),this._head===this._tail)this._head=null,this._tail=null;else this._head=this._head?.next,this._head.prev=null;return this._currentSize--,D}remove(D){let I=this._findNodeById(D);if(I){if(zT(I.id,this._map),this._head.id===D)this.removeFirst();else if(this._tail.id===D)this.removeLast();else I.next.prev=I.prev,I.prev.next=I.next;return I.prev=null,I.next=null,this._currentSize--,I.data}return null}insertAfter(D,I,B){let L=this._findNodeById(D),S=new N(I);if(B)S.id=B;if(L){if(this._size<this._currentSize+1)p("DoublyLinkedList insertAfter")();if(S.prev=L,S.next=L.next,L===this._tail)this._tail=S;else L.next.prev=S;L.next=S,UT(S,this._map),this._currentSize++}return this}insertBefore(D,I,B){let L=this._findNodeById(D),S=new N(I);if(B)S.id=B;if(L){if(this._size<this._currentSize+1)p("DoublyLinkedList insertBefore")();if(S.prev=L.prev,S.next=L,L===this._head)this._head=S;else L.prev.next=S;L.prev=S,UT(S,this._map),this._currentSize++}return this}values(){let D=new Map;return this.traverse((I,B)=>D.set(B,I)),D}has(D){return this._findNodeById(D)!==null}traverse(D,I=!1){let B=I?this._tail:this._head;return ID(D,B,this,I),this}loop(D,I=!1){let B=I?this._tail:this._head;return LD(D,B,this,I),this}filter(D,I=!1){let B=new CT,L=I?this._tail:this._head;return SD(L,D,this,B,I),B}copy(D=!1){let I=new CT;return I.size=this.size,I._secureStore=this._secureStore,this.traverse((B,L)=>{let S=new N(B);S.id=L,I.addLast(S.data)},D),I}every(D){let I=!1;return this.loop((B,L,S)=>(I=D(B,L,S),I)),I}any(D){let I=!1;return this.loop((B,L,S)=>(I=D(B,L,S),!I)),I}clean(){return this._size=1/0,this._currentSize=0,this._head=null,this._tail=null,this._secureStore="Map",this._map=new Map,this}merge(D){if(!D.isEmpty){if(this._size=this._size+D._size,this.isEmpty)this._head=D._head,this._tail=D._tail;else{let I=this._tail;I.next=D._head,I.next.prev=this._tail,this._tail=D._tail}this._currentSize+=D._currentSize}return this}[Symbol.iterator](){let D=this._head;return{next(){if(D){let I=D.data;return D=D.next,{value:I,done:!1}}return{value:void 0,done:!0}}}}isSame(D){let I=this._head,B=D._head;if(this.length!==D.length)return!1;return ED(I,B)}isExactlySame(D){let I=this._head,B=D._head;if(this.length!==D.length)return!1;if(this._secureStore!==D._secureStore)return!1;return GD(I,B)}_findNodeById(D){let I=null;if(this._map)I=KD(D,this._map);else I=BD(D,this._head);return I}}function OD(D){return function(I,B,L){let S=L.value;L.value=function(x){if(typeof x!=="undefined"&&this.length>=this.size)D();return S.call(this,x)}}}var ND=(D,I,B)=>{while(I>0){let L=I-1>>1;if(!(B==="max"?D[I].id>D[L].id:D[I].id<D[L].id))break;[D[I],D[L]]=[D[L],D[I]],I=L}};var VR=(D,I,B,L)=>{while(!0){let S=(I<<1)+1,x=S+1,R=I;if(S<B&&(L==="max"?D[S].id>D[R].id:D[S].id<D[R].id))R=S;if(x<B&&(L==="max"?D[x].id>D[R].id:D[x].id<D[R].id))R=x;if(R===I)break;[D[I],D[R]]=[D[R],D[I]],I=R}},_T=(D,I)=>{for(let B=D.length-2>>1;B>=0;B--)VR(D,B,D.length,I)};var QD=(D,I,B)=>{let L=[],S=(x)=>{if(x>=D.length)return;let R=D[x];if(R.id===I)L.push(R);if(B==="max"?R.id<I:R.id>I)return;S((x<<1)+1),S((x<<1)+2)};return S(0),L.length?L:null};var fD=(D,I,B)=>{let L=-1,S=(x)=>{if(x>=D.length)return;let R=D[x];if(R.id===I){L=x;return}if(B==="max"?R.id<I:R.id>I)return;S((x<<1)+1),S((x<<1)+2)};return S(0),L};class hT{_heap=[];_type="max";_size=1/0;_compare=(D,I)=>D>I?1:D<I?-1:0;static from(D,I=1/0,B="max"){let L=new hT;return L.size=I,L.type=B,L._heap=D.map((S)=>new TT(S)),_T(L._heap,B),L}constructor(D){this.add(D)}get compare(){return this._compare}set compare(D){this._compare=D}get length(){return this._heap.length}set length(D){this._heap.length=D}get size(){return this._size}set size(D){this._size=D}get type(){return this._type}set type(D){this._type=D}add(D){if(typeof D==="undefined"||D===null)return this;let I=new TT(D);return this._heap[this._heap.length]=I,ND(this._heap,this.length-1,this.type),this}search(D){return QD(this._heap,D,this.type)}searchIndex(D){return fD(this._heap,D,this.type)}remove(D){let I=this.searchIndex(D);if(I===-1)return null;let[B]=this._heap.splice(I,1);return _T(this._heap,this.type),B.data}merge(D){if(D._heap.length){if(this._heap=this._heap.concat(D._heap),this._heap.length>this.size)this.size=this._heap.length;_T(this._heap,this.type)}return this}toArray(){return this._heap.map((D)=>D.data)}[Symbol.iterator](){let D=this._heap,I=0;return{next(){if(I<D.length)return{value:D[I++].data,done:!1};return{value:void 0,done:!0}}}}}CD([OD(p("PrimaryHeap.add")),qT("design:type",Function),qT("design:paramtypes",[typeof T==="undefined"?Object:T]),qT("design:returntype",typeof hT==="undefined"?Object:hT)],hT.prototype,"add",null);class D1 extends hT{constructor(D){super(D)}}class m{__G__=new Map;__S__=null;constructor({nodes:D,edges:I,state:B}={}){if(D)this.nodes=D;if(I)this.edges=I;if(B)this.state=B}get state(){return this.__S__}set state(D){this.__S__=D}get nodes(){let D=this.__G__,I=[];return D.forEach((B)=>I.push({name:B.name,data:B.data})),I}set nodes(D){for(let I of D)this.addNode(I)}get edges(){let D=this.__G__,I=[];return D.forEach((B)=>{B.outgoing.forEach((L)=>I.push({source:L.source.name,target:L.target.name,data:L.data}))}),I}set edges(D){for(let I of D)this.addEdge({...I,params:{}})}getNodeInstance(D){return this.__G__.get(D)||null}getNode(D){let I=this.__G__.get(D);if(!I)return null;return{name:I.name,data:I.data}}addNode({name:D,data:I,options:B={}}){let L=(R)=>`Node with name ${R} already exists.`,S=this.__G__;if(S.has(D))throw new Error(L(D));let x=this.createNode({name:D,data:I,options:B});return S.set(D,x),this}getEdgeInstance({source:D,target:I}){let B=this.__G__,L=B.get(D),S=B.get(I);if(!L)return null;if(!S)return null;return L.getConnection(I)||null}getEdge({source:D,target:I}){let B=this.__G__,L=B.get(D),S=B.get(I);if(!L)return null;if(!S)return null;let x=L.getConnection(I)||null;if(!x)return null;return{source:x.source.name,target:x.target.name,data:x.data}}addEdge({source:D,target:I,data:B,params:L}){let S=this.__G__,x=`Edge with source ${D} and target ${I} already exists.`,R=($)=>`Node with name ${$} not exists.`,H=S.get(D),M=S.get(I);if(!H)throw new Error(R(D));if(!M)throw new Error(R(I));if(H.outgoing.has(I))throw new Error(x);return H.connect({node:M,data:B,params:L}),this}removeNode(D){let I=this.__G__,B=I.get(D);if(!B)return null;let{incoming:L,outgoing:S}=B;for(let[x,R]of L)R.source.outgoing.delete(D);for(let[x,R]of S)R.target.incoming.delete(D);return I.delete(D),B}removeEdge({source:D,target:I}){let B=this.__G__,L=B.get(D),S=B.get(I);if(!L)return null;if(!S)return null;return L.removeConnection({node:S})||null}}class O extends m{weightFn=(D)=>D;static erdosRenyi(D,I){let B=new O;for(let L=0;L<D;L++)B.addNode({name:`v${L}`,data:L,options:{value:1}});for(let L=0;L<D;L++)for(let S=L+1;S<D;S++)if(Math.random()<I)B.addEdge({source:`v${L}`,target:`v${S}`,data:null,params:{weight:1}}),B.addEdge({source:`v${S}`,target:`v${L}`,data:null,params:{weight:1}});return B}static ringLattice(D,I){let B=new O;for(let L=0;L<D;L++)B.addNode({name:`v${L}`,data:L,options:{value:1}});for(let L=0;L<D;L++)for(let S=1;S<=I;S++){let x=(L+S)%D;B.addEdge({source:`v${L}`,target:`v${x}`,data:null,params:{weight:1}}),B.addEdge({source:`v${x}`,target:`v${L}`,data:null,params:{weight:1}})}return B}static wattsStrogatz(D,I,B){let L=O.ringLattice(D,I),S=[...L.__G__.keys()];for(let x=0;x<D;x++)for(let R=1;R<=I;R++){let H=`v${x}`,M=`v${(x+R)%D}`;if(Math.random()<B){L.removeEdge({source:H,target:M}),L.removeEdge({source:M,target:H});let $=H;while($===H||L.getEdgeInstance({source:H,target:$}))$=S[Math.floor(Math.random()*D)];L.addEdge({source:H,target:$,data:null,params:{weight:1}}),L.addEdge({source:$,target:H,data:null,params:{weight:1}})}}return L}static barabasiAlbert(D,I){let B=new O,L=Math.max(2,I);for(let x=0;x<L;x++)B.addNode({name:`v${x}`,data:x,options:{value:1}});for(let x=0;x<L;x++)for(let R=x+1;R<L;R++)B.addEdge({source:`v${x}`,target:`v${R}`,data:null,params:{weight:1}}),B.addEdge({source:`v${R}`,target:`v${x}`,data:null,params:{weight:1}});let S=new Array(L).fill(L-1);for(let x=L;x<D;x++){B.addNode({name:`v${x}`,data:x,options:{value:1}});let R=new Set,H=S.reduce((M,$)=>M+$,0);while(R.size<I&&R.size<B.order-1){let M=Math.random()*H,$=0;for(let F=0;F<x;F++)if($+=S[F],M<=$){R.add(F);break}}for(let M of R)B.addEdge({source:`v${x}`,target:`v${M}`,data:null,params:{weight:1}}),B.addEdge({source:`v${M}`,target:`v${x}`,data:null,params:{weight:1}}),S[M]++;S[x]=R.size}return B}static hierarchical(D){let I=new O;I.addNode({name:"0",data:0,options:{value:1}}),I.addNode({name:"1",data:1,options:{value:1}}),I.addNode({name:"2",data:2,options:{value:1}}),I.addEdge({source:"0",target:"1",data:null,params:{weight:1}}),I.addEdge({source:"1",target:"0",data:null,params:{weight:1}}),I.addEdge({source:"0",target:"2",data:null,params:{weight:1}}),I.addEdge({source:"2",target:"0",data:null,params:{weight:1}}),I.addEdge({source:"1",target:"2",data:null,params:{weight:1}}),I.addEdge({source:"2",target:"1",data:null,params:{weight:1}});let B=3;for(let L=0;L<D;L++){let S=[...I.edges];for(let x of S){let R=(B++).toString();I.addNode({name:R,data:B,options:{value:1}}),I.addEdge({source:R,target:x.source,data:null,params:{weight:1}}),I.addEdge({source:x.source,target:R,data:null,params:{weight:1}}),I.addEdge({source:R,target:x.target,data:null,params:{weight:1}}),I.addEdge({source:x.target,target:R,data:null,params:{weight:1}})}}return I}static richClub(D,I,B){let L=O.erdosRenyi(D,B),S=Array.from({length:I},(x,R)=>R);for(let x=0;x<S.length;x++)for(let R=x+1;R<S.length;R++){let H=`v${S[x]}`,M=`v${S[R]}`;if(!L.getEdgeInstance({source:H,target:M}))L.addEdge({source:H,target:M,data:null,params:{weight:1}}),L.addEdge({source:M,target:H,data:null,params:{weight:1}})}return L}static apollonian(D){let I=new O;I.addNode({name:"0",data:0,options:{value:1}}),I.addNode({name:"1",data:1,options:{value:1}}),I.addNode({name:"2",data:2,options:{value:1}});let B=(x,R,H)=>{I.addEdge({source:x,target:R,data:null,params:{weight:1}}),I.addEdge({source:R,target:x,data:null,params:{weight:1}}),I.addEdge({source:x,target:H,data:null,params:{weight:1}}),I.addEdge({source:H,target:x,data:null,params:{weight:1}}),I.addEdge({source:R,target:H,data:null,params:{weight:1}}),I.addEdge({source:H,target:R,data:null,params:{weight:1}})};B("0","1","2");let L=[["0","1","2"]],S=3;for(let x=0;x<D;x++){let R=[];for(let[H,M,$]of L){let F=(S++).toString();I.addNode({name:F,data:S,options:{value:1}}),B(H,M,F),B(H,$,F),B(M,$,F),R.push([H,M,F],[H,$,F],[M,$,F])}L=R}return I}static stochasticBlockModel(D,I,B){let L=new O,S=[],x=0;for(let H of D){let M=[];for(let $=0;$<H;$++)L.addNode({name:x.toString(),data:x,options:{value:1}}),M.push(x),x++;S.push(M)}let R=S.flat();for(let H=0;H<R.length;H++)for(let M=H+1;M<R.length;M++){let F=S.some((X)=>X.includes(R[H])&&X.includes(R[M]))?I:B;if(Math.random()<F){let X=R[H].toString(),G=R[M].toString();L.addEdge({source:X,target:G,data:null,params:{weight:1}}),L.addEdge({source:G,target:X,data:null,params:{weight:1}})}}return L}static latentSpace(D,I,B){let L=new O,S=[];for(let R=0;R<D;R++){let H=Array.from({length:I},()=>Math.random());S.push(H),L.addNode({name:R.toString(),data:H,options:{value:1}})}let x=(R,H)=>R.reduce((M,$,F)=>M+$*H[F],0);for(let R=0;R<D;R++)for(let H=R+1;H<D;H++)if(x(S[R],S[H])>B)L.addEdge({source:R.toString(),target:H.toString(),data:null,params:{weight:1}}),L.addEdge({source:H.toString(),target:R.toString(),data:null,params:{weight:1}});return L}isErdosRenyi(D=0.05){let I=this.order;if(I<2)return!0;let B=this.size/(I*(I-1)),L=2*this.size/I,S=0;for(let R of this){let H=R.outDegree+R.inDegree;S+=Math.pow(H-L,2)}S/=I;let x=L/(I-1);return Math.abs(B-x)<D&&S<L}isRingLattice(D){for(let I of this)if(I.inDegree+I.outDegree!==4*D)return!1;return!0}isBarabasiAlbert(){let D=0,I=0;for(let L of this){let S=L.inDegree+L.outDegree;if(S>D)D=S;I+=S}let B=I/this.order;return D>B*3}hasRichClub(D=0.1){if(this.order<5)return!1;let I=[...this].map((R)=>({name:R.name,deg:R.outDegree+R.inDegree}));I.sort((R,H)=>H.deg-R.deg);let B=Math.max(2,Math.floor(this.order*0.1)),L=I.slice(0,B).map((R)=>R.name),S=0;for(let R of L)for(let H of L){if(R===H)continue;if(this.getEdgeInstance({source:R,target:H}))S++}let x=B*(B-1);return S/x>this.density+D}isWattsStrogatz(D,I=0.1){let B=[...this].reduce((S,x)=>S+x.inDegree+x.outDegree,0)/this.order;if(Math.abs(B-2*D)>1)return!1;if(this.isRingLattice(D))return!1;return this.averageClusteringCoefficient()>this.density+I}isHierarchical(){let D=[];for(let B of this){let L=B.inDegree+B.outDegree,S=this.nodeClusteringCoefficient(B.name);D.push([L,S])}D.sort((B,L)=>B[0]-L[0]);let I=1/0;for(let[B,L]of D){if(B>I&&L>D.find((S)=>S[0]===I)[1])return!1;I=B}return!0}isApollonian(){let D=this.order;return this.size/2===3*D-6}isStochasticBlockModel(){return this.averageClusteringCoefficient()>this.density*1.5}isLatentSpace(){if(![...this].slice(0,5).every((L)=>Array.isArray(L.data)))return!1;let I=0,B=0;for(let L of this.edges){let S=this.getNodeInstance(L.source),x=this.getNodeInstance(L.target);if(Array.isArray(S.data)&&Array.isArray(x.data)){let R=S.data.reduce((H,M,$)=>H+M*x.data[$],0);I+=R,B++}}return B>0&&I/B>0}nodeClusteringCoefficient(D){let I=this.getNodeInstance(D);if(!I)return 0;let B=new Set;for(let R of I.outgoing.values())B.add(R.target.name);for(let R of I.incoming.values())B.add(R.source.name);let L=[...B],S=L.length;if(S<2)return 0;let x=0;for(let R=0;R<S;R++)for(let H=R+1;H<S;H++)if(this.getEdgeInstance({source:L[R],target:L[H]})||this.getEdgeInstance({source:L[H],target:L[R]}))x++;return 2*x/(S*(S-1))}averageClusteringCoefficient(){let D=0;for(let I of this)D+=this.nodeClusteringCoefficient(I.name);return D/this.order}static nCube(D){let I=new O,B=1<<D;for(let L=0;L<B;L++){let S=L.toString(2).padStart(D,"0").split("").map(Number);I.addNode({name:L.toString(),data:S,options:{value:1}})}for(let L=0;L<B;L++)for(let S=0;S<D;S++){let x=L^1<<S;I.addEdge({source:L.toString(),target:x.toString(),data:null,params:{weight:1}})}return I}constructor({nodes:D,edges:I,weightFn:B}={}){super({nodes:D,edges:I});if(B)this.weightFn=B}createNode({name:D,data:I,options:B}){return new QT({name:D,data:I,...B})}getNode(D){let B=this.__G__.get(D);if(!B)return null;return{name:B.name,data:B.data,value:B.value}}inDegree(D){let I=`Node with name ${D} does not exists in the graph.`,L=this.__G__.get(D);if(!L)throw new Error(I);return L.inDegree}outDegree(D){let I=`Node with name ${D} does not exists in the graph.`,L=this.__G__.get(D);if(!L)throw new Error(I);return L.outDegree}get order(){return this.__G__.size}get weightedOrder(){let D=0;for(let I of this)D+=I.value;return D}get size(){let D=0;for(let I of this)D+=I.outgoing.size;return D}get weightedSize(){let D=0;for(let I of this)for(let[B,L]of I.outgoing)D+=L.weight;return D}get density(){let D=this.order;return this.size/(D*D)}get weightedDensity(){let D=this.order;return this.weightedSize/(D*D)}get nodes(){let D=[];for(let I of this)D.push({name:I.name,data:I.data,value:I.value});return D}get edges(){let D=[];for(let I of this)for(let[B,L]of I.outgoing)D.push({source:L.source.name,target:L.target.name,data:L.data,weight:L.weight});return D}adjacencyMatrix(D=this.weightFn){let I=[...this.__G__.keys()],B=new Map;I.forEach((S,x)=>B.set(S,x));let L=I.map(()=>Array(I.length).fill(0));for(let S of this){let x=B.get(S.name);for(let R of S.outgoing.values()){let H=B.get(R.target.name);L[x][H]=D(R.weight,R.data,this)}}return L}clone(){let D=new O;for(let I of this.nodes)D.addNode({name:I.name,data:I.data,options:{value:I.value}});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:I.weight}});return D}BFSNode({startingNode:D,callback:I=()=>{},errorCallback:B=(L,S)=>console.log(S.message)}){let L=new Q,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.enqueue(x),S.add(x.name);while(!L.isEmpty){let R=L.dequeue();try{I(R,this)}catch(H){B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.enqueue(M)}}return this}async BFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:B=async(L,S)=>console.log(S.message)}){let L=new Q,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.enqueue(x),S.add(x.name);while(!L.isEmpty){let R=L.dequeue();try{await I(R,this)}catch(H){await B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.enqueue(M)}}return this}BFS({callback:D=()=>{},errorCallback:I=(B,L)=>console.log(L.message)}={}){let B=new Q,L=new Set;for(let S of this){if(L.has(S.name))continue;B.enqueue(S),L.add(S.name);while(!B.isEmpty){let x=B.dequeue();try{D(x,this)}catch(R){I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.enqueue(H),L.add(H.name)}}}return this}async BFSAsync({callback:D=async()=>{},errorCallback:I=async(B,L)=>console.log(L.message)}={}){let B=new Q,L=new Set;for(let S of this){if(L.has(S.name))continue;B.enqueue(S),L.add(S.name);while(!B.isEmpty){let x=B.dequeue();try{await D(x,this)}catch(R){await I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.enqueue(H),L.add(H.name)}}}return this}DFS({callback:D=()=>{},errorCallback:I=(B,L)=>console.log(L.message)}){let B=new E,L=new Set;for(let S of this){if(L.has(S.name))continue;B.push(S),L.add(S.name);while(!B.isEmpty){let x=B.pop();try{D(x,this)}catch(R){I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.push(H),L.add(H.name)}}}return this}async DFSAsync({callback:D=async()=>{},errorCallback:I=async(B,L)=>console.log(L.message)}={}){let B=new E,L=new Set;for(let S of this){if(L.has(S.name))continue;B.push(S),L.add(S.name);while(!B.isEmpty){let x=B.pop();try{await D(x,this)}catch(R){await I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.push(H),L.add(H.name)}}}return this}DFSNode({startingNode:D,callback:I=()=>{},errorCallback:B=(L,S)=>console.log(S.message)}){let L=new E,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.push(x),S.add(x.name);while(!L.isEmpty){let R=L.pop();try{I(R,this)}catch(H){B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.push(M)}}return this}async DFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:B=async(L,S)=>console.log(S.message)}){let L=new E,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.push(x),S.add(x.name);while(!L.isEmpty){let R=L.pop();try{await I(R,this)}catch(H){await B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.push(M)}}return this}subgraph({callback:D}){let I=new O,B=new Set;for(let L of this)if(D(L,this))I.addNode({name:L.name,data:L.data,options:{value:L.value}}),B.add(L.name);for(let L of this.edges)if(B.has(L.source)&&B.has(L.target))I.addEdge({source:L.source,target:L.target,data:L.data,params:{weight:L.weight}});return I}union(D){let I=this.clone();for(let B of D.nodes)if(!I.getNodeInstance(B.name))I.addNode({name:B.name,data:B.data,options:{value:B.value}});for(let B of D.edges)if(!I.getEdgeInstance({source:B.source,target:B.target}))I.addEdge({source:B.source,target:B.target,data:B.data,params:{weight:B.weight}});return I}difference(D){let I=this.clone();for(let B of D.nodes)if(I.getNodeInstance(B.name))I.removeNode(B.name);for(let B of D.edges)I.removeEdge({source:B.source,target:B.target});return I}kronecker(D){let I=new O;for(let B of this)for(let L of D)I.addNode({name:`${B.name}|${L.name}`,data:[B.data,L.data],options:{value:B.value*L.value}});for(let B of this.edges)for(let L of D.edges)I.addEdge({source:`${B.source}|${L.source}`,target:`${B.target}|${L.target}`,data:[B.data,L.data],params:{weight:B.weight*L.weight}});return I}isConnected(){if(this.order===0)return!0;let D=this.__G__.values().next().value,I=new Set,B=[D];I.add(D.name);while(B.length){let L=B.pop();for(let S of L.outgoing.values()){let x=S.target;if(!I.has(x.name))I.add(x.name),B.push(x)}for(let S of L.incoming.values()){let x=S.source;if(!I.has(x.name))I.add(x.name),B.push(x)}}return I.size===this.order}bridges(D=this.weightFn){let I=new Map;for(let $ of this)I.set($.name,new Set);for(let $ of this)for(let F of $.outgoing.values()){if(D(F.weight,F.data,this)<=0)continue;if(I.get($.name).add(F.target.name),!I.has(F.target.name))I.set(F.target.name,new Set);I.get(F.target.name).add($.name)}let B=new Set,L=new Map,S=new Map,x=new Map,R=[],H=0,M=($)=>{B.add($),L.set($,++H),S.set($,L.get($));for(let F of I.get($)||[])if(!B.has(F)){if(x.set(F,$),M(F),S.set($,Math.min(S.get($),S.get(F))),S.get(F)>L.get($)){let X=this.getEdgeInstance({source:$,target:F})||this.getEdgeInstance({source:F,target:$});if(X){let G=D(X.weight,X.data,this);if(G>0)R.push({source:X.source.name,target:X.target.name,data:X.data,weight:G})}}}else if(F!==x.get($))S.set($,Math.min(S.get($),L.get(F)))};for(let $ of this)if(!B.has($.name))x.set($.name,null),M($.name);return R}directedBridges(D=this.weightFn){let I=[];for(let B of this)for(let L of B.outgoing.values()){let S=D(L.weight,L.data,this);if(S<=0)continue;let x=B.name,R=L.target.name,H=[x],M=new Set([x]),$=!1;while(H.length&&!$){let F=H.pop(),X=this.getNodeInstance(F);for(let G of X.outgoing.values()){if(D(G.weight,G.data,this)<=0)continue;if(F===x&&G.target.name===R)continue;let pT=G.target.name;if(pT===R){$=!0;break}if(!M.has(pT))M.add(pT),H.push(pT)}}if(!$)I.push({source:x,target:R,data:L.data,weight:S})}return I}cycles(){let D=[],I=[],B=new Set,L=new Set,S=new Set,x=(R)=>{L.add(R.name),B.add(R.name),I.push(R.name);for(let H of R.outgoing.values()){let M=H.target;if(!B.has(M.name)){if(!L.has(M.name))x(M)}else{let $=I.indexOf(M.name);if($!==-1){let F=[...I.slice($),M.name],X=F.join("->");if(!S.has(X))D.push(F),S.add(X)}}}I.pop(),B.delete(R.name)};for(let R of this)if(!L.has(R.name))x(R);return D}Hamiltonian(){let D=this.order;if(D===0)return[];let B=[...this.__G__.keys()][0],L=new E,S=new Set,x=(R)=>{if(S.add(R),L.push(R),L.size===D){if(this.__G__.get(R).outgoing.has(B))return L.push(B),!0}for(let[H]of this.__G__.get(R).outgoing)if(!S.has(H)&&x(H))return!0;return S.delete(R),L.pop(),!1};if(x(B))return[...L];return null}topologicalOrder(){let D=new Map,I=[],B=[];for(let L of this){let S=L.incoming.size;if(D.set(L.name,S),S===0)I.push(L)}while(I.length){let L=I.shift();B.push(L.name);for(let S of L.outgoing.values()){let x=S.target,R=(D.get(x.name)||0)-1;if(D.set(x.name,R),R===0)I.push(x)}}return B.length===this.order?B:null}shortestPath({start:D,end:I}){let B=this.getNodeInstance(D),L=this.getNodeInstance(I);if(!B||!L)return null;let S=new Map,x=new Map,R=new Set;for(let M of this)S.set(M.name,1/0),x.set(M.name,null);S.set(D,0);while(R.size<this.order){let M=null,$=1/0;for(let[X,G]of S)if(!R.has(X)&&G<$)$=G,M=X;if(M===null)break;if(M===I)break;R.add(M);let F=this.getNodeInstance(M);for(let X of F.outgoing.values()){let G=X.target.name,v=S.get(M)+X.weight;if(v<S.get(G))S.set(G,v),x.set(G,M)}}if(S.get(I)===1/0)return null;let H=new E;for(let M=I;M;M=x.get(M)||null)H.push(M);return{distance:S.get(I),path:[...H],pathStack:H}}minimumSpanningTree(){let D=new O;for(let R of this)D.addNode({name:R.name,data:R.data,options:{value:R.value}});let I=[],B=new Set;for(let R of this)for(let H of R.outgoing.values()){let M=R.name,$=H.target.name,F=M<$?`${M}|${$}`:`${$}|${M}`;if(!B.has(F))B.add(F),I.push({source:M,target:$,weight:H.weight,data:H.data})}I.sort((R,H)=>R.weight-H.weight);let L=new Map,S=(R)=>{let H=L.get(R);while(H!==L.get(H))L.set(H,L.get(L.get(H))),H=L.get(H);return H},x=(R,H)=>{L.set(S(R),S(H))};for(let R of this)L.set(R.name,R.name);for(let R of I)if(S(R.source)!==S(R.target))D.addEdge({source:R.source,target:R.target,data:R.data,params:{weight:R.weight}}),x(R.source,R.target);return D}PRIM({start:D,weightFn:I=this.weightFn}={}){let B=new O;for(let H of this)B.addNode({name:H.name,data:H.data,options:{value:H.value}});if(this.order===0)return B;let L=D?this.getNodeInstance(D):this.__G__.values().next().value;if(!L)return B;let S=new Set,x=[],R=(H)=>{for(let M of H.outgoing.values())if(!S.has(M.target.name)){let $=I(M.weight,M.data,this);x.push({source:H.name,target:M.target.name,weight:$,data:M.data})}};S.add(L.name),R(L);while(S.size<this.order&&x.length){x.sort(($,F)=>$.weight-F.weight);let H=x.shift();while(H&&S.has(H.target))H=x.shift();if(!H)break;B.addEdge({source:H.source,target:H.target,data:H.data,params:{weight:H.weight}}),S.add(H.target);let M=this.getNodeInstance(H.target);R(M)}return B}PERT(D=this.weightFn){let I=this.topologicalOrder(),B=new Map;if(!I)return B;for(let L of I){let S=this.getNodeInstance(L),x=0;for(let R of S.incoming.values()){let H=D(R.weight,R.data,this);if(H<=0)continue;let M=(B.get(R.source.name)||0)+H;if(M>x)x=M}B.set(L,x)}return B}CPM(D=this.weightFn){let I=this.topologicalOrder(),B=new Map,L=new Map;if(!I)return{duration:0,path:[],pathStack:new E};for(let H of I){let M=0,$=null,F=this.getNodeInstance(H);for(let X of F.incoming.values()){let G=D(X.weight,X.data,this);if(G<=0)continue;let v=(B.get(X.source.name)||0)+G;if(v>M)M=v,$=X.source.name}B.set(H,M),L.set(H,$)}let S=I[0],x=B.get(S)||0;for(let H of I){let M=B.get(H);if(M>x)x=M,S=H}let R=new E;for(let H=S;H;H=L.get(H)||null)R.push(H);return{duration:x,path:[...R],pathStack:R}}biGraph(){if(this.order===0)return!0;let D=new Map;for(let I of this){if(D.has(I.name))continue;D.set(I.name,0);let B=new Q(I);while(B.length){let L=B.dequeue(),S=D.get(L.name),x=[];for(let R of L.outgoing.values())x.push(R.target);for(let R of L.incoming.values())x.push(R.source);for(let R of x)if(!D.has(R.name))D.set(R.name,1-S),B.enqueue(R);else if(D.get(R.name)===S)return!1}}return!0}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}class y extends m{static nCube(D){let I=new y,B=1<<D;for(let L=0;L<B;L++){let S=L.toString(2).padStart(D,"0").split("").map(Number);I.addNode({name:L.toString(),data:S})}for(let L=0;L<B;L++)for(let S=0;S<D;S++){let x=L^1<<S;I.addEdge({source:L.toString(),target:x.toString(),data:null,params:{}})}return I}createNode({name:D,data:I,options:B}){return new e({name:D,data:I,...B})}inDegree(D){let I=`Node with name ${D} does not exists in the graph.`,L=this.__G__.get(D);if(!L)throw new Error(I);return L.inDegree}outDegree(D){let I=`Node with name ${D} does not exists in the graph.`,L=this.__G__.get(D);if(!L)throw new Error(I);return L.outDegree}get order(){return this.__G__.size}get size(){let D=0;for(let I of this)D+=I.outgoing.size;return D}get density(){let D=this.order;return this.size/(D*D)}BFSNode({startingNode:D,callback:I=()=>{},errorCallback:B=(L,S)=>console.log(S.message)}){let L=new Q,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.enqueue(x),S.add(x.name);while(!L.isEmpty){let R=L.dequeue();try{I(R,this)}catch(H){B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.enqueue(M)}}return this}async BFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:B=async(L,S)=>console.log(S.message)}){let L=new Q,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.enqueue(x),S.add(x?.name);while(!L.isEmpty){let R=L.dequeue();try{await I(R,this)}catch(H){await B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.enqueue(M)}}return this}BFS({callback:D=()=>{},errorCallback:I=(B,L)=>console.log(L.message)}={}){let B=new Q,L=new Set;for(let S of this){if(L.has(S.name))continue;B.enqueue(S),L.add(S.name);while(!B.isEmpty){let x=B.dequeue();try{D(x,this)}catch(R){I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.enqueue(H),L.add(H.name)}}}return this}async BFSAsync({callback:D=async()=>{},errorCallback:I=async(B,L)=>console.log(L.message)}={}){let B=new Q,L=new Set;for(let S of this){if(L.has(S.name))continue;B.enqueue(S),L.add(S.name);while(!B.isEmpty){let x=B.dequeue();try{await D(x,this)}catch(R){await I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.enqueue(H),L.add(H.name)}}}return this}DFS({callback:D=()=>{},errorCallback:I=(B,L)=>console.log(L.message)}){let B=new E,L=new Set;for(let S of this){if(L.has(S.name))continue;B.push(S),L.add(S.name);while(!B.isEmpty){let x=B.pop();try{D(x,this)}catch(R){I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.push(H),L.add(H.name)}}}return this}async DFSAsync({callback:D=async()=>{},errorCallback:I=async(B,L)=>console.log(L.message)}={}){let B=new E,L=new Set;for(let S of this){if(L.has(S.name))continue;B.push(S),L.add(S.name);while(!B.isEmpty){let x=B.pop();try{await D(x,this)}catch(R){await I(x,R,this)}for(let R of x.outgoing.values()){let H=R.target;if(!L.has(H.name))B.push(H),L.add(H.name)}}}return this}DFSNode({startingNode:D,callback:I=()=>{},errorCallback:B=(L,S)=>console.log(S.message)}){let L=new E,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.push(x),S.add(x.name);while(!L.isEmpty){let R=L.pop();try{I(R,this)}catch(H){B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.push(M)}}return this}async DFSNodeAsync({startingNode:D,callback:I=async()=>{},errorCallback:B=async(L,S)=>console.log(S.message)}){let L=new E,S=new Set,x;if(D){if(typeof D==="string"){if(this.__G__.has(D))x=this.__G__.get(D)}else if(this.__G__.has(D.name))x=this.__G__.get(D.name)}if(!x)return this;L.push(x),S.add(x.name);while(!L.isEmpty){let R=L.pop();try{await I(R,this)}catch(H){await B(R,H,this)}for(let H of R.outgoing.values()){let M=H.target;if(!S.has(M.name))S.add(M.name),L.push(M)}}return this}clone(){let D=new y;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToBaseNetwork(){let D=new O;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:1}});return D}subgraph({callback:D}){let I=new y,B=new Set;for(let L of this)if(D(L,this))I.addNode({name:L.name,data:L.data}),B.add(L.name);for(let L of this.edges)if(B.has(L.source)&&B.has(L.target))I.addEdge({source:L.source,target:L.target,data:L.data,params:{}});return I}union(D){let I=this.clone();for(let B of D.nodes)if(!I.getNodeInstance(B.name))I.addNode({name:B.name,data:B.data});for(let B of D.edges)if(!I.getEdgeInstance({source:B.source,target:B.target}))I.addEdge({source:B.source,target:B.target,data:B.data,params:{}});return I}difference(D){let I=this.clone();for(let B of D.nodes)if(I.getNodeInstance(B.name))I.removeNode(B.name);for(let B of D.edges)I.removeEdge({source:B.source,target:B.target});return I}kronecker(D){let I=new y;for(let B of this)for(let L of D)I.addNode({name:`${B.name}|${L.name}`,data:[B.data,L.data]});for(let B of this.edges)for(let L of D.edges)I.addEdge({source:`${B.source}|${L.source}`,target:`${B.target}|${L.target}`,data:[B.data,L.data],params:{}});return I}isConnected(){if(this.order===0)return!0;let D=this.__G__.values().next().value,I=new Set,B=[D];I.add(D.name);while(B.length){let L=B.pop();for(let S of L.outgoing.values()){let x=S.target;if(!I.has(x.name))I.add(x.name),B.push(x)}for(let S of L.incoming.values()){let x=S.source;if(!I.has(x.name))I.add(x.name),B.push(x)}}return I.size===this.order}bridges(){let D=new Map;for(let M of this)D.set(M.name,new Set);for(let M of this)for(let $ of M.outgoing.values()){if(D.get(M.name).add($.target.name),!D.has($.target.name))D.set($.target.name,new Set);D.get($.target.name).add(M.name)}let I=new Set,B=new Map,L=new Map,S=new Map,x=[],R=0,H=(M)=>{I.add(M),B.set(M,++R),L.set(M,B.get(M));for(let $ of D.get(M)||[])if(!I.has($)){if(S.set($,M),H($),L.set(M,Math.min(L.get(M),L.get($))),L.get($)>B.get(M)){let F=this.getEdge({source:M,target:$})||this.getEdge({source:$,target:M});x.push(F||{source:M,target:$,data:null})}}else if($!==S.get(M))L.set(M,Math.min(L.get(M),B.get($)))};for(let M of this)if(!I.has(M.name))S.set(M.name,null),H(M.name);return x}directedBridges(){let D=[];for(let I of this)for(let B of I.outgoing.values()){let L=I.name,S=B.target.name,x=[L],R=new Set([L]),H=!1;while(x.length&&!H){let M=x.pop(),$=this.__G__.get(M);for(let F of $.outgoing.values()){if(M===L&&F.target.name===S)continue;let X=F.target.name;if(X===S){H=!0;break}if(!R.has(X))R.add(X),x.push(X)}}if(!H)D.push({source:L,target:S,data:B.data})}return D}cycles(){let D=[],I=[],B=new Set,L=new Set,S=new Set,x=(R)=>{L.add(R.name),B.add(R.name),I.push(R.name);for(let H of R.outgoing.values()){let M=H.target;if(!B.has(M.name)){if(!L.has(M.name))x(M)}else{let $=I.indexOf(M.name);if($!==-1){let F=[...I.slice($),M.name],X=F.join("->");if(!S.has(X))D.push(F),S.add(X)}}}I.pop(),B.delete(R.name)};for(let R of this)if(!L.has(R.name))x(R);return D}Hamiltonian(){let D=this.order;if(D===0)return[];let B=[...this.__G__.keys()][0],L=[],S=new Set,x=(R)=>{if(S.add(R),L.push(R),L.length===D){if(this.__G__.get(R).outgoing.has(B))return L.push(B),!0}for(let[H]of this.__G__.get(R).outgoing)if(!S.has(H)&&x(H))return!0;return S.delete(R),L.pop(),!1};if(x(B))return L;return null}topologicalOrder(){let D=new Map,I=[],B=[];for(let L of this){let S=L.incoming.size;if(D.set(L.name,S),S===0)I.push(L)}while(I.length){let L=I.shift();B.push(L.name);for(let S of L.outgoing.values()){let x=S.target,R=(D.get(x.name)||0)-1;if(D.set(x.name,R),R===0)I.push(x)}}return B.length===this.order?B:null}biGraph(){if(this.order===0)return!0;let D=new Map;for(let I of this){if(D.has(I.name))continue;D.set(I.name,0);let B=[I];while(B.length){let L=B.shift(),S=D.get(L.name),x=[];for(let R of L.outgoing.values())x.push(R.target);for(let R of L.incoming.values())x.push(R.source);for(let R of x)if(!D.has(R.name))D.set(R.name,1-S),B.push(R);else if(D.get(R.name)===S)return!1}}return!0}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}class xD extends m{createNode({name:D,data:I}){return new e({name:D,data:I})}clone(){let D=new xD;for(let I of this)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToGraph(){let D=new y;for(let I of this.nodes)D.addNode({name:I.name,data:I.data});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{}});return D}upgradeToBaseNetwork(){let D=new O;for(let I of this)D.addNode({name:I.name,data:I.data,options:{value:1}});for(let I of this.edges)D.addEdge({source:I.source,target:I.target,data:I.data,params:{weight:1}});return D}toJSON(){return{nodes:this.nodes,edges:this.edges,state:this.state}}[Symbol.iterator](){return this.__G__.values()}}export{eT as StaticStack,xD as StateGraph,Q as Queue,hT as PrimaryHeap,D1 as Heap,y as Graph,E as DynamicStack,CT as DoublyLinkedList,O as BaseNetwork,m as BaseGraph,fT as BST,j as AVLTree};
